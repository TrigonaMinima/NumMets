Despicable Me
Despicable Me is a 2010 American computer-animated 3D comedy film from Universal Pictures and Illumination Entertainment that was released on July 9, 2010 in the United States. It is Illumination Entertainment's first film. It was directed by Pierre Coffin and Chris Renaud, based on an original story by Sergio Pablos.
The film stars the voice of Steve Carell as Gru, a super-villain who adopts three girls (the voices of Miranda Cosgrove, Dana Gaier, and Elsie Fisher) from an orphanage; and the voice of Jason Segel as Vector, a rival of Gru who steals the Great Pyramid of Giza. When Gru learns of Vector's heist, he plans an even greater heist: to shrink and steal the Earth's moon.
It was entirely animated by the French animation studio Mac Guff, which was later acquired by Illumination Entertainment.[2]
The film earned positive reviews from critics, and grossed over $543 million worldwide, against a budget of $69 million.[1] A sequel, Despicable Me 2, released on July 3, 2013, is to be followed by a spin-off featuring Gru's Minions as the main characters on December 19, 2014.
Gru, a super-villain, has his pride injured when an unknown super-villain steals the Great Pyramid of Giza, an action that is described by his colleague Dr. Nefario as making "all other villains look lame." Gru decides to do better, with the assistance of Dr. Nefario, by shrinking and stealing the moon, an idea based on his childhood dream of being an astronaut, which was always discouraged by his mother Marlena. The plan is expensive and Gru seeks a loan from the Bank of Evil, where the president Mr. Perkins is impressed by the plan, but will only provide the money if Gru can obtain the necessary shrink ray first.
Gru and his minions steal the shrink ray from a secret base in Asia but the up-and-coming super-villain, Vector, who was also responsible for the Pyramid theft, immediately steals it from Gru, as revenge for freezing his head earlier. Gru attempts to break into Vector's fortress to get the shrink ray back, but is defeated by numerous booby traps. However, he notices three orphan girls Margo, Edith, and Agnes easily walk into the base to sell Vector cookies. Gru, faking his credentials as a dentist, adopts the girls from Miss Hattie's Home for Girls, planning on using them to infiltrate Vector's base so he can get the shrink ray back. However, Gru has difficulty nurturing them properly between their rambunctiousness, their ballet classes, and his own ineptitude as a parent.
Eventually, Gru and the girls arrive at Vector's fortress and Gru manages to steal the shrink ray. The girls then suggest a day at a theme park; Gru agrees, believing he can leave the girls there, but he is told by an attendant that they must be accompanied by an adult. He is then dragged around the theme park for the day, eventually warming to the girls after they compliment him over blowing up a rigged carnival game. Later, Gru contacts Mr. Perkins, stating that he finally has the shrink ray in his possession. Margo, Edith, and Agnes interrupt the meeting, and Perkins announces that he has lost confidence in Gru and will no longer fund his operations. As Gru tells the minions about the bad news, the girls offer the contents of their piggy bank to fund the plan. His minions then hand over their own savings. Gru, inspired, sacrifices parts of his lair to construct a spacecraft. Gru plans to steal the moon when it is nearest the Earth but this ends up being the same day as the girls' ballet recital. Gru becomes conflicted and Dr. Nefario, seeing this as interfering with the plan, arranges for the girls to be returned to the orphanage. At the same time, Mr. Perkins informs Vector (who is actually Mr. Perkins' son) of Gru's possession of the shrink ray and the adoption of the three girls, inciting Vector to take action. Gru successfully shrinks and steals the moon, but is too late to attend the recital — finding a note from Vector, who has kidnapped the girls, and will exchange the moon for them. After arriving at Vector's lair, Gru readily makes the trade, but Vector reneges on the deal, flying off with the girls and the moon, much to Gru's anger. Meanwhile, Dr. Nefario has discovered that the effects of the shrink ray are temporary; the bigger the object was originally, the faster it will regain its original size. As the moon starts to expand in Vector's ship, Gru, Dr. Nefario, and the minions pull off a daring mid-air rescue of the girls just as the moon explodes out of Vector's ship and launches itself back into orbit, with Vector trapped on it.
Some time later, Gru has readopted the girls and treats them as his daughters, writing them a bedtime storybook framed around his own experience. The film ends with the girls performing their own ballet recital for Gru, Marlena, Dr. Nefario, and the minions.
Cast[edit source | editbeta]

Steve Carell as Felonious Gru, a supervillain.
Jason Segel as Victor "Vector" Perkins, Mr. Perkins' son who often undermines Gru with more advanced technology.
Russell Brand as Dr. Nefario, Gru's personal and friendly scientist.
Julie Andrews as Marlena Gru, Gru's mother who always berates her son.
Miranda Cosgrove as Margo, the oldest of the three girls who is known for her wit.
Dana Gaier as Edith, the middle sister of the three girls, known for her rebellious attitude.
Elsie Kate Fisher as Agnes, the youngest of the three girls, who has an obsession with unicorns.[4]
Will Arnett as Mr. Perkins, the President of the Bank of Evil and Vector's father.
Kristen Wiig as Miss Hattie, a dominating woman that runs Miss Hattie's Home for Girls.
Pierre Coffin as Tim, Bob, Mark, Phil, and Stuart, five of Gru's Minions.
Chris Renaud as Dave, Billy and Larry, three of Gru's Minions.
Jemaine Clement as Kevin and Jerry, two of Gru's Minions.
Jack McBrayer as Carnival Barker/Tourist Father
Ken Jeong as Talk Show Host, the announcer of the news.
Danny McBride as Fred McDade, Gru's average neighbor who has difficulty understanding Gru.
Mindy Kaling as Tourist Mother, Justin's mother.
Music[edit source | editbeta]

Main article: Despicable Me: Original Motion Picture Soundtrack
Despicable Me: Original Motion Picture Soundtrack is the soundtrack to the film of the same name, and it was released on July 6, 2010. It features new songs from the film written and performed by Pharrell Williams, and performances by Destinee & Paris, The Sylvers, Robin Thicke and The Bee Gees.[citation needed]
Release[edit source | editbeta]

Marketing[edit source | editbeta]
NBC (which is owned by Universal) had an extensive marketing campaign leading up to the film's release. Sneak peeks were shown in episodes of The Biggest Loser. Despicable Me was also featured on Last Comic Standing when Gru comes in to audition. IHOP restaurants promoted the film by introducing three new menu items, a kids' breakfast meal, and a drink all having the word "minion" in them.[5]
Airheads candy released packages of the characters and came with a code for the Despicable Me video game.[citation needed]
Best Buy released a free smartphone application called "Best Buy Movie Mode", which translated what the Minions were saying during the end credits of the 3D theatrical release.[6] For the home media release of the film, the application was updated to translate the Minions' language throughout the entire film.[6]
Books[edit source | editbeta]
In May 2010, three books related to the movie were published, as well as the children's puppet book featured in the film. The first, My Dad the Super Villain (ISBN 0316083828), was rated as a preschool book.[7] The second, Despicable Me: The Junior Novel (ISBN 0316083801), was rated as being a Junior Reader for ages 8 to 12.[8] The third, Despicable Me: The World's Greatest Villain (ISBN 0316083771), was rated for ages 3–6 years.[9] The puppet book Sleepy Kittens (ISBN 031608381X) was written by Cinco Paul and Ken Daurio and illustrated by Eric Guillon.[10]
Video game[edit source | editbeta]
A video game titled Despicable Me: The Game was released for the PlayStation 2, PlayStation Portable and Wii. A Nintendo DS version was released under the name Despicable Me: Minion Mayhem. Namco also released a version for the iPhone and iPad platform entitled Despicable Me: Minion Mania, developed by Anino Games.[11]
Home media[edit source | editbeta]
Despicable Me was released on DVD, Blu-ray, and Blu-ray 3D on December 14, 2010. The release included three new short films, titled Home Makeover, Orientation Day and Banana.[12]
Reception[edit source | editbeta]

Critical reception[edit source | editbeta]
The film received generally positive reviews from critics. Review aggregation website Rotten Tomatoes gives a score of 81% based on 188 reviews, with an average score of 6.8/10. The site's critical consensus is: "Borrowing heavily (and intelligently) from Pixar and Looney Tunes, Despicable Me is a surprisingly thoughtful, family-friendly treat with a few surprises of its own."[13] Metacritic, another review aggregation website, assigned the film a score of 72%, based on 34 reviews from mainstream critics.[14]
Roger Ebert of the Chicago Sun-Times praised the film, awarding it three stars out of a possible four.[15] Other positive reviews came from Michael Phillips of the Chicago Tribune and Peter Travers of Rolling Stone.[16][17]
In contrast, A. O. Scott of The New York Times disliked the film, stating "while there's nothing worth despising, there's not much to remember either."[18] Mick LaSalle of the San Francisco Chronicle wrote: "There is simply nothing here, except a pretext for lots of labored, slapstick spy-versus-spy type shenanigans between the two "villains."[19]
Box-office performance[edit source | editbeta]
Released on July 9, 2010, in the United States, Despicable Me opened at the number one spot at the box office and pulled in $56.3 million, making it the third biggest opening grossing for an animated film in 2010 behind Toy Story 3 and Shrek Forever After.[20] In its second weekend, the film dipped 42% to second place behind Inception with $32.8 million earned. The film then had another drop of 27% in its third weekend and finished in third place with $23.8 million. On August 5, 2010, the film crossed the $200 million mark, becoming the first Universal film to reach the milestone since 2007's The Bourne Ultimatum.[21]
On the weekend lasting from September 3–5, 2010, it surpassed Shrek Forever After to become the second highest-grossing animated film of 2010 in the United States and Canada, behind Toy Story 3. It is also the highest-grossing non-DreamWorks/non-Disney·Pixar animated film of all time in these territories. The film has made $251,513,985 in the United States and Canada as well as an estimated $291,600,000 overseas for a worldwide total of $543,010,705, against its $69 million budget.[1] This film is also Universal's sixth highest-grossing film (unadjusted for inflation)[22] and the tenth-highest-grossing animated feature of all-time in North America.[23] In worldwide earnings, it is the sixth biggest film of Universal Studios,[24] the fourth highest-grossing animated film of 2010 trailing Toy Story 3, Shrek Forever After, and Tangled, the 24th highest-grossing animated film of all time and the 9th highest-grossing film of 2010.[25]
Sequels[edit source | editbeta]

Main article: Despicable Me 2
A sequel, Despicable Me 2, was released on July 3, 2013. It is produced by the same team that was behind the first film - along with directors Pierre Coffin and Chris Renaud, and writers Cinco Paul and Ken Daurio. Steve Carell, Russell Brand, and Miranda Cosgrove reprise their roles; Kristen Wiig returns but voices a new character. New cast members include Benjamin Bratt as Eduardo, Gru's nemesis, and Steve Coogan as Silas Ramsbottom.
Despicable Me: Minion Mayhem is a simulator ride attraction at Universal Studios Florida and coming on April 10, 2014 to Universal Studios Hollywood. The attraction is based on Universal Studios and Illumination Entertainment's 2010 animated film Despicable Me and employs the use of 3-D HD digital animation. The attraction replaced Jimmy Neutron's Nicktoon Blast in Florida and will be replacing Terminator 2 3D in Hollywood.
History[edit source | editbeta]



Some theming surrounding the ride at Universal Studios Florida
In March 2011, Universal Studios Florida announced that Jimmy Neutron's Nicktoon Blast would be closing to make way for a new attraction due to Nick no longer airing the show mentioned on the ride. The ride began seasonal operations on April 1, 2011, before officially closing on August 18, 2011.[5][6] On April 14, 2011, Universal Orlando Resort began a teaser campaign on their Facebook page where weekly hints were released leading up to the announcement of their upcoming attraction.[7][8] On May 19, 2011, the attraction was officially announced at a live webcast at Universal Orlando Resort. Universal Parks & Resorts also announced a major refurbishment of The Amazing Adventures of Spider-Man at Islands of Adventure on the same day.[2][9]
Construction for the Despicable Me attraction at Universal Studios Florida began in mid-August 2011, with the removal the former Jimmy Neutron ride.[10] After a period of construction spanning several months, the attraction soft opened to the public on June 9, 2012.[11] On July 2, 2012, Despicable Me: Minion Mayhem officially opened to the public.[4] The ride's gift shop, Super Silly Stuff, had opened prior to the ride in May 2012.[12]
On March 11, 2013, Universal Studios Hollywood announced that they would open Despicable Me: Minion Mayhem in 2014.[13] The announcement followed a series of rumours stating the park would replace the recently-closed T2 3-D: Battle Across Time attraction with a Despicable Me attraction.[14][15] A later announcement revealed the surrounding area would be themed as Super Silly Fun Land.[16]
On August 3, 2013, it was announced that Despicable Me: Minion Mayhem's Hollywood attraction would open on April 10, 2014.
Overview[edit source | editbeta]

Universal Orlando Resort announced that the attraction is being designed by their Universal Creative company in association with Illumination Entertainment and Despicable Me film producer Chris Meledandri. The ride is a motion simulator and employs the use of high-definition 3-D Infitec projection systems, and features multiple characters from the film, including Gru, Margo, Edith, Agnes and the Minions.
The attraction at Universal Studios Florida is located in Soundstage 42 in the Production Central area. The soundstage previously housed The Funtastic World of Hanna-Barbera 1990 until 2002 and Jimmy Neutron's Nicktoon Blast from 2003 until 2011.[3] The attraction at Universal Studios Hollywood will be located on the former site of T2 3-D: Battle Across Time on the Upper Lot.[14]
Experience[edit source | editbeta]
Queue[edit source | editbeta]
When people are waiting in line for the ride, they get to learn what a Minion really needs, the profiles of Gru, Dr. Nefario, Margo, Edith, Agnes and the Minions; they also get to see a revision of the original Despicable Me film. The guests are also given a Minion-quiz, to let them test themselves to see if they are fully prepared to be a Minion. The Hollywood version will have details to look more like Gru's house than the one in Florida. The answers in the quiz are always the last options.
First pre-show room (Gru's living room)[edit source | editbeta]
First, the guests enter the room and get Minion Goggles (3-D glasses). Then the pre-show starts when Gru, the world's #1 supervillain, welcomes guests to his house and explains them that they will be trained as minions, but he also warns us that "danger lurks, at every turn". Just as he was about to begin, however, Agnes, Gru's youngest daughter, appears on-screen, chasing Kyle, Gru's pet dog, despite Gru saying that he's "trying to be evil". Then, Margo and Edith, Gru's other daughters, appear on-screen: the brown-eyed oldest, Margo, appears right next to Gru, asking what he is doing, but Gru explains he's fine. The grey-eyed tomboy, Edith, makes weird faces in front of the camera. Then Agnes appears in front of the camera along with Kyle: the former asks to the audience: "Who's the cutest doggie in the world?", while kissing the latter on the camera at the same time, leaving a smudge, then continues chasing him. Gru, however, attempts to maintain his concentration, but loses it when he sees Margo cleaning Kyle's smudge. All of a sudden, Edith appears with some sock puppet in front of the camera, mimicking the voice of an evil clown. During Edith's imitation, Agnes chases Kyle. Gru and Margo, on the other hand start to grow suspicious of Edith's behaviour. Once Gru realizes that Edith and Agnes are going way too far, he orders them to listen up and just let him explain. Once Edith and Agnes start to heed Gru's orders, Edith explains that she, along with her siblings, are "just trying to keep things interesting". Gru forces the girls to keep themselves quiet and stand still. He introduces his daughters to the audience who, in response, greet the audience. After the introduction for Gru's daughters, Gru forces the public to take a three-hour written exam, but Margo explains him not to do that, since they haven't planned it. Gru, who did not think it's a good idea, unwillingly accepts and begins by explaining about Minion Goggles, the latest invention created by his sidekick, Dr. Nefario. He tested them on Gru's very own Minions to see how they work, and what the guests should be doing during the demonstration. Gru explains to the audience that they have Nefario's guarantee. This means that the Minion Goggles will last five times longer than the person wearing them. He also explains the safety violations for the goggles, like not putting them on until you've got the permission to do that, also that it is prohibited to use the Minion Goggles to hold in anything that looks like food to us. Afterwards, Gru orders the guests to proceed to his lab and also forces them to heed his warns. Margo, Gru's oldest daughter, on the other hand, orders the guests to have fun, but Gru doesn't even smile, so the girls try to spruce him up: Edith by playing with the sock puppet, imitating the voice of an evil clown at the same time, Agnes by saying: "Come on! Smile, Gru!". However, Gru responds in a bored tone with: "I hate smiling". Then a voice tells the guests safety introductions. Next, the doors open to Gru's laboratory with Gru saying what to do while walking in the room; the guests should stay in their row and not put on their Minion Goggles yet until they're told to do so.
Second pre-show room (Gru's laboratory)[edit source | editbeta]
In this pre-show room, just before the ride, Gru, along with some Minions, enter the room and explains the public are there for a reason: henching for the world's #1 supervillain. Gru wants to take time to interview the new recruits one at a time, but explains he's working on something really big today, so he does the interviewing very fast. As Gru is about to begin, however, a Minion, holding a blueprint, interrupts him. Gru excuses the audience to wait a moment so he can read the blueprint the Minion is holding. Gru finds the blueprint good and orders the Minion to tell Doctor Nefario, his assistant, for more dynamite. When the Minion leaves, only to envolve an argument with another throwing a piece of wadded paper at him, Gru explains his plan of turning everyday ordinary human beings into Minions using a kind of device, called the Minion Gun, created by Doctor Nefario. He tested out on some human beings to see how good it functions, transforming them into Minions of all different shapes and sizes. Next, the whole audience is given a routine body scan to make sure there aren't any "human germs" in the lab by using high-density lasers. However, the scan ends up with a warning: Gru gets disappointed when that some of the guests "have not showered in like a week". This causes the Minions to make fun of the public, but they stop laughing and are forced to get back to work when Gru glares at them. Lucky for the audience, Gru is in a bit of a time crunch and warns for the rest of the audience that he will hit them with his "Pistola de pedo" if any are thinking on backing out. Next, Gru asks: "So what will it be? Minions... or farts?". However, at the same moment, Edith interrupts and imitates her father. Gru, realizing his daughters have showed up, explains to the audience to ignore them. All of a sudden, some of the Minions appear holding mega-phones, but are forced to retreat when Gru explains: "Not now!", and shoos them away. Agnes and Margo start to explain to the audience that they shouldn't be scared of Gru by calling him "just a big, bald teddy bear". The confident Gru, however, wants to prove it to his daughters by pressing a button on his computer, which causes the fart gun to go off. Because of the stench, Edith and Agnes are forced to cover their mouths, Margo and the Minions to hold their breaths. They stop doing it when Edith sniffs the room, then picks up the scent, explaining it "smells like bananas". This causes the Minions to start going mad and some lick on window. When this happens, the girls act natural. Gru, on the other hand, gets annoyed with the unexpected antics of his henchmen. Afterwards, Agnes wants to give a present to Gru. He loves to accept it, but tells her to wait, explaining that he's going to be really behind schedule; also, he has to train the public who are on the verge of becoming Minions. Margo eagerly asks Gru if the trio can assist him by training the crowd: Gru thinks for a moment, but responds with: "I do not think so." However, as Edith starts begging, Gru says that the training is very technical. It all becomes clear when Edith explains that her foster father has been reluctant for a while, not wanting to accept his daughters' willings. When Margo and Edith finally explain Gru, who's busy shooing the Minions holding fire-works away, that the Minion training is "not like it's rocket science, or even fourth grade science" and that "a training monkey can do it", he agrees irate, calmly explaining to the audience that he will leave his daughters in charge of the training. Once Edith hears this, she explains to the guests that they "are so doomed". Gru, however, orders the public to not listen to her, despite him saying that Edith might be right for once. He leaves the room and wishes the guests good luck, at exactly the same time Agnes attempts to catch up with him to give him her anniversary gift of the girls adoption. Edith, however, explains to her younger sibling that Gru already left, which made Agnes filled with sorrow, realizing that Gru may have forgotten the anniversary of their adoption, but Margo says her that he won't, also that they got an important job to do: training the audience into Minions for Gru's bidding. Margo's determination to initiate the training causes Edith to be pumped up and say: "Let's do this!". After that, the doors to the ride are opened, the public is let through and Margo instructs to the audience to not put on their minion goggles until they're told to do so by a lab assistant.
Ride[edit source | editbeta]
Once the ride begins, riders see Gru's daughters riding on some kind of hovering UFO-like vehicle. Once Edith orders Kevin the Minion to zap the riders, he pulls a lever which activates the Minion Gun, transforming the riders into Minions. Next, the riders get pushed down a long tube to training by the girls. Margo welcomes the guests to the Minion Training Grounds. As the riders slide down and avoid the water sprayers, Margo instructs the guests: "This where we test your "strength, speed and ability to not die". The audience is also forced to dodge deadly security lasers, a giant cactus, and fly swatters along the way. Once some Minions, holding "Stop" signs, force us to stop running, two Minions are being punched away by a giant boxing glove, then the riders are being punched down by another, along with two Minions, and unexpectedly stop at a giant gap. This is where Gru's daughters want us to test our problem solving and teamwork skills; the guests are forced to create a giant, human hand-like Minion-chain to get across the other side. However, once Edith uses a giant banana as bait, the Minions suddenly get distracted by it, causing the Minion-chain to break apart and the riders to accidentally fall down a long hole to the bomb transportation sector, which is a restricted area; Gru also warns us that it might be dangerous. When the girls are helping us to get out of the sector, the worst happens: bombs start to explode in the bomb transportation room; when the girls get startled by the explosions, Agnes loses her gift and the guests attempt to retrieve it by dodging the bombs, also the giant machinery on the verge of crushing the riders and the girls into pieces, like giant razor sharp blades, with Agnes barely catching it. However, when the two Minions that the guests used to follow start to fall down, Gru arrives, attempting to catch them, but he falls down along with them, only to be nearly saved by grabbing hold to the hovering vehicle that Margo, Edith and Agnes are riding. However, as Agnes is about to give her present to Gru, her adoptive father, he gets unexpectedly knocked off the vehicle by a giant mallet unseen. The girls continue, but Gru gets hit straight at the riders. The riders then suddenly end up, along with Gru's daughters, who, because of an accidental push given by us, get pushed off their vehicle, in another sector. Once in another area, Margo, Edith and Agnes are starting to float and Margo realises that she, along with the others, are in the anti-gravity recycling room. To make matters worse, a giant robot arm rises from under the girls, ending themselves up being surrounded by claws and other hazards, but they hold on to it. When this happens, Margo warns her younger siblings to just remain hold to the giant grooves of the wire to avoid being crushed. However, one of the crushers nearby startles Gru's daughters, causing Agnes to lose her present. Seeing her present for Gru floating away, Agnes is forced to risk her life and lets her go of Margo's foot and attempts to float off to recover Gru's one-year anniversary gift, narrowly avoiding a bomb, despite Margo warning her to not to. However, once Agnes recovers her one-year present by barely avoiding a giant spiked crusher, she starts floating into a giant oscillating fan, when, all of a sudden, Gru arrives, blocking the crushers with an steel beam, then saves Agnes. Seeing each other, Gru and Agnes give themselves a hug when suddenly the smashers start moving again, leaving Gru no choice but to summon all of his strength to stop the giant crusher just in time, saving all of them, including himself, from being smashed. Because of Gru's strength and pressure that he used to both save Agnes and stop the giant crusher, the anti-gravity recycling room's power goes down, and the riders, along with Gru and his daughters, land safely on a crowd of Minions. Once both the Gru residence and the guests land safely on the Minions, Gru opens Agnes' present, revealing a doll replica of himself. Despite that Agnes says "it's a little squashed", Gru finds it "absolutely perfect", and gives his daughters a hug, also giving the trio "a little something": an amusement park-like anniversary party. Once the giant doors open to the party, the riders follow the Gru residence, now riding on a hovering vehicle, avoiding the party decorations all the way to the stage. Once there, Gru congratulates us of being successful in their training. However, a rocket is fired at the Minion Gun, right next to Gru. He protects his daughters, however, the gun breaks and goes off on the riders, causing the effects to be reversed, transforming the guests into humans again. Once this happens, Gru gets disappointed, realizing the riders are "human again", orders someone off-screen for the next troop.
Post-show[edit source | editbeta]
After the ride, the door to some sort of dance party are opened. with the public dancing on Boogie Fever, along with a costumed Minion.[3]
Gift shop[edit source | editbeta]
In May 2012, the ride's gift shop Super Silly Stuff opened,[12] replacing the Nickstuff store. The store sells Despicable Me-related merchandise. The store is themed to the carnival Gru, Margo, Edith, and Agnes visit in the original film.


C++
From Wikipedia, the free encyclopedia

This article may be too technical for most readers to understand. Please help improve this article to make it understandable to non-experts, without removing the technical details. The talk page may contain suggestions. (July 2013)
Page semi-protected
Add to Google CalendarC++
Paradigm(s)	Multi-paradigm:[1] procedural, functional, object-oriented, generic
Appeared in	1983
Designed by	Bjarne Stroustrup
Stable release	ISO/IEC 14882:2011 (2011)
Typing discipline	Static, Nominative
Major implementations	LLVM Clang, GCC, Microsoft Visual C++, Intel C++ Compiler, Comeau C/C++, Sun Studio
Dialects	Embedded C++, Managed C++, C++/CLI, C++/CX
Influenced	Perl, LPC, Lua, Pike, Ada 95, Java, PHP, D, C99, C#,[2] Falcon, Seed7
Implementation language	C, C++
OS	Cross-platform (multi-platform)
Usual filename extensions	.h .hh .hpp .hxx .h++ .cc .cpp .cxx .c++
Website	News, status & discussion about Standard C++
 C++ Programming at Wikibooks
C++ (pronounced "see plus plus") is a programming language that is general purpose, statically typed, free-form, multi-paradigm and compiled. It is regarded as an intermediate-level language, as it comprises both high-level and low-level language features.[3] Developed by Bjarne Stroustrup starting in 1979 at Bell Labs, C++ was originally named C with Classes, adding object oriented features, such as classes, and other enhancements to the C programming language. The language was renamed C++ in 1983,[4] as a pun involving the increment operator.
C++ is one of the most popular programming languages[5][6] and is implemented on a wide variety of hardware and operating system platforms. As an efficient compiler to native code, its application domains include systems software, application software, device drivers, embedded software, high-performance server and client applications, and entertainment software such as video games.[7] Several groups provide both free and proprietary C++ compiler software, including the GNU Project, LLVM, Microsoft and Intel. C++ has greatly influenced many other popular programming languages, most notably C#[2] and Java.
C++ is also used for hardware design, where the design is initially described in C++, then analyzed, architecturally constrained, and scheduled to create a register-transfer level hardware description language via high-level synthesis.[8]
The language began as enhancements to C, first adding classes, then virtual functions, operator overloading, multiple inheritance, templates and exception handling, among other features. After years of development, the C++ programming language standard was ratified in 1998 as ISO/IEC 14882:1998. The standard was amended by the 2003 technical corrigendum, ISO/IEC 14882:2003. The current standard extending C++ with new features was ratified and published by ISO in September 2011 as ISO/IEC 14882:2011 (informally known as C++11).[9]
Contents  [hide] 
1 History
1.1 Etymology
1.2 Philosophy
1.3 Standardization
2 Language
2.1 Operators and operator overloading
2.2 Memory management
2.3 Templates
2.4 Objects
2.5 Polymorphism
3 Standard library
4 Parsing and processing C++ source code
5 Compatibility
5.1 Exported templates
5.2 With C
6 Criticism
7 See also
8 Further reading
9 References
10 External links
History



Bjarne Stroustrup, creator of C++
Bjarne Stroustrup, a Danish and British trained computer scientist, began his work on "C with Classes" in 1979.[4] The idea of creating a new language originated from Stroustrup's experience in programming for his Ph.D. thesis. Stroustrup found that Simula had features that were very helpful for large software development, but the language was too slow for practical use, while BCPL was fast but too low-level to be suitable for large software development. When Stroustrup started working in AT&T Bell Labs, he had the problem of analyzing the UNIX kernel with respect to distributed computing. Remembering his Ph.D. experience, Stroustrup set out to enhance the C language with Simula-like features.[10] C was chosen because it was general-purpose, fast, portable and widely used. Besides C and Simula, some other languages that inspired him were ALGOL 68, Ada, CLU and ML. At first, the class, derived class, strong typing, inlining, and default argument features were added to C via Stroustrup's "C with Classes" to C compiler, Cpre.[11]
In 1983, the name of the language was changed from C with Classes to C++ (++ being the increment operator in C). New features were added including virtual functions, function name and operator overloading, references, constants, user-controlled free-store memory control, improved type checking, and BCPL style single-line comments with two forward slashes (//), as well as the development of a proper compiler for C++, Cfront. In 1985, the first edition of The C++ Programming Language was released, providing an important reference to the language, as there was not yet an official standard.[12] The first commercial implementation of C++ was released in October of the same year.[13] Release 2.0 of C++ came in 1989 and the updated second edition of The C++ Programming Language was released in 1991.[14] New features included multiple inheritance, abstract classes, static member functions, const member functions, and protected members. In 1990, The Annotated C++ Reference Manual was published. This work became the basis for the future standard. Late feature additions included templates, exceptions, namespaces, new casts, and a Boolean type.
As the C++ language evolved, the standard library evolved with it. The first addition to the C++ standard library was the stream I/O library which provided facilities to replace the traditional C functions such as printf and scanf. Later, among the most significant additions to the standard library, was a large amount of the Standard Template Library.
It is possible to write object oriented or procedural code in the same program in C++. This has caused some concern that some C++ programmers are still writing procedural code, but are under the impression that it is object oriented, simply because they are using C++. Often it is an amalgamation of the two. This usually causes most problems when the code is revisited or the task is taken over by another coder.[15]
C++ continues to be used and is one of the preferred programming languages to develop professional applications.[16]
Etymology
According to Stroustrup: "the name signifies the evolutionary nature of the changes from C".[17] During C++'s development period, the language had been referred to as "new C", then "C with Classes". The final name is credited to Rick Mascitti (mid-1983) and was first used in December 1983. When Mascitti was questioned informally in 1992 about the naming, he indicated that it was given in a tongue-in-cheek spirit. It stems from C's "++" operator (which increments the value of a variable) and a common naming convention of using "+" to indicate an enhanced computer program. A joke goes that the name itself has a bug: due to the use of post-increment, which increments the value of the variable but evaluates to the unincremented value, C++ is no better than C, and the pre-increment ++C form should have been used instead.[18] There is no language called "C plus". ABCL/c+ was the name of an earlier, unrelated programming language. A few other languages have been named similarly to C++, most notably C-- and C#.
Philosophy
Throughout C++'s life, its development and evolution has been informally governed by a set of rules that its evolution should follow:[10]
It must be driven by actual problems and its features should be useful immediately in real world programmes.
Every feature should be implementable (with a reasonably obvious way to do so).
Programmers should be free to pick their own programming style, and that style should be fully supported by C++.
Allowing a useful feature is more important than preventing every possible misuse of C++.
It should provide facilities for organising programmes into well defined separate parts, and provide facilities for combining separately developed parts.
No implicit violations of the type system (but allow explicit violations that have been explicitly asked for by the programmer).
Make user created types have equal support and performance to built in types.
Any features that you do not use you do not pay for (e.g. in performance).
There should be no language beneath C++ (except assembly language).
C++ should work alongside other pre-existing programming languages, rather than being part of its own separate and incompatible programming environment.
If what the programmer wants to do is unknown, allow the programmer to specify (provide manual control).
Standardization
Year	C++ Standard	Informal name
1998	ISO/IEC 14882:1998[19]	C++98
2003	ISO/IEC 14882:2003[20]	C++03
2007	ISO/IEC TR 19768:2007[21]	C++TR1
2011	ISO/IEC 14882:2011[22]	C++11
In 1998, the C++ standards committee (the ISO/IEC JTC1/SC22/WG21 working group) standardized C++ and published the international standard ISO/IEC 14882:1998 (informally known as C++98). For some years after the official release of the standard, the committee processed defect reports, and in 2003 published a corrected version of the C++ standard, ISO/IEC 14882:2003. In 2005, a technical report, called the "Library Technical Report 1" (often known as TR1 for short), was released. While not an official part of the standard, it specified a number of extensions to the standard library, which were expected to be included in the next version of C++.
The latest major revision of the C++ standard, C++11, (formerly known as C++0x) was approved by ISO/IEC on 12 August 2011.[23] It has been published as 14882:2011.[24] There are plans for a minor (C++14) and a major revision (C++17) in the future.[25]
C++14 is the name being used for the next revision. C++14 is planned to be a small extension over C++11, featuring mainly bug fixes and small improvements, similarly to how C++03 was a small extension to C++98. While the name 'C++14' implies a release in 2014, this date is not fixed.
Language

C++ inherits most of C's syntax. The following is Bjarne Stroustrup's version of the Hello world program that uses the C++ Standard Library stream facility to write a message to standard output:[26][27]
# include <iostream>
 
int main()
{
   std::cout << "Hello, world!\n";
}
Within functions that define a non-void return type, failure to return a value before control reaches the end of the function results in undefined behaviour (compilers typically provide the means to issue a diagnostic in such a case).[28] The sole exception to this rule is the main function, which implicitly returns a value of zero.[29]
Operators and operator overloading
Operators that cannot be overloaded
Operator	Symbol
Scope resolution operator	 ::
Conditional operator	 ?:
dot operator	 .
Member selection operator	 .*
"sizeof" operator	 sizeof
"typeid" operator	 typeid
C++ provides more than 35 operators, covering basic arithmetic, bit manipulation, indirection, comparisons, logical operations and others. Almost all operators can be overloaded for user-defined types, with a few notable exceptions such as member access (. and .*) as well as the conditional operator. The rich set of overloadable operators is central to using user created types in C++ as well and as easily as built in types (so that the user using them cannot tell the difference). The overloadable operators are also an essential part of many advanced C++ programming techniques, such as smart pointers. Overloading an operator does not change the precedence of calculations involving the operator, nor does it change the number of operands that the operator uses (any operand may however be ignored by the operator, though it will be evaluated prior to execution). Overloaded "&&" and "||" operators lose their short-circuit evaluation property.
Memory management
C++ supports four types of memory management:
Static memory allocation. A static variable is assigned a value at compile-time, and allocated storage in a fixed location along with the executable code. These are declared with the "static" keyword (in the sense of static storage, not in the sense of declaring a class variable).
Automatic memory allocation. An automatic variable is simply declared with its class name, and storage is allocated on the stack when the value is assigned. The constructor is called when the declaration is executed, the destructor is called when the variable goes out of scope, and after the destructor the allocated memory is automatically freed.
Dynamic memory allocation. Storage can be dynamically allocated on the heap using manual memory management - normally calls to new and delete (though old-style C calls such as malloc() and free() are still supported).
With the use of a library, garbage C++
From Wikipedia, the free encyclopedia

This article may be too technical for most readers to understand. Please help improve this article to make it understandable to non-experts, without removing the technical details. The talk page may contain suggestions. (July 2013)
Page semi-protected
Add to Google CalendarC++
Paradigm(s)	Multi-paradigm:[1] procedural, functional, object-oriented, generic
Appeared in	1983
Designed by	Bjarne Stroustrup
Stable release	ISO/IEC 14882:2011 (2011)
Typing discipline	Static, Nominative
Major implementations	LLVM Clang, GCC, Microsoft Visual C++, Intel C++ Compiler, Comeau C/C++, Sun Studio
Dialects	Embedded C++, Managed C++, C++/CLI, C++/CX
Influenced	Perl, LPC, Lua, Pike, Ada 95, Java, PHP, D, C99, C#,[2] Falcon, Seed7
Implementation language	C, C++
OS	Cross-platform (multi-platform)
Usual filename extensions	.h .hh .hpp .hxx .h++ .cc .cpp .cxx .c++
Website	News, status & discussion about Standard C++
 C++ Programming at Wikibooks
C++ (pronounced "see plus plus") is a programming language that is general purpose, statically typed, free-form, multi-paradigm and compiled. It is regarded as an intermediate-level language, as it comprises both high-level and low-level language features.[3] Developed by Bjarne Stroustrup starting in 1979 at Bell Labs, C++ was originally named C with Classes, adding object oriented features, such as classes, and other enhancements to the C programming language. The language was renamed C++ in 1983,[4] as a pun involving the increment operator.
C++ is one of the most popular programming languages[5][6] and is implemented on a wide variety of hardware and operating system platforms. As an efficient compiler to native code, its application domains include systems software, application software, device drivers, embedded software, high-performance server and client applications, and entertainment software such as video games.[7] Several groups provide both free and proprietary C++ compiler software, including the GNU Project, LLVM, Microsoft and Intel. C++ has greatly influenced many other popular programming languages, most notably C#[2] and Java.
C++ is also used for hardware design, where the design is initially described in C++, then analyzed, architecturally constrained, and scheduled to create a register-transfer level hardware description language via high-level synthesis.[8]
The language began as enhancements to C, first adding classes, then virtual functions, operator overloading, multiple inheritance, templates and exception handling, among other features. After years of development, the C++ programming language standard was ratified in 1998 as ISO/IEC 14882:1998. The standard was amended by the 2003 technical corrigendum, ISO/IEC 14882:2003. The current standard extending C++ with new features was ratified and published by ISO in September 2011 as ISO/IEC 14882:2011 (informally known as C++11).[9]
Contents  [hide] 
1 History
1.1 Etymology
1.2 Philosophy
1.3 Standardization
2 Language
2.1 Operators and operator overloading
2.2 Memory management
2.3 Templates
2.4 Objects
2.5 Polymorphism
3 Standard library
4 Parsing and processing C++ source code
5 Compatibility
5.1 Exported templates
5.2 With C
6 Criticism
7 See also
8 Further reading
9 References
10 External links
History



Bjarne Stroustrup, creator of C++
Bjarne Stroustrup, a Danish and British trained computer scientist, began his work on "C with Classes" in 1979.[4] The idea of creating a new language originated from Stroustrup's experience in programming for his Ph.D. thesis. Stroustrup found that Simula had features that were very helpful for large software development, but the language was too slow for practical use, while BCPL was fast but too low-level to be suitable for large software development. When Stroustrup started working in AT&T Bell Labs, he had the problem of analyzing the UNIX kernel with respect to distributed computing. Remembering his Ph.D. experience, Stroustrup set out to enhance the C language with Simula-like features.[10] C was chosen because it was general-purpose, fast, portable and widely used. Besides C and Simula, some other languages that inspired him were ALGOL 68, Ada, CLU and ML. At first, the class, derived class, strong typing, inlining, and default argument features were added to C via Stroustrup's "C with Classes" to C compiler, Cpre.[11]
In 1983, the name of the language was changed from C with Classes to C++ (++ being the increment operator in C). New features were added including virtual functions, function name and operator overloading, references, constants, user-controlled free-store memory control, improved type checking, and BCPL style single-line comments with two forward slashes (//), as well as the development of a proper compiler for C++, Cfront. In 1985, the first edition of The C++ Programming Language was released, providing an important reference to the language, as there was not yet an official standard.[12] The first commercial implementation of C++ was released in October of the same year.[13] Release 2.0 of C++ came in 1989 and the updated second edition of The C++ Programming Language was released in 1991.[14] New features included multiple inheritance, abstract classes, static member functions, const member functions, and protected members. In 1990, The Annotated C++ Reference Manual was published. This work became the basis for the future standard. Late feature additions included templates, exceptions, namespaces, new casts, and a Boolean type.
As the C++ language evolved, the standard library evolved with it. The first addition to the C++ standard library was the stream I/O library which provided facilities to replace the traditional C functions such as printf and scanf. Later, among the most significant additions to the standard library, was a large amount of the Standard Template Library.
It is possible to write object oriented or procedural code in the same program in C++. This has caused some concern that some C++ programmers are still writing procedural code, but are under the impression that it is object oriented, simply because they are using C++. Often it is an amalgamation of the two. This usually causes most problems when the code is revisited or the task is taken over by another coder.[15]
C++ continues to be used and is one of the preferred programming languages to develop professional applications.[16]
Etymology
According to Stroustrup: "the name signifies the evolutionary nature of the changes from C".[17] During C++'s development period, the language had been referred to as "new C", then "C with Classes". The final name is credited to Rick Mascitti (mid-1983) and was first used in December 1983. When Mascitti was questioned informally in 1992 about the naming, he indicated that it was given in a tongue-in-cheek spirit. It stems from C's "++" operator (which increments the value of a variable) and a common naming convention of using "+" to indicate an enhanced computer program. A joke goes that the name itself has a bug: due to the use of post-increment, which increments the value of the variable but evaluates to the unincremented value, C++ is no better than C, and the pre-increment ++C form should have been used instead.[18] There is no language called "C plus". ABCL/c+ was the name of an earlier, unrelated programming language. A few other languages have been named similarly to C++, most notably C-- and C#.
Philosophy
Throughout C++'s life, its development and evolution has been informally governed by a set of rules that its evolution should follow:[10]
It must be driven by actual problems and its features should be useful immediately in real world programmes.
Every feature should be implementable (with a reasonably obvious way to do so).
Programmers should be free to pick their own programming style, and that style should be fully supported by C++.
Allowing a useful feature is more important than preventing every possible misuse of C++.
It should provide facilities for organising programmes into well defined separate parts, and provide facilities for combining separately developed parts.
No implicit violations of the type system (but allow explicit violations that have been explicitly asked for by the programmer).
Make user created types have equal support and performance to built in types.
Any features that you do not use you do not pay for (e.g. in performance).
There should be no language beneath C++ (except assembly language).
C++ should work alongside other pre-existing programming languages, rather than being part of its own separate and incompatible programming environment.
If what the programmer wants to do is unknown, allow the programmer to specify (provide manual control).
Standardization
Year	C++ Standard	Informal name
1998	ISO/IEC 14882:1998[19]	C++98
2003	ISO/IEC 14882:2003[20]	C++03
2007	ISO/IEC TR 19768:2007[21]	C++TR1
2011	ISO/IEC 14882:2011[22]	C++11
In 1998, the C++ standards committee (the ISO/IEC JTC1/SC22/WG21 working group) standardized C++ and published the international standard ISO/IEC 14882:1998 (informally known as C++98). For some years after the official release of the standard, the committee processed defect reports, and in 2003 published a corrected version of the C++ standard, ISO/IEC 14882:2003. In 2005, a technical report, called the "Library Technical Report 1" (often known as TR1 for short), was released. While not an official part of the standard, it specified a number of extensions to the standard library, which were expected to be included in the next version of C++.
The latest major revision of the C++ standard, C++11, (formerly known as C++0x) was approved by ISO/IEC on 12 August 2011.[23] It has been published as 14882:2011.[24] There are plans for a minor (C++14) and a major revision (C++17) in the future.[25]
C++14 is the name being used for the next revision. C++14 is planned to be a small extension over C++11, featuring mainly bug fixes and small improvements, similarly to how C++03 was a small extension to C++98. While the name 'C++14' implies a release in 2014, this date is not fixed.
Language

C++ inherits most of C's syntax. The following is Bjarne Stroustrup's version of the Hello world program that uses the C++ Standard Library stream facility to write a message to standard output:[26][27]
# include <iostream>
 
int main()
{
   std::cout << "Hello, world!\n";
}
Within functions that define a non-void return type, failure to return a value before control reaches the end of the function results in undefined behaviour (compilers typically provide the means to issue a diagnostic in such a case).[28] The sole exception to this rule is the main function, which implicitly returns a value of zero.[29]
Operators and operator overloading
Operators that cannot be overloaded
Operator	Symbol
Scope resolution operator	 ::
Conditional operator	 ?:
dot operator	 .
Member selection operator	 .*
"sizeof" operator	 sizeof
"typeid" operator	 typeid
C++ provides more than 35 operators, covering basic arithmetic, bit manipulation, indirection, comparisons, logical operations and others. Almost all operators can be overloaded for user-defined types, with a few notable exceptions such as member access (. and .*) as well as the conditional operator. The rich set of overloadable operators is central to using user created types in C++ as well and as easily as built in types (so that the user using them cannot tell the difference). The overloadable operators are also an essential part of many advanced C++ programming techniques, such as smart pointers. Overloading an operator does not change the precedence of calculations involving the operator, nor does it change the number of operands that the operator uses (any operand may however be ignored by the operator, though it will be evaluated prior to execution). Overloaded "&&" and "||" operators lose their short-circuit evaluation property.
Memory management
C++ supports four types of memory management:
Static memory allocation. A static variable is assigned a value at compile-time, and allocated storage in a fixed location along with the executable code. These are declared with the "static" keyword (in the sense of static storage, not in the sense of declaring a class variable).
Automatic memory allocation. An automatic variable is simply declared with its class name, and storage is allocated on the stack when the value is assigned. The constructor is called when the declaration is executed, the destructor is called when the variable goes out of scope, and after the destructor the allocated memory is automatically freed.
Dynamic memory allocation. Storage can be dynamically allocated on the heap using manual memory management - normally calls to new and delete (though old-style C calls such as malloc() and free() are still supported).
With the use of a library, garbage collection is possible. The Boehm garbage collector is commonly used for this purpose.
The fine control over memory management is similar to C, but in contrast with languages that intend to hide such details from the programmer, such as Java, Perl, PHP, and Ruby.
Templates
See also: Template metaprogramming and Generic programming
C++ templates enable generic programming. C++ supports both function and class templates. Templates may be parameterized by types, compile-time constants, and other templates. Templates are implemented by instantiation at compile-time. To instantiate a template, compilers substitute specific arguments for a template's parameters to generate a concrete function or class instance. Some substitutions are not possible; these are eliminated by an overload resolution policy described by the phrase "Substitution failure is not an error" (SFINAE). Templates are a powerful tool that can be used for generic programming, template metaprogramming, and code optimization, but this power implies a cost. Template use may increase code size, because each template instantiation produces a copy of the template code: one for each set of template arguments, however, this is the same amount of code that would be generated, or less, that if the code was written by hand.[30] This is in contrast to run-time generics seen in other languages (e.g., Java) where at compile-time the type is erased and a single template body is preserved.
Templates are different from macros: while both of these compile-time language features enable conditional compilation, templates are not restricted to lexical substitution. Templates are aware of the semantics and type system of their companion language, as well as all compile-time type definitions, and can perform high-level operations including programmatic flow control based on evaluation of strictly type-checked parameters. Macros are capable of conditional control over compilation based on predetermined criteria, but cannot instantiate new types, recurse, or perform type evaluation and in effect are limited to pre-compilation text-substitution and text-inclusion/exclusion. In other words, macros can control compilation flow based on pre-defined symbols but cannot, unlike templates, independently instantiate new symbols. Templates are a tool for static polymorphism (see below) and generic programming.
In addition, templates are a compile time mechanism in C++ that is Turing-complete, meaning that any computation expressible by a computer program can be computed, in some form, by a template metaprogram prior to runtime.
In summary, a template is a compile-time parameterized function or class written without knowledge of the specific arguments used to instantiate it. After instantiation, the resulting code is equivalent to code written specifically for the passed arguments. In this manner, templates provide a way to decouple generic, broadly applicable aspects of functions and classes (encoded in templates) from specific aspects (encoded in template parameters) without sacrificing performance due to abstraction.
Objects
Main article: C++ classes
C++ introduces object-oriented programming (OOP) features to C. It offers classes, which provide the four features commonly present in OOP (and some non-OOP) languages: abstraction, encapsulation, inheritance, and polymorphism. One distinguishing feature of C++ classes compared to classes in other programming languages is support for deterministic destructors, which in turn provide support for the Resource Acquisition is Initialization (RAII) concept.
Encapsulation
Encapsulation is the hiding of information to ensure that data structures and operators are used as intended and to make the usage model more obvious to the developer. C++ provides the ability to define classes and functions as its primary encapsulation mechanisms. Within a class, members can be declared as either public, protected, or private to explicitly enforce encapsulation. A public member of the class is accessible to any function. A private member is accessible only to functions that are members of that class and to functions and classes explicitly granted access permission by the class ("friends"). A protected member is accessible to members of classes that inherit from the class in addition to the class itself and any friends.
The OO principle is that all of the functions (and only the functions) that access the internal representation of a type should be encapsulated within the type definition. C++ supports this (via member functions and friend functions), but does not enforce it: the programmer can declare parts or all of the representation of a type to be public, and is allowed to make public entities that are not part of the representation of the type. Therefore, C++ supports not just OO programming, but other weaker decomposition paradigms, like modular programming.
It is generally considered good practice to make all data private or protected, and to make public only those functions that are part of a minimal interface for users of the class. This can hide the details of data implementation, allowing the designer to later fundamentally change the implementation without changing the interface in any way.[31][32]
Inheritance
Inheritance allows one data type to acquire properties of other data types. Inheritance from a base class may be declared as public, protected, or private. This access specifier determines whether unrelated and derived classes can access the inherited public and protected members of the base class. Only public inheritance corresponds to what is usually meant by "inheritance". The other two forms are much less frequently used. If the access specifier is omitted, a "class" inherits privately, while a "struct" inherits publicly. Base classes may be declared as virtual; this is called virtual inheritance. Virtual inheritance ensures that only one instance of a base class exists in the inheritance graph, avoiding some of the ambiguity problems of multiple inheritance.
Multiple inheritance is a C++ feature not found in most other languages, allowing a class to be derived from more than one base classes; this allows for more elaborate inheritance relationships. For example, a "Flying Cat" class can inherit from both "Cat" and "Flying Mammal". Some other languages, such as C# or Java, accomplish something similar (although more limited) by allowing inheritance of multiple interfaces while restricting the number of base classes to one (interfaces, unlike classes, provide only declarations of member functions, no implementation or member data). An interface as in C# and Java can be defined in C++ as a class containing only pure virtual functions, often known as an abstract base class or "ABC". The member functions of such an abstract base class are normally explicitly defined in the derived class, not inherited implicitly. C++ virtual inheritance exhibits an ambiguity resolution feature called dominance.
Polymorphism
See also: Polymorphism in object-oriented programming
Polymorphism enables one common interface for many implementations, and for objects to act differently under different circumstances.
C++ supports several kinds of static (compile-time) and dynamic (run-time) polymorphisms. Compile-time polymorphism does not allow for certain run-time decisions, while run-time polymorphism typically incurs a performance penalty.
Static polymorphism
Function overloading allows programs to declare multiple functions having the same name (but with different arguments). The functions are distinguished by the number or types of their formal parameters. Thus, the same function name can refer to different functions depending on the context in which it is used. The type returned by the function is not used to distinguish overloaded functions and would result in a compile-time error message.
When declaring a function, a programmer can specify for one or more parameters a default value. Doing so allows the parameters with defaults to optionally be omitted when the function is called, in which case the default arguments will be used. When a function is called with fewer arguments than there are declared parameters, explicit arguments are matched to parameters in left-to-right order, with any unmatched parameters at the end of the parameter list being assigned their default arguments. In many cases, specifying default arguments in a single function declaration is preferable to providing overloaded function definitions with different numbers of parameters.
Templates in C++ provide a sophisticated mechanism for writing generic, polymorphic code. In particular, through the Curiously Recurring Template Pattern, it's possible to implement a form of static polymorphism that closely mimics the syntax for overriding virtual functions. Because C++ templates are type-aware and Turing-complete, they can also be used to let the compiler resolve recursive conditionals and generate substantial programs through template metaprogramming. Contrary to some opinion, template code will not generate a bulk code after compilation with the proper compiler settings.[30]
Dynamic polymorphism
Inheritance
Variable pointers (and references) to a base class type in C++ can refer to objects of any derived classes of that type in addition to objects exactly matching the variable type. This allows arrays and other kinds of containers to hold pointers to objects of differing types. Because assignment of values to variables usually occurs at run-time, this is necessarily a run-time phenomenon.
C++ also provides a dynamic_cast operator, which allows the program to safely attempt conversion of an object into an object of a more specific object type (as opposed to conversion to a more general type, which is always allowed). This feature relies on run-time type information (RTTI). Objects known to be of a certain specific type can also be cast to that type with static_cast, a purely compile-time construct that has no runtime overhead and does not require RTTI.
Virtual member functions
Ordinarily, when a function in a derived class overrides a function in a base class, the function to call is determined by the type of the object. A given function is overridden when there exists no difference in the number or type of parameters between two or more definitions of that function. Hence, at compile time, it may not be possible to determine the type of the object and therefore the correct function to call, given only a base class pointer; the decision is therefore put off until runtime. This is called dynamic dispatch. Virtual member functions or methods[33] allow the most specific implementation of the function to be called, according to the actual run-time type of the object. In C++ implementations, this is commonly done using virtual function tables. If the object type is known, this may be bypassed by prepending a fully qualified class name before the function call, but in general calls to virtual functions are resolved at run time.
In addition to standard member functions, operator overloads and destructors can be virtual. A general rule of thumb is that if any functions in the class are virtual, the destructor should be as well. As the type of an object at its creation is known at compile time, constructors, and by extension copy constructors, cannot be virtual. Nonetheless a situation may arise where a copy of an object needs to be created when a pointer to a derived object is passed as a pointer to a base object. In such a case, a common solution is to create a clone() (or similar) virtual function that creates and returns a copy of the derived class when called.
A member function can also be made "pure virtual" by appending it with = 0 after the closing parenthesis and before the semicolon. A class containing a pure virtual function is called an abstract data type. Objects cannot be created from abstract data types; they can only be derived from. Any derived class inherits the virtual function as pure and must provide a non-pure definition of it (and all other pure virtual functions) before objects of the derived class can be created. A program that attempts to create an object of a class with a pure virtual member function or inherited pure virtual member function is ill-formed.
Standard library

The C++ standard consists of two parts: the core language and the C++ Standard Library; which C++ programmers expect on every major implementation of C++, it includes vectors, lists, maps, algorithms (find, for_each, binary_search, random_shuffle, etc.), sets, queues, stacks, arrays, tuples, input/output facilities (iostream; reading from the console input, reading/writing from files), smart pointers for automatic memory management, regular expression support, multi-threading library, atomics support (allowing a variable to be read or written to be at most one thread at a time without any external synchronisation), time utilities (measurement, getting current time, etc.), a system for converting error reporting that doesn't use C++ exceptions into C++ exceptions, a random number generator and a slightly modified version of the C standard library (to make it comply with the C++ type system).
A large part of the C++ library is based on the STL. This provides useful tools as containers (for example vectors and lists), iterators to provide these containers with array-like access and algorithms to perform operations such as searching and sorting. Furthermore (multi)maps (associative arrays) and (multi)sets are provided, all of which export compatible interfaces. Therefore it is possible, using templates, to write generic algorithms that work with any container or on any sequence defined by iterators. As in C, the features of the library are accessed by using the #include directive to include a standard header. C++ provides 105 standard headers, of which 27 are deprecated.
The standard incorporates the STL was originally designed by Alexander Stepanov, who experimented with generic algorithms and containers for many years. When he started with C++, he finally found a language where it was possible to create generic algorithms (e.g., STL sort) that perform even better than, for example, the C standard library qsort, thanks to C++ features like using inlining and compile-time binding instead of function pointers. The standard does not refer to it as "STL", as it is merely a part of the standard library, but the term is still widely used to distinguish it from the rest of the standard library (input/output streams, internationalization, diagnostics, the C library subset, etc.).
Most C++ compilers, and all major ones, provide a standards conforming implementation of the C++ standard library.
Parsing and processing C++ source code

It is relatively difficult to write a good C++ parser with classic parsing algorithms such as LALR(1).[34] This is partly the result of the C++ grammar not being LALR. Because of this, there are very few tools for analyzing or performing non-trivial transformations (e.g., refactoring) of existing code. One way to handle this difficulty is to choose a different syntax. More powerful parsers, such as GLR parsers, can be substantially simpler (though slower).
Parsing (in the literal sense of producing a syntax tree) is not the most difficult problem in building a C++ processing tool. Such tools must also have the same understanding of the meaning of the identifiers in the program as a compiler might have. Practical systems for processing C++ must then not only parse the source text, but be able to resolve for each identifier precisely which definition applies (e.g., they must correctly handle C++'s complex scoping rules) and what its type is, as well as the types of larger expressions.
Finally, a practical C++ processing tool must be able to handle the variety of C++ dialects used in practice (such as that supported by the GNU Compiler Collection and that of Microsoft's Visual C++) and implement appropriate analyzers, source code transformers, and regenerate source text. Combining advanced parsing algorithms such as GLR with symbol table construction and program transformation machinery can enable the construction of arbitrary C++ tools.
Parsers do exist in all major compilers. Despite that only one compiler provides the parser in a format suitable for tool integration, Clang,[35] the parser is usable as a C++ (or C) library which is ready for integration into, i.e. an IDE.
Compatibility

Producing a reasonably standards-compliant C++ compiler has proven to be a difficult task for compiler vendors in general. For many years, different C++ compilers implemented the C++ language to different levels of compliance to the standard, and their implementations varied widely in some areas such as partial template specialization. Recent releases of most popular C++ compilers support almost all of the C++ 1998 standard.[36]
To give compiler vendors greater freedom, the C++ standards committee decided not to dictate the implementation of name mangling, exception handling, and other implementation-specific features. The downside of this decision is that object code produced by different compilers is expected to be incompatible. There were, however, attempts to standardize compilers for particular machines or operating systems (for example C++ ABI),[37] though they seem to be largely abandoned now.
Exported templates
One particular point of contention is the export keyword, intended to allow template definitions to be separated from their declarations. The first widely available compiler to implement export was Comeau C/C++, in early 2003 (five years after the release of the standard); in 2004, the beta compiler of Borland C++ Builder X was also released with export. Both of these compilers are based on the EDG C++ front end. Other compilers such as GCC do not support it at all. Beginning ANSI C++ by Ivor Horton provides example code with the keyword that will not compile in most compilers, without reference to this problem. Herb Sutter, former convener of the C++ standards committee, recommended that export be removed from future versions of the C++ standard.[38] During the March 2010 ISO C++ standards meeting, the C++ standards committee voted to remove exported templates entirely from C++11, but reserve the keyword for future use.[39]
With C
For more details on this topic, see Compatibility of C and C++.
Gnome globe current event.svg
This section's factual accuracy may be compromised due to out-of-date information. Please update this article to reflect recent events or newly available information. (September 2011)
C++ is often considered to be a superset of C, but this is not strictly true.[40] Most C code can easily be made to compile correctly in C++, but there are a few differences that cause some valid C code to be invalid or behave differently in C++.
One commonly encountered difference is that C allows implicit conversion from void* to other pointer types, but C++ does not (for type safety reasons). Another common portability issue is that C++ defines many new keywords, such as new and class, which may be used as identifiers (e.g. variable names) in a C program.
Some incompatibilities have been removed by the 1999 revision of the C standard (C99), which now supports C++ features such as line comments (//), and declarations mixed with code. On thC++
From Wikipedia, the free encyclopedia

This article may be too technical for most readers to understand. Please help improve this article to make it understandable to non-experts, without removing the technical details. The talk page may contain suggestions. (July 2013)
Page semi-protected
Add to Google CalendarC++
Paradigm(s)	Multi-paradigm:[1] procedural, functional, object-oriented, generic
Appeared in	1983
Designed by	Bjarne Stroustrup
Stable release	ISO/IEC 14882:2011 (2011)
Typing discipline	Static, Nominative
Major implementations	LLVM Clang, GCC, Microsoft Visual C++, Intel C++ Compiler, Comeau C/C++, Sun Studio
Dialects	Embedded C++, Managed C++, C++/CLI, C++/CX
Influenced	Perl, LPC, Lua, Pike, Ada 95, Java, PHP, D, C99, C#,[2] Falcon, Seed7
Implementation language	C, C++
OS	Cross-platform (multi-platform)
Usual filename extensions	.h .hh .hpp .hxx .h++ .cc .cpp .cxx .c++
Website	News, status & discussion about Standard C++
 C++ Programming at Wikibooks
C++ (pronounced "see plus plus") is a programming language that is general purpose, statically typed, free-form, multi-paradigm and compiled. It is regarded as an intermediate-level language, as it comprises both high-level and low-level language features.[3] Developed by Bjarne Stroustrup starting in 1979 at Bell Labs, C++ was originally named C with Classes, adding object oriented features, such as classes, and other enhancements to the C programming language. The language was renamed C++ in 1983,[4] as a pun involving the increment operator.
C++ is one of the most popular programming languages[5][6] and is implemented on a wide variety of hardware and operating system platforms. As an efficient compiler to native code, its application domains include systems software, application software, device drivers, embedded software, high-performance server and client applications, and entertainment software such as video games.[7] Several groups provide both free and proprietary C++ compiler software, including the GNU Project, LLVM, Microsoft and Intel. C++ has greatly influenced many other popular programming languages, most notably C#[2] and Java.
C++ is also used for hardware design, where the design is initially described in C++, then analyzed, architecturally constrained, and scheduled to create a register-transfer level hardware description language via high-level synthesis.[8]
The language began as enhancements to C, first adding classes, then virtual functions, operator overloading, multiple inheritance, templates and exception handling, among other features. After years of development, the C++ programming language standard was ratified in 1998 as ISO/IEC 14882:1998. The standard was amended by the 2003 technical corrigendum, ISO/IEC 14882:2003. The current standard extending C++ with new features was ratified and published by ISO in September 2011 as ISO/IEC 14882:2011 (informally known as C++11).[9]
Contents  [hide] 
1 History
1.1 Etymology
1.2 Philosophy
1.3 Standardization
2 Language
2.1 Operators and operator overloading
2.2 Memory management
2.3 Templates
2.4 Objects
2.5 Polymorphism
3 Standard library
4 Parsing and processing C++ source code
5 Compatibility
5.1 Exported templates
5.2 With C
6 Criticism
7 See also
8 Further reading
9 References
10 External links
History



Bjarne Stroustrup, creator of C++
Bjarne Stroustrup, a Danish and British trained computer scientist, began his work on "C with Classes" in 1979.[4] The idea of creating a new language originated from Stroustrup's experience in programming for his Ph.D. thesis. Stroustrup found that Simula had features that were very helpful for large software development, but the language was too slow for practical use, while BCPL was fast but too low-level to be suitable for large software development. When Stroustrup started working in AT&T Bell Labs, he had the problem of analyzing the UNIX kernel with respect to distributed computing. Remembering his Ph.D. experience, Stroustrup set out to enhance the C language with Simula-like features.[10] C was chosen because it was general-purpose, fast, portable and widely used. Besides C and Simula, some other languages that inspired him were ALGOL 68, Ada, CLU and ML. At first, the class, derived class, strong typing, inlining, and default argument features were added to C via Stroustrup's "C with Classes" to C compiler, Cpre.[11]
In 1983, the name of the language was changed from C with Classes to C++ (++ being the increment operator in C). New features were added including virtual functions, function name and operator overloading, references, constants, user-controlled free-store memory control, improved type checking, and BCPL style single-line comments with two forward slashes (//), as well as the development of a proper compiler for C++, Cfront. In 1985, the first edition of The C++ Programming Language was released, providing an important reference to the language, as there was not yet an official standard.[12] The first commercial implementation of C++ was released in October of the same year.[13] Release 2.0 of C++ came in 1989 and the updated second edition of The C++ Programming Language was released in 1991.[14] New features included multiple inheritance, abstract classes, static member functions, const member functions, and protected members. In 1990, The Annotated C++ Reference Manual was published. This work became the basis for the future standard. Late feature additions included templates, exceptions, namespaces, new casts, and a Boolean type.
As the C++ language evolved, the standard library evolved with it. The first addition to the C++ standard library was the stream I/O library which provided facilities to replace the traditional C functions such as printf and scanf. Later, among the most significant additions to the standard library, was a large amount of the Standard Template Library.
It is possible to write object oriented or procedural code in the same program in C++. This has caused some concern that some C++ programmers are still writing procedural code, but are under the impression that it is object oriented, simply because they are using C++. Often it is an amalgamation of the two. This usually causes most problems when the code is revisited or the task is taken over by another coder.[15]
C++ continues to be used and is one of the preferred programming languages to develop professional applications.[16]
Etymology
According to Stroustrup: "the name signifies the evolutionary nature of the changes from C".[17] During C++'s development period, the language had been referred to as "new C", then "C with Classes". The final name is credited to Rick Mascitti (mid-1983) and was first used in December 1983. When Mascitti was questioned informally in 1992 about the naming, he indicated that it was given in a tongue-in-cheek spirit. It stems from C's "++" operator (which increments the value of a variable) and a common naming convention of using "+" to indicate an enhanced computer program. A joke goes that the name itself has a bug: due to the use of post-increment, which increments the value of the variable but evaluates to the unincremented value, C++ is no better than C, and the pre-increment ++C form should have been used instead.[18] There is no language called "C plus". ABCL/c+ was the name of an earlier, unrelated programming language. A few other languages have been named similarly to C++, most notably C-- and C#.
Philosophy
Throughout C++'s life, its development and evolution has been informally governed by a set of rules that its evolution should follow:[10]
It must be driven by actual problems and its features should be useful immediately in real world programmes.
Every feature should be implementable (with a reasonably obvious way to do so).
Programmers should be free to pick their own programming style, and that style should be fully supported by C++.
Allowing a useful feature is more important than preventing every possible misuse of C++.
It should provide facilities for organising programmes into well defined separate parts, and provide facilities for combining separately developed parts.
No implicit violations of the type system (but allow explicit violations that have been explicitly asked for by the programmer).
Make user created types have equal support and performance to built in types.
Any features that you do not use you do not pay for (e.g. in performance).
There should be no language beneath C++ (except assembly language).
C++ should work alongside other pre-existing programming languages, rather than being part of its own separate and incompatible programming environment.
If what the programmer wants to do is unknown, allow the programmer to specify (provide manual control).
Standardization
Year	C++ Standard	Informal name
1998	ISO/IEC 14882:1998[19]	C++98
2003	ISO/IEC 14882:2003[20]	C++03
2007	ISO/IEC TR 19768:2007[21]	C++TR1
2011	ISO/IEC 14882:2011[22]	C++11
In 1998, the C++ standards committee (the ISO/IEC JTC1/SC22/WG21 working group) standardized C++ and published the international standard ISO/IEC 14882:1998 (informally known as C++98). For some years after the official release of the standard, the committee processed defect reports, and in 2003 published a corrected version of the C++ standard, ISO/IEC 14882:2003. In 2005, a technical report, called the "Library Technical Report 1" (often known as TR1 for short), was released. While not an official part of the standard, it specified a number of extensions to the standard library, which were expected to be included in the next version of C++.
The latest major revision of the C++ standard, C++11, (formerly known as C++0x) was approved by ISO/IEC on 12 August 2011.[23] It has been published as 14882:2011.[24] There are plans for a minor (C++14) and a major revision (C++17) in the future.[25]
C++14 is the name being used for the next revision. C++14 is planned to be a small extension over C++11, featuring mainly bug fixes and small improvements, similarly to how C++03 was a small extension to C++98. While the name 'C++14' implies a release in 2014, this date is not fixed.
Language

C++ inherits most of C's syntax. The following is Bjarne Stroustrup's version of the Hello world program that uses the C++ Standard Library stream facility to write a message to standard output:[26][27]
# include <iostream>
 
int main()
{
   std::cout << "Hello, world!\n";
}
Within functions that define a non-void return type, failure to return a value before control reaches the end of the function results in undefined behaviour (compilers typically provide the means to issue a diagnostic in such a case).[28] The sole exception to this rule is the main function, which implicitly returns a value of zero.[29]
Operators and operator overloading
Operators that cannot be overloaded
Operator	Symbol
Scope resolution operator	 ::
Conditional operator	 ?:
dot operator	 .
Member selection operator	 .*
"sizeof" operator	 sizeof
"typeid" operator	 typeid
C++ provides more than 35 operators, covering basic arithmetic, bit manipulation, indirection, comparisons, logical operations and others. Almost all operators can be overloaded for user-defined types, with a few notable exceptions such as member access (. and .*) as well as the conditional operator. The rich set of overloadable operators is central to using user created types in C++ as well and as easily as built in types (so that the user using them cannot tell the difference). The overloadable operators are also an essential part of many advanced C++ programming techniques, such as smart pointers. Overloading an operator does not change the precedence of calculations involving the operator, nor does it change the number of operands that the operator uses (any operand may however be ignored by the operator, though it will be evaluated prior to execution). Overloaded "&&" and "||" operators lose their short-circuit evaluation property.
Memory management
C++ supports four types of memory management:
Static memory allocation. A static variable is assigned a value at compile-time, and allocated storage in a fixed location along with the executable code. These are declared with the "static" keyword (in the sense of static storage, not in the sense of declaring a class variable).
Automatic memory allocation. An automatic variable is simply declared with its class name, and storage is allocated on the stack when the value is assigned. The constructor is called when the declaration is executed, the destructor is called when the variable goes out of scope, and after the destructor the allocated memory is automatically freed.
Dynamic memory allocation. Storage can be dynamically allocated on the heap using manual memory management - normally calls to new and delete (though old-style C calls such as malloc() and free() are still supported).
With the use of a library, garbage collection is possible. The Boehm garbage collector is commonly used for this purpose.
The fine control over memory management is similar to C, but in contrast with languages that intend to hide such details from the programmer, such as Java, Perl, PHP, and Ruby.
Templates
See also: Template metaprogramming and Generic programming
C++ templates enable generic programming. C++ supports both function and class templates. Templates may be parameterized by types, compile-time constants, and other templates. Templates are implemented by instantiation at compile-time. To instantiate a template, compilers substitute specific arguments for a template's parameters to generate a concrete function or class instance. Some substitutions are not possible; these are eliminated by an overload resolution policy described by the phrase "Substitution failure is not an error" (SFINAE). Templates are a powerful tool that can be used for generic programming, template metaprogramming, and code optimization, but this power implies a cost. Template use may increase code size, because each template instantiation produces a copy of the template code: one for each set of template arguments, however, this is the same amount of code that would be generated, or less, that if the code was written by hand.[30] This is in contrast to run-time generics seen in other languages (e.g., Java) where at compile-time the type is erased and a single template body is preserved.
Templates are different from macros: while both of these compile-time language features enable conditional compilation, templates are not restricted to lexical substitution. Templates are aware of the semantics and type system of their companion language, as well as all compile-time type definitions, and can perform high-level operations including programmatic flow control based on evaluation of strictly type-checked parameters. Macros are capable of conditional control over compilation based on predetermined criteria, but cannot instantiate new types, recurse, or perform type evaluation and in effect are limited to pre-compilation text-substitution and text-inclusion/exclusion. In other words, macros can control compilation flow based on pre-defined symbols but cannot, unlike templates, independently instantiate new symbols. Templates are a tool for static polymorphism (see below) and generic programming.
In addition, templates are a compile time mechanism in C++ that is Turing-complete, meaning that any computation expressible by a computer program can be computed, in some form, by a template metaprogram prior to runtime.
In summary, a template is a compile-time parameterized function or class written without knowledge of the specific arguments used to instantiate it. After instantiation, the resulting code is equivalent to code written specifically for the passed arguments. In this manner, templates provide a way to decouple generic, broadly applicable aspects of functions and classes (encoded in templates) from specific aspects (encoded in template parameters) without sacrificing performance due to abstraction.
Objects
Main article: C++ classes
C++ introduces object-oriented programming (OOP) features to C. It offers classes, which provide the four features commonly present in OOP (and some non-OOP) languages: abstraction, encapsulation, inheritance, and polymorphism. One distinguishing feature of C++ classes compared to classes in other programming languages is support for deterministic destructors, which in turn provide support for the Resource Acquisition is Initialization (RAII) concept.
Encapsulation
Encapsulation is the hiding of information to ensure that data structures and operators are used as intended and to make the usage model more obvious to the developer. C++ provides the ability to define classes and functions as its primary encapsulation mechanisms. Within a class, members can be declared as either public, protected, or private to explicitly enforce encapsulation. A public member of the class is accessible to any function. A private member is accessible only to functions that are members of that class and to functions and classes explicitly granted access permission by the class ("friends"). A protected member is accessible to members of classes that inherit from the class in addition to the class itself and any friends.
The OO principle is that all of the functions (and only the functions) that access the internal representation of a type should be encapsulated within the type definition. C++ supports this (via member functions and friend functions), but does not enforce it: the programmer can declare parts or all of the representation of a type to be public, and is allowed to make public entities that are not part of the representation of the type. Therefore, C++ supports not just OO programming, but other weaker decomposition paradigms, like modular programming.
It is generally considered good practice to make all data private or protected, and to make public only those functions that are part of a minimal interface for users of the class. This can hide the details of data implementation, allowing the designer to later fundamentally change the implementation without changing the interface in any way.[31][32]
Inheritance
Inheritance allows one data type to acquire properties of other data types. Inheritance from a base class may be declared as public, protected, or private. This access specifier determines whether unrelated and derived classes can access the inherited public and protected members of the base class. Only public inheritance corresponds to what is usually meant by "inheritance". The other two forms are much less frequently used. If the access specifier is omitted, a "class" inherits privately, while a "struct" inherits publicly. Base classes may be declared as virtual; this is called virtual inheritance. Virtual inheritance ensures that only one instance of a base class exists in the inheritance graph, avoiding some of the ambiguity problems of multiple inheritance.
Multiple inheritance is a C++ feature not found in most other languages, allowing a class to be derived from more than one base classes; this allows for more elaborate inheritance relationships. For example, a "Flying Cat" class can inherit from both "Cat" and "Flying Mammal". Some other languages, such as C# or Java, accomplish something similar (although more limited) by allowing inheritance of multiple interfaces while restricting the number of base classes to one (interfaces, unlike classes, provide only declarations of member functions, no implementation or member data). An interface as in C# and Java can be defined in C++ as a class containing only pure virtual functions, often known as an abstract base class or "ABC". The member functions of such an abstract base class are normally explicitly defined in the derived class, not inherited implicitly. C++ virtual inheritance exhibits an ambiguity resolution feature called dominance.
Polymorphism
See also: Polymorphism in object-oriented programming
Polymorphism enables one common interface for many implementations, and for objects to act differently under different circumstances.
C++ supports several kinds of static (compile-time) and dynamic (run-time) polymorphisms. Compile-time polymorphism does not allow for certain run-time decisions, while run-time polymorphism typically incurs a performance penalty.
Static polymorphism
Function overloading allows programs to declare multiple functions having the same name (but with different arguments). The functions are distinguished by the number or types of their formal parameters. Thus, the same function name can refer to different functions depending on the context in which it is used. The type returned by the function is not used to distinguish overloaded functions and would result in a compile-time error message.
When declaring a function, a programmer can specify for one or more parameters a default value. Doing so allows the parameters with defaults to optionally be omitted when the function is called, in which case the default arguments will be used. When a function is called with fewer arguments than there are declared parameters, explicit arguments are matched to parameters in left-to-right order, with any unmatched parameters at the end of the parameter list being assigned their default arguments. In many cases, specifying default arguments in a single function declaration is preferable to providing overloaded function definitions with different numbers of parameters.
Templates in C++ provide a sophisticated mechanism for writing generic, polymorphic code. In particular, through the Curiously Recurring Template Pattern, it's possible to implement a form of static polymorphism that closely mimics the syntax for overriding virtual functions. Because C++ templates are type-aware and Turing-complete, they can also be used to let the compiler resolve recursive conditionals and generate substantial programs through template metaprogramming. Contrary to some opinion, template code will not generate a bulk code after compilation with the proper compiler settings.[30]
Dynamic polymorphism
Inheritance
Variable pointers (and references) to a base class type in C++ can refer to objects of any derived classes of that type in addition to objects exactly matching the variable type. This allows arrays and other kinds of containers to hold pointers to objects of differing types. Because assignment of values to variables usually occurs at run-time, this is necessarily a run-time phenomenon.
C++ also provides a dynamic_cast operator, which allows the program to safely attempt conversion of an object into an object of a more specific object type (as opposed to conversion to a more general type, which is always allowed). This feature relies on run-time type information (RTTI). Objects known to be of a certain specific type can also be cast to that type with static_cast, a purely compile-time construct that has no runtime overhead and does not require RTTI.
Virtual member functions
Ordinarily, when a function in a derived class overrides a function in a base class, the function to call is determined by the type of the object. A given function is overridden when there exists no difference in the number or type of parameters between two or more definitions of that function. Hence, at compile time, it may not be possible to determine the type of the object and therefore the correct function to call, given only a base class pointer; the decision is therefore put off until runtime. This is called dynamic dispatch. Virtual member functions or methods[33] allow the most specific implementation of the function to be called, according to the actual run-time type of the object. In C++ implementations, this is commonly done using virtual function tables. If the object type is known, this may be bypassed by prepending a fully qualified class name before the function call, but in general calls to virtual functions are resolved at run time.
In addition to standard member functions, operator overloads and destructors can be virtual. A general rule of thumb is that if any functions in the class are virtual, the destructor should be as well. As the type of an object at its creation is known at compile time, constructors, and by extension copy constructors, cannot be virtual. Nonetheless a situation may arise where a copy of an object needs to be created when a pointer to a derived object is passed as a pointer to a base object. In such a case, a common solution is to create a clone() (or similar) virtual function that creates and returns a copy of the derived class when called.
A member function can also be made "pure virtual" by appending it with = 0 after the closing parenthesis and before the semicolon. A class containing a pure virtual function is called an abstract data type. Objects cannot be created from abstract data types; they can only be derived from. Any derived class inherits the virtual function as pure and must provide a non-pure definition of it (and all other pure virtual functions) before objects of the derived class can be created. A program that attempts to create an object of a class with a pure virtual member function or inherited pure virtual member function is ill-formed.
Standard library

The C++ standard consists of two parts: the core language and the C++ Standard Library; which C++ programmers expect on every major implementation of C++, it includes vectors, lists, maps, algorithms (find, for_each, binary_search, random_shuffle, etc.), sets, queues, stacks, arrays, tuples, input/output facilities (iostream; reading from the console input, reading/writing from files), smart pointers for automatic memory management, regular expression support, multi-threading library, atomics support (allowing a variable to be read or written to be at most one thread at a time without any external synchronisation), time utilities (measurement, getting current time, etc.), a system for converting error reporting that doesn't use C++ exceptions into C++ exceptions, a random number generator and a slightly modified version of the C standard library (to make it comply with the C++ type system).
A large part of the C++ library is based on the STL. This provides useful tools as containers (for example vectors and lists), iterators to provide these containers with array-like access and algorithms to perform operations such as searching and sorting. Furthermore (multi)maps (associative arrays) and (multi)sets are provided, all of which export compatible interfaces. Therefore it is possible, using templates, to write generic algorithms that work with any container or on any sequence defined by iterators. As in C, the features of the library are accessed by using the #include directive to include a standard header. C++ provides 105 standard headers, of which 27 are deprecated.
The standard incorporates the STL was originally designed by Alexander Stepanov, who experimented with generic algorithms and containers for many years. When he started with C++, he finally found a language where it was possible to create generic algorithms (e.g., STL sort) that perform even better than, for example, the C standard library qsort, thanks to C++ features like using inlining and compile-time binding instead of function pointers. The standard does not refer to it as "STL", as it is merely a part of the standard library, but the term is still widely used to distinguish it from the rest of the standard library (input/output streams, internationalization, diagnostics, the C library subset, etc.).
Most C++ compilers, and all major ones, provide a standards conforming implementation of the C++ standard library.
Parsing and processing C++ source code

It is relatively difficult to write a good C++ parser with classic parsing algorithms such as LALR(1).[34] This is partly the result of the C++ grammar not being LALR. Because of this, there are very few tools for analyzing or performing non-trivial transformations (e.g., refactoring) of existing code. One way to handle this difficulty is to choose a different syntax. More powerful parsers, such as GLR parsers, can be substantially simpler (though slower).
Parsing (in the literal sense of producing a syntax tree) is not the most difficult problem in building a C++ processing tool. Such tools must also have the same understanding of the meaning of the identifiers in the program as a compiler might have. Practical systems for processing C++ must then not only parse the source text, but be able to resolve for each identifier precisely which definition applies (e.g., they must correctly handle C++'s complex scoping rules) and what its type is, as well as the types of larger expressions.
Finally, a practical C++ processing tool must be able to handle the variety of C++ dialects used in practice (such as that supported by the GNU Compiler Collection and that of Microsoft's Visual C++) and implement appropriate analyzers, source code transformers, and regenerate source text. Combining advanced parsing algorithms such as GLR with symbol table construction and program transformation machinery can enable the construction of arbitrary C++ tools.
Parsers do exist in all major compilers. Despite that only one compiler provides the parser in a format suitable for tool integration, Clang,[35] the parser is usable as a C++ (or C) library which is ready for integration into, i.e. an IDE.
Compatibility

Producing a reasonably standards-compliant C++ compiler has proven to be a difficult task for compiler vendors in general. For many years, different C++ compilers implemented the C++ language to different levels of compliance to the standard, and their implementations varied widely in some areas such as partial template specialization. Recent releases of most popular C++ compilers support almost all of the C++ 1998 standard.[36]
To give compiler vendors greater freedom, the C++ standards committee decided not to dictate the implementation of name mangling, exception handling, and other implementation-specific features. The downside of this decision is that object code produced by different compilers is expected to be incompatible. There were, however, attempts to standardize compilers for particular machines or operating systems (for example C++ ABI),[37] though they seem to be largely abandoned now.
Exported templates
One particular point of contention is the export keyword, intended to allow template definitions to be separated from their declarations. The first widely available compiler to implement export was Comeau C/C++, in early 2003 (five years after the release of the standard); in 2004, the beta compiler of Borland C++ Builder X was also released with export. Both of these compilers are based on the EDG C++ front end. Other compilers such as GCC do not support it at all. Beginning ANSI C++ by Ivor Horton provides example code with the keyword that will not compile in most compilers, without reference to this problem. Herb Sutter, former convener of the C++ standards committee, recommended that export be removed from future versions of the C++ standard.[38] During the March 2010 ISO C++ standards meeting, the C++ standards committee voted to remove exported templates entirely from C++11, but reserve the keyword for future use.[39]
With C
For more details on this topic, see Compatibility of C and C++.
Gnome globe current event.svg
This section's factual accuracy may be compromised due to out-of-date information. Please update this article to reflect recent events or newly available information. (September 2011)
C++ is often considered to be a superset of C, but this is not strictly true.[40] Most C code can easily be made to compile correctly in C++, but there are a few differences that cause some valid C code to be invalid or behave differently in C++.
One commonly encountered difference is that C allows implicit conversion from void* to other pointer types, but C++ does not (for type safety reasons). Another common portability issue is that C++ defines many new keywords, such as new and class, which may be used as identifiers (e.g. variable names) in a C program.
Some incompatibilities have been removed by the 1999 revision of the C standard (C99), which now supports C++ features such as line comments (//), and declarations mixed with code. On thC++
From Wikipedia, the free encyclopedia

This article may be too technical for most readers to understand. Please help improve this article to make it understandable to non-experts, without removing the technical details. The talk page may contain suggestions. (July 2013)
Page semi-protected
Add to Google CalendarC++
Paradigm(s)	Multi-paradigm:[1] procedural, functional, object-oriented, generic
Appeared in	1983
Designed by	Bjarne Stroustrup
Stable release	ISO/IEC 14882:2011 (2011)
Typing discipline	Static, Nominative
Major implementations	LLVM Clang, GCC, Microsoft Visual C++, Intel C++ Compiler, Comeau C/C++, Sun Studio
Dialects	Embedded C++, Managed C++, C++/CLI, C++/CX
Influenced	Perl, LPC, Lua, Pike, Ada 95, Java, PHP, D, C99, C#,[2] Falcon, Seed7
Implementation language	C, C++
OS	Cross-platform (multi-platform)
Usual filename extensions	.h .hh .hpp .hxx .h++ .cc .cpp .cxx .c++
Website	News, status & discussion about Standard C++
 C++ Programming at Wikibooks
C++ (pronounced "see plus plus") is a programming language that is general purpose, statically typed, free-form, multi-paradigm and compiled. It is regarded as an intermediate-level language, as it comprises both high-level and low-level language features.[3] Developed by Bjarne Stroustrup starting in 1979 at Bell Labs, C++ was originally named C with Classes, adding object oriented features, such as classes, and other enhancements to the C programming language. The language was renamed C++ in 1983,[4] as a pun involving the increment operator.
C++ is one of the most popular programming languages[5][6] and is implemented on a wide variety of hardware and operating system platforms. As an efficient compiler to native code, its application domains include systems software, application software, device drivers, embedded software, high-performance server and client applications, and entertainment software such as video games.[7] Several groups provide both free and proprietary C++ compiler software, including the GNU Project, LLVM, Microsoft and Intel. C++ has greatly influenced many other popular programming languages, most notably C#[2] and Java.
C++ is also used for hardware design, where the design is initially described in C++, then analyzed, architecturally constrained, and scheduled to create a register-transfer level hardware description language via high-level synthesis.[8]
The language began as enhancements to C, first adding classes, then virtual functions, operator overloading, multiple inheritance, templates and exception handling, among other features. After years of development, the C++ programming language standard was ratified in 1998 as ISO/IEC 14882:1998. The standard was amended by the 2003 technical corrigendum, ISO/IEC 14882:2003. The current standard extending C++ with new features was ratified and published by ISO in September 2011 as ISO/IEC 14882:2011 (informally known as C++11).[9]
Contents  [hide] 
1 History
1.1 Etymology
1.2 Philosophy
1.3 Standardization
2 Language
2.1 Operators and operator overloading
2.2 Memory management
2.3 Templates
2.4 Objects
2.5 Polymorphism
3 Standard library
4 Parsing and processing C++ source code
5 Compatibility
5.1 Exported templates
5.2 With C
6 Criticism
7 See also
8 Further reading
9 References
10 External links
History



Bjarne Stroustrup, creator of C++
Bjarne Stroustrup, a Danish and British trained computer scientist, began his work on "C with Classes" in 1979.[4] The idea of creating a new language originated from Stroustrup's experience in programming for his Ph.D. thesis. Stroustrup found that Simula had features that were very helpful for large software development, but the language was too slow for practical use, while BCPL was fast but too low-level to be suitable for large software development. When Stroustrup started working in AT&T Bell Labs, he had the problem of analyzing the UNIX kernel with respect to distributed computing. Remembering his Ph.D. experience, Stroustrup set out to enhance the C language with Simula-like features.[10] C was chosen because it was general-purpose, fast, portable and widely used. Besides C and Simula, some other languages that inspired him were ALGOL 68, Ada, CLU and ML. At first, the class, derived class, strong typing, inlining, and default argument features were added to C via Stroustrup's "C with Classes" to C compiler, Cpre.[11]
In 1983, the name of the language was changed from C with Classes to C++ (++ being the increment operator in C). New features were added including virtual functions, function name and operator overloading, references, constants, user-controlled free-store memory control, improved type checking, and BCPL style single-line comments with two forward slashes (//), as well as the development of a proper compiler for C++, Cfront. In 1985, the first edition of The C++ Programming Language was released, providing an important reference to the language, as there was not yet an official standard.[12] The first commercial implementation of C++ was released in October of the same year.[13] Release 2.0 of C++ came in 1989 and the updated second edition of The C++ Programming Language was released in 1991.[14] New features included multiple inheritance, abstract classes, static member functions, const member functions, and protected members. In 1990, The Annotated C++ Reference Manual was published. This work became the basis for the future standard. Late feature additions included templates, exceptions, namespaces, new casts, and a Boolean type.
As the C++ language evolved, the standard library evolved with it. The first addition to the C++ standard library was the stream I/O library which provided facilities to replace the traditional C functions such as printf and scanf. Later, among the most significant additions to the standard library, was a large amount of the Standard Template Library.
It is possible to write object oriented or procedural code in the same program in C++. This has caused some concern that some C++ programmers are still writing procedural code, but are under the impression that it is object oriented, simply because they are using C++. Often it is an amalgamation of the two. This usually causes most problems when the code is revisited or the task is taken over by another coder.[15]
C++ continues to be used and is one of the preferred programming languages to develop professional applications.[16]
Etymology
According to Stroustrup: "the name signifies the evolutionary nature of the changes from C".[17] During C++'s development period, the language had been referred to as "new C", then "C with Classes". The final name is credited to Rick Mascitti (mid-1983) and was first used in December 1983. When Mascitti was questioned informally in 1992 about the naming, he indicated that it was given in a tongue-in-cheek spirit. It stems from C's "++" operator (which increments the value of a variable) and a common naming convention of using "+" to indicate an enhanced computer program. A joke goes that the name itself has a bug: due to the use of post-increment, which increments the value of the variable but evaluates to the unincremented value, C++ is no better than C, and the pre-increment ++C form should have been used instead.[18] There is no language called "C plus". ABCL/c+ was the name of an earlier, unrelated programming language. A few other languages have been named similarly to C++, most notably C-- and C#.
Philosophy
Throughout C++'s life, its development and evolution has been informally governed by a set of rules that its evolution should follow:[10]
It must be driven by actual problems and its features should be useful immediately in real world programmes.
Every feature should be implementable (with a reasonably obvious way to do so).
Programmers should be free to pick their own programming style, and that style should be fully supported by C++.
Allowing a useful feature is more important than preventing every possible misuse of C++.
It should provide facilities for organising programmes into well defined separate parts, and provide facilities for combining separately developed parts.
No implicit violations of the type system (but allow explicit violations that have been explicitly asked for by the programmer).
Make user created types have equal support and performance to built in types.
Any features that you do not use you do not pay for (e.g. in performance).
There should be no language beneath C++ (except assembly language).
C++ should work alongside other pre-existing programming languages, rather than being part of its own separate and incompatible programming environment.
If what the programmer wants to do is unknown, allow the programmer to specify (provide manual control).
Standardization
Year	C++ Standard	Informal name
1998	ISO/IEC 14882:1998[19]	C++98
2003	ISO/IEC 14882:2003[20]	C++03
2007	ISO/IEC TR 19768:2007[21]	C++TR1
2011	ISO/IEC 14882:2011[22]	C++11
In 1998, the C++ standards committee (the ISO/IEC JTC1/SC22/WG21 working group) standardized C++ and published the international standard ISO/IEC 14882:1998 (informally known as C++98). For some years after the official release of the standard, the committee processed defect reports, and in 2003 published a corrected version of the C++ standard, ISO/IEC 14882:2003. In 2005, a technical report, called the "Library Technical Report 1" (often known as TR1 for short), was released. While not an official part of the standard, it specified a number of extensions to the standard library, which were expected to be included in the next version of C++.
The latest major revision of the C++ standard, C++11, (formerly known as C++0x) was approved by ISO/IEC on 12 August 2011.[23] It has been published as 14882:2011.[24] There are plans for a minor (C++14) and a major revision (C++17) in the future.[25]
C++14 is the name being used for the next revision. C++14 is planned to be a small extension over C++11, featuring mainly bug fixes and small improvements, similarly to how C++03 was a small extension to C++98. While the name 'C++14' implies a release in 2014, this date is not fixed.
Language

C++ inherits most of C's syntax. The following is Bjarne Stroustrup's version of the Hello world program that uses the C++ Standard Library stream facility to write a message to standard output:[26][27]
# include <iostream>
 
int main()
{
   std::cout << "Hello, world!\n";
}
Within functions that define a non-void return type, failure to return a value before control reaches the end of the function results in undefined behaviour (compilers typically provide the means to issue a diagnostic in such a case).[28] The sole exception to this rule is the main function, which implicitly returns a value of zero.[29]
Operators and operator overloading
Operators that cannot be overloaded
Operator	Symbol
Scope resolution operator	 ::
Conditional operator	 ?:
dot operator	 .
Member selection operator	 .*
"sizeof" operator	 sizeof
"typeid" operator	 typeid
C++ provides more than 35 operators, covering basic arithmetic, bit manipulation, indirection, comparisons, logical operations and others. Almost all operators can be overloaded for user-defined types, with a few notable exceptions such as member access (. and .*) as well as the conditional operator. The rich set of overloadable operators is central to using user created types in C++ as well and as easily as built in types (so that the user using them cannot tell the difference). The overloadable operators are also an essential part of many advanced C++ programming techniques, such as smart pointers. Overloading an operator does not change the precedence of calculations involving the operator, nor does it change the number of operands that the operator uses (any operand may however be ignored by the operator, though it will be evaluated prior to execution). Overloaded "&&" and "||" operators lose their short-circuit evaluation property.
Memory management
C++ supports four types of memory management:
Static memory allocation. A static variable is assigned a value at compile-time, and allocated storage in a fixed location along with the executable code. These are declared with the "static" keyword (in the sense of static storage, not in the sense of declaring a class variable).
Automatic memory allocation. An automatic variable is simply declared with its class name, and storage is allocated on the stack when the value is assigned. The constructor is called when the declaration is executed, the destructor is called when the variable goes out of scope, and after the destructor the allocated memory is automatically freed.
Dynamic memory allocation. Storage can be dynamically allocated on the heap using manual memory management - normally calls to new and delete (though old-style C calls such as malloc() and free() are still supported).
With the use of a library, garbage collection is possible. The Boehm garbage collector is commonly used for this purpose.
The fine control over memory management is similar to C, but in contrast with languages that intend to hide such details from the programmer, such as Java, Perl, PHP, and Ruby.
Templates
See also: Template metaprogramming and Generic programming
C++ templates enable generic programming. C++ supports both function and class templates. Templates may be parameterized by types, compile-time constants, and other templates. Templates are implemented by instantiation at compile-time. To instantiate a template, compilers substitute specific arguments for a template's parameters to generate a concrete function or class instance. Some substitutions are not possible; these are eliminated by an overload resolution policy described by the phrase "Substitution failure is not an error" (SFINAE). Templates are a powerful tool that can be used for generic programming, template metaprogramming, and code optimization, but this power implies a cost. Template use may increase code size, because each template instantiation produces a copy of the template code: one for each set of template arguments, however, this is the same amount of code that would be generated, or less, that if the code was written by hand.[30] This is in contrast to run-time generics seen in other languages (e.g., Java) where at compile-time the type is erased and a single template body is preserved.
Templates are different from macros: while both of these compile-time language features enable conditional compilation, templates are not restricted to lexical substitution. Templates are aware of the semantics and type system of their companion language, as well as all compile-time type definitions, and can perform high-level operations including programmatic flow control based on evaluation of strictly type-checked parameters. Macros are capable of conditional control over compilation based on predetermined criteria, but cannot instantiate new types, recurse, or perform type evaluation and in effect are limited to pre-compilation text-substitution and text-inclusion/exclusion. In other words, macros can control compilation flow based on pre-defined symbols but cannot, unlike templates, independently instantiate new symbols. Templates are a tool for static polymorphism (see below) and generic programming.
In addition, templates are a compile time mechanism in C++ that is Turing-complete, meaning that any computation expressible by a computer program can be computed, in some form, by a template metaprogram prior to runtime.
In summary, a template is a compile-time parameterized function or class written without knowledge of the specific arguments used to instantiate it. After instantiation, the resulting code is equivalent to code written specifically for the passed arguments. In this manner, templates provide a way to decouple generic, broadly applicable aspects of functions and classes (encoded in templates) from specific aspects (encoded in template parameters) without sacrificing performance due to abstraction.
Objects
Main article: C++ classes
C++ introduces object-oriented programming (OOP) features to C. It offers classes, which provide the four features commonly present in OOP (and some non-OOP) languages: abstraction, encapsulation, inheritance, and polymorphism. One distinguishing feature of C++ classes compared to classes in other programming languages is support for deterministic destructors, which in turn provide support for the Resource Acquisition is Initialization (RAII) concept.
Encapsulation
Encapsulation is the hiding of information to ensure that data structures and operators are used as intended and to make the usage model more obvious to the developer. C++ provides the ability to define classes and functions as its primary encapsulation mechanisms. Within a class, members can be declared as either public, protected, or private to explicitly enforce encapsulation. A public member of the class is accessible to any function. A private member is accessible only to functions that are members of that class and to functions and classes explicitly granted access permission by the class ("friends"). A protected member is accessible to members of classes that inherit from the class in addition to the class itself and any friends.
The OO principle is that all of the functions (and only the functions) that access the internal representation of a type should be encapsulated within the type definition. C++ supports this (via member functions and friend functions), but does not enforce it: the programmer can declare parts or all of the representation of a type to be public, and is allowed to make public entities that are not part of the representation of the type. Therefore, C++ supports not just OO programming, but other weaker decomposition paradigms, like modular programming.
It is generally considered good practice to make all data private or protected, and to make public only those functions that are part of a minimal interface for users of the class. This can hide the details of data implementation, allowing the designer to later fundamentally change the implementation without changing the interface in any way.[31][32]
Inheritance
Inheritance allows one data type to acquire properties of other data types. Inheritance from a base class may be declared as public, protected, or private. This access specifier determines whether unrelated and derived classes can access the inherited public and protected members of the base class. Only public inheritance corresponds to what is usually meant by "inheritance". The other two forms are much less frequently used. If the access specifier is omitted, a "class" inherits privately, while a "struct" inherits publicly. Base classes may be declared as virtual; this is called virtual inheritance. Virtual inheritance ensures that only one instance of a base class exists in the inheritance graph, avoiding some of the ambiguity problems of multiple inheritance.
Multiple inheritance is a C++ feature not found in most other languages, allowing a class to be derived from more than one base classes; this allows for more elaborate inheritance relationships. For example, a "Flying Cat" class can inherit from both "Cat" and "Flying Mammal". Some other languages, such as C# or Java, accomplish something similar (although more limited) by allowing inheritance of multiple interfaces while restricting the number of base classes to one (interfaces, unlike classes, provide only declarations of member functions, no implementation or member data). An interface as in C# and Java can be defined in C++ as a class containing only pure virtual functions, often known as an abstract base class or "ABC". The member functions of such an abstract base class are normally explicitly defined in the derived class, not inherited implicitly. C++ virtual inheritance exhibits an ambiguity resolution feature called dominance.
Polymorphism
See also: Polymorphism in object-oriented programming
Polymorphism enables one common interface for many implementations, and for objects to act differently under different circumstances.
C++ supports several kinds of static (compile-time) and dynamic (run-time) polymorphisms. Compile-time polymorphism does not allow for certain run-time decisions, while run-time polymorphism typically incurs a performance penalty.
Static polymorphism
Function overloading allows programs to declare multiple functions having the same name (but with different arguments). The functions are distinguished by the number or types of their formal parameters. Thus, the same function name can refer to different functions depending on the context in which it is used. The type returned by the function is not used to distinguish overloaded functions and would result in a compile-time error message.
When declaring a function, a programmer can specify for one or more parameters a default value. Doing so allows the parameters with defaults to optionally be omitted when the function is called, in which case the default arguments will be used. When a function is called with fewer arguments than there are declared parameters, explicit arguments are matched to parameters in left-to-right order, with any unmatched parameters at the end of the parameter list being assigned their default arguments. In many cases, specifying default arguments in a single function declaration is preferable to providing overloaded function definitions with different numbers of parameters.
Templates in C++ provide a sophisticated mechanism for writing generic, polymorphic code. In particular, through the Curiously Recurring Template Pattern, it's possible to implement a form of static polymorphism that closely mimics the syntax for overriding virtual functions. Because C++ templates are type-aware and Turing-complete, they can also be used to let the compiler resolve recursive conditionals and generate substantial programs through template metaprogramming. Contrary to some opinion, template code will not generate a bulk code after compilation with the proper compiler settings.[30]
Dynamic polymorphism
Inheritance
Variable pointers (and references) to a base class type in C++ can refer to objects of any derived classes of that type in addition to objects exactly matching the variable type. This allows arrays and other kinds of containers to hold pointers to objects of differing types. Because assignment of values to variables usually occurs at run-time, this is necessarily a run-time phenomenon.
C++ also provides a dynamic_cast operator, which allows the program to safely attempt conversion of an object into an object of a more specific object type (as opposed to conversion to a more general type, which is always allowed). This feature relies on run-time type information (RTTI). Objects known to be of a certain specific type can also be cast to that type with static_cast, a purely compile-time construct that has no runtime overhead and does not require RTTI.
Virtual member functions
Ordinarily, when a function in a derived class overrides a function in a base class, the function to call is determined by the type of the object. A given function is overridden when there exists no difference in the number or type of parameters between two or more definitions of that function. Hence, at compile time, it may not be possible to determine the type of the object and therefore the correct function to call, given only a base class pointer; the decision is therefore put off until runtime. This is called dynamic dispatch. Virtual member functions or methods[33] allow the most specific implementation of the function to be called, according to the actual run-time type of the object. In C++ implementations, this is commonly done using virtual function tables. If the object type is known, this may be bypassed by prepending a fully qualified class name before the function call, but in general calls to virtual functions are resolved at run time.
In addition to standard member functions, operator overloads and destructors can be virtual. A general rule of thumb is that if any functions in the class are virtual, the destructor should be as well. As the type of an object at its creation is known at compile time, constructors, and by extension copy constructors, cannot be virtual. Nonetheless a situation may arise where a copy of an object needs to be created when a pointer to a derived object is passed as a pointer to a base object. In such a case, a common solution is to create a clone() (or similar) virtual function that creates and returns a copy of the derived class when called.
A member function can also be made "pure virtual" by appending it with = 0 after the closing parenthesis and before the semicolon. A class containing a pure virtual function is called an abstract data type. Objects cannot be created from abstract data types; they can only be derived from. Any derived class inherits the virtual function as pure and must provide a non-pure definition of it (and all other pure virtual functions) before objects of the derived class can be created. A program that attempts to create an object of a class with a pure virtual member function or inherited pure virtual member function is ill-formed.
Standard library

The C++ standard consists of two parts: the core language and the C++ Standard Library; which C++ programmers expect on every major implementation of C++, it includes vectors, lists, maps, algorithms (find, for_each, binary_search, random_shuffle, etc.), sets, queues, stacks, arrays, tuples, input/output facilities (iostream; reading from the console input, reading/writing from files), smart pointers for automatic memory management, regular expression support, multi-threading library, atomics support (allowing a variable to be read or written to be at most one thread at a time without any external synchronisation), time utilities (measurement, getting current time, etc.), a system for converting error reporting that doesn't use C++ exceptions into C++ exceptions, a random number generator and a slightly modified version of the C standard library (to make it comply with the C++ type system).
A large part of the C++ library is based on the STL. This provides useful tools as containers (for example vectors and lists), iterators to provide these containers with array-like access and algorithms to perform operations such as searching and sorting. Furthermore (multi)maps (associative arrays) and (multi)sets are provided, all of which export compatible interfaces. Therefore it is possible, using templates, to write generic algorithms that work with any container or on any sequence defined by iterators. As in C, the features of the library are accessed by using the #include directive to include a standard header. C++ provides 105 standard headers, of which 27 are deprecated.
The standard incorporates the STL was originally designed by Alexander Stepanov, who experimented with generic algorithms and containers for many years. When he started with C++, he finally found a language where it was possible to create generic algorithms (e.g., STL sort) that perform even better than, for example, the C standard library qsort, thanks to C++ features like using inlining and compile-time binding instead of function pointers. The standard does not refer to it as "STL", as it is merely a part of the standard library, but the term is still widely used to distinguish it from the rest of the standard library (input/output streams, internationalization, diagnostics, the C library subset, etc.).
Most C++ compilers, and all major ones, provide a standards conforming implementation of the C++ standard library.
Parsing and processing C++ source code

It is relatively difficult to write a good C++ parser with classic parsing algorithms such as LALR(1).[34] This is partly the result of the C++ grammar not being LALR. Because of this, there are very few tools for analyzing or performing non-trivial transformations (e.g., refactoring) of existing code. One way to handle this difficulty is to choose a different syntax. More powerful parsers, such as GLR parsers, can be substantially simpler (though slower).
Parsing (in the literal sense of producing a syntax tree) is not the most difficult problem in building a C++ processing tool. Such tools must also have the same understanding of the meaning of the identifiers in the program as a compiler might have. Practical systems for processing C++ must then not only parse the source text, but be able to resolve for each identifier precisely which definition applies (e.g., they must correctly handle C++'s complex scoping rules) and what its type is, as well as the types of larger expressions.
Finally, a practical C++ processing tool must be able to handle the variety of C++ dialects used in practice (such as that supported by the GNU Compiler Collection and that of Microsoft's Visual C++) and implement appropriate analyzers, source code transformers, and regenerate source text. Combining advanced parsing algorithms such as GLR with symbol table construction and program transformation machinery can enable the construction of arbitrary C++ tools.
Parsers do exist in all major compilers. Despite that only one compiler provides the parser in a format suitable for tool integration, Clang,[35] the parser is usable as a C++ (or C) library which is ready for integration into, i.e. an IDE.
Compatibility

Producing a reasonably standards-compliant C++ compiler has proven to be a difficult task for compiler vendors in general. For many years, different C++ compilers implemented the C++ language to different levels of compliance to the standard, and their implementations varied widely in some areas such as partial template specialization. Recent releases of most popular C++ compilers support almost all of the C++ 1998 standard.[36]
To give compiler vendors greater freedom, the C++ standards committee decided not to dictate the implementation of name mangling, exception handling, and other implementation-specific features. The downside of this decision is that object code produced by different compilers is expected to be incompatible. There were, however, attempts to standardize compilers for particular machines or operating systems (for example C++ ABI),[37] though they seem to be largely abandoned now.
Exported templates
One particular point of contention is the export keyword, intended to allow template definitions to be separated from their declarations. The first widely available compiler to implement export was Comeau C/C++, in early 2003 (five years after the release of the standard); in 2004, the beta compiler of Borland C++ Builder X was also released with export. Both of these compilers are based on the EDG C++ front end. Other compilers such as GCC do not support it at all. Beginning ANSI C++ by Ivor Horton provides example code with the keyword that will not compile in most compilers, without reference to this problem. Herb Sutter, former convener of the C++ standards committee, recommended that export be removed from future versions of the C++ standard.[38] During the March 2010 ISO C++ standards meeting, the C++ standards committee voted to remove exported templates entirely from C++11, but reserve the keyword for future use.[39]
With C
For more details on this topic, see Compatibility of C and C++.
Gnome globe current event.svg
This section's factual accuracy may be compromised due to out-of-date information. Please update this article to reflect recent events or newly available information. (September 2011)
C++ is often considered to be a superset of C, but this is not strictly true.[40] Most C code can easily be made to compile correctly in C++, but there are a few differences that cause some valid C code to be invalid or behave differently in C++.
One commonly encountered difference is that C allows implicit conversion from void* to other pointer types, but C++ does not (for type safety reasons). Another common portability issue is that C++ defines many new keywords, such as new and class, which may be used as identifiers (e.g. variable names) in a C program.
Some incompatibilities have been removed by the 1999 revision of the C standard (C99), which now supports C++ features such as line comments (//), and declarations mixed with code. On thC++
From Wikipedia, the free encyclopedia

This article may be too technical for most readers to understand. Please help improve this article to make it understandable to non-experts, without removing the technical details. The talk page may contain suggestions. (July 2013)
Page semi-protected
Add to Google CalendarC++
Paradigm(s)	Multi-paradigm:[1] procedural, functional, object-oriented, generic
Appeared in	1983
Designed by	Bjarne Stroustrup
Stable release	ISO/IEC 14882:2011 (2011)
Typing discipline	Static, Nominative
Major implementations	LLVM Clang, GCC, Microsoft Visual C++, Intel C++ Compiler, Comeau C/C++, Sun Studio
Dialects	Embedded C++, Managed C++, C++/CLI, C++/CX
Influenced	Perl, LPC, Lua, Pike, Ada 95, Java, PHP, D, C99, C#,[2] Falcon, Seed7
Implementation language	C, C++
OS	Cross-platform (multi-platform)
Usual filename extensions	.h .hh .hpp .hxx .h++ .cc .cpp .cxx .c++
Website	News, status & discussion about Standard C++
 C++ Programming at Wikibooks
C++ (pronounced "see plus plus") is a programming language that is general purpose, statically typed, free-form, multi-paradigm and compiled. It is regarded as an intermediate-level language, as it comprises both high-level and low-level language features.[3] Developed by Bjarne Stroustrup starting in 1979 at Bell Labs, C++ was originally named C with Classes, adding object oriented features, such as classes, and other enhancements to the C programming language. The language was renamed C++ in 1983,[4] as a pun involving the increment operator.
C++ is one of the most popular programming languages[5][6] and is implemented on a wide variety of hardware and operating system platforms. As an efficient compiler to native code, its application domains include systems software, application software, device drivers, embedded software, high-performance server and client applications, and entertainment software such as video games.[7] Several groups provide both free and proprietary C++ compiler software, including the GNU Project, LLVM, Microsoft and Intel. C++ has greatly influenced many other popular programming languages, most notably C#[2] and Java.
C++ is also used for hardware design, where the design is initially described in C++, then analyzed, architecturally constrained, and scheduled to create a register-transfer level hardware description language via high-level synthesis.[8]
The language began as enhancements to C, first adding classes, then virtual functions, operator overloading, multiple inheritance, templates and exception handling, among other features. After years of development, the C++ programming language standard was ratified in 1998 as ISO/IEC 14882:1998. The standard was amended by the 2003 technical corrigendum, ISO/IEC 14882:2003. The current standard extending C++ with new features was ratified and published by ISO in September 2011 as ISO/IEC 14882:2011 (informally known as C++11).[9]
Contents  [hide] 
1 History
1.1 Etymology
1.2 Philosophy
1.3 Standardization
2 Language
2.1 Operators and operator overloading
2.2 Memory management
2.3 Templates
2.4 Objects
2.5 Polymorphism
3 Standard library
4 Parsing and processing C++ source code
5 Compatibility
5.1 Exported templates
5.2 With C
6 Criticism
7 See also
8 Further reading
9 References
10 External links
History



Bjarne Stroustrup, creator of C++
Bjarne Stroustrup, a Danish and British trained computer scientist, began his work on "C with Classes" in 1979.[4] The idea of creating a new language originated from Stroustrup's experience in programming for his Ph.D. thesis. Stroustrup found that Simula had features that were very helpful for large software development, but the language was too slow for practical use, while BCPL was fast but too low-level to be suitable for large software development. When Stroustrup started working in AT&T Bell Labs, he had the problem of analyzing the UNIX kernel with respect to distributed computing. Remembering his Ph.D. experience, Stroustrup set out to enhance the C language with Simula-like features.[10] C was chosen because it was general-purpose, fast, portable and widely used. Besides C and Simula, some other languages that inspired him were ALGOL 68, Ada, CLU and ML. At first, the class, derived class, strong typing, inlining, and default argument features were added to C via Stroustrup's "C with Classes" to C compiler, Cpre.[11]
In 1983, the name of the language was changed from C with Classes to C++ (++ being the increment operator in C). New features were added including virtual functions, function name and operator overloading, references, constants, user-controlled free-store memory control, improved type checking, and BCPL style single-line comments with two forward slashes (//), as well as the development of a proper compiler for C++, Cfront. In 1985, the first edition of The C++ Programming Language was released, providing an important reference to the language, as there was not yet an official standard.[12] The first commercial implementation of C++ was released in October of the same year.[13] Release 2.0 of C++ came in 1989 and the updated second edition of The C++ Programming Language was released in 1991.[14] New features included multiple inheritance, abstract classes, static member functions, const member functions, and protected members. In 1990, The Annotated C++ Reference Manual was published. This work became the basis for the future standard. Late feature additions included templates, exceptions, namespaces, new casts, and a Boolean type.
As the C++ language evolved, the standard library evolved with it. The first addition to the C++ standard library was the stream I/O library which provided facilities to replace the traditional C functions such as printf and scanf. Later, among the most significant additions to the standard library, was a large amount of the Standard Template Library.
It is possible to write object oriented or procedural code in the same program in C++. This has caused some concern that some C++ programmers are still writing procedural code, but are under the impression that it is object oriented, simply because they are using C++. Often it is an amalgamation of the two. This usually causes most problems when the code is revisited or the task is taken over by another coder.[15]
C++ continues to be used and is one of the preferred programming languages to develop professional applications.[16]
Etymology
According to Stroustrup: "the name signifies the evolutionary nature of the changes from C".[17] During C++'s development period, the language had been referred to as "new C", then "C with Classes". The final name is credited to Rick Mascitti (mid-1983) and was first used in December 1983. When Mascitti was questioned informally in 1992 about the naming, he indicated that it was given in a tongue-in-cheek spirit. It stems from C's "++" operator (which increments the value of a variable) and a common naming convention of using "+" to indicate an enhanced computer program. A joke goes that the name itself has a bug: due to the use of post-increment, which increments the value of the variable but evaluates to the unincremented value, C++ is no better than C, and the pre-increment ++C form should have been used instead.[18] There is no language called "C plus". ABCL/c+ was the name of an earlier, unrelated programming language. A few other languages have been named similarly to C++, most notably C-- and C#.
Philosophy
Throughout C++'s life, its development and evolution has been informally governed by a set of rules that its evolution should follow:[10]
It must be driven by actual problems and its features should be useful immediately in real world programmes.
Every feature should be implementable (with a reasonably obvious way to do so).
Programmers should be free to pick their own programming style, and that style should be fully supported by C++.
Allowing a useful feature is more important than preventing every possible misuse of C++.
It should provide facilities for organising programmes into well defined separate parts, and provide facilities for combining separately developed parts.
No implicit violations of the type system (but allow explicit violations that have been explicitly asked for by the programmer).
Make user created types have equal support and performance to built in types.
Any features that you do not use you do not pay for (e.g. in performance).
There should be no language beneath C++ (except assembly language).
C++ should work alongside other pre-existing programming languages, rather than being part of its own separate and incompatible programming environment.
If what the programmer wants to do is unknown, allow the programmer to specify (provide manual control).
Standardization
Year	C++ Standard	Informal name
1998	ISO/IEC 14882:1998[19]	C++98
2003	ISO/IEC 14882:2003[20]	C++03
2007	ISO/IEC TR 19768:2007[21]	C++TR1
2011	ISO/IEC 14882:2011[22]	C++11
In 1998, the C++ standards committee (the ISO/IEC JTC1/SC22/WG21 working group) standardized C++ and published the international standard ISO/IEC 14882:1998 (informally known as C++98). For some years after the official release of the standard, the committee processed defect reports, and in 2003 published a corrected version of the C++ standard, ISO/IEC 14882:2003. In 2005, a technical report, called the "Library Technical Report 1" (often known as TR1 for short), was released. While not an official part of the standard, it specified a number of extensions to the standard library, which were expected to be included in the next version of C++.
The latest major revision of the C++ standard, C++11, (formerly known as C++0x) was approved by ISO/IEC on 12 August 2011.[23] It has been published as 14882:2011.[24] There are plans for a minor (C++14) and a major revision (C++17) in the future.[25]
C++14 is the name being used for the next revision. C++14 is planned to be a small extension over C++11, featuring mainly bug fixes and small improvements, similarly to how C++03 was a small extension to C++98. While the name 'C++14' implies a release in 2014, this date is not fixed.
Language

C++ inherits most of C's syntax. The following is Bjarne Stroustrup's version of the Hello world program that uses the C++ Standard Library stream facility to write a message to standard output:[26][27]
# include <iostream>
 
int main()
{
   std::cout << "Hello, world!\n";
}
Within functions that define a non-void return type, failure to return a value before control reaches the end of the function results in undefined behaviour (compilers typically provide the means to issue a diagnostic in such a case).[28] The sole exception to this rule is the main function, which implicitly returns a value of zero.[29]
Operators and operator overloading
Operators that cannot be overloaded
Operator	Symbol
Scope resolution operator	 ::
Conditional operator	 ?:
dot operator	 .
Member selection operator	 .*
"sizeof" operator	 sizeof
"typeid" operator	 typeid
C++ provides more than 35 operators, covering basic arithmetic, bit manipulation, indirection, comparisons, logical operations and others. Almost all operators can be overloaded for user-defined types, with a few notable exceptions such as member access (. and .*) as well as the conditional operator. The rich set of overloadable operators is central to using user created types in C++ as well and as easily as built in types (so that the user using them cannot tell the difference). The overloadable operators are also an essential part of many advanced C++ programming techniques, such as smart pointers. Overloading an operator does not change the precedence of calculations involving the operator, nor does it change the number of operands that the operator uses (any operand may however be ignored by the operator, though it will be evaluated prior to execution). Overloaded "&&" and "||" operators lose their short-circuit evaluation property.
Memory management
C++ supports four types of memory management:
Static memory allocation. A static variable is assigned a value at compile-time, and allocated storage in a fixed location along with the executable code. These are declared with the "static" keyword (in the sense of static storage, not in the sense of declaring a class variable).
Automatic memory allocation. An automatic variable is simply declared with its class name, and storage is allocated on the stack when the value is assigned. The constructor is called when the declaration is executed, the destructor is called when the variable goes out of scope, and after the destructor the allocated memory is automatically freed.
Dynamic memory allocation. Storage can be dynamically allocated on the heap using manual memory management - normally calls to new and delete (though old-style C calls such as malloc() and free() are still supported).
With the use of a library, garbage collection is possible. The Boehm garbage collector is commonly used for this purpose.
The fine control over memory management is similar to C, but in contrast with languages that intend to hide such details from the programmer, such as Java, Perl, PHP, and Ruby.
Templates
See also: Template metaprogramming and Generic programming
C++ templates enable generic programming. C++ supports both function and class templates. Templates may be parameterized by types, compile-time constants, and other templates. Templates are implemented by instantiation at compile-time. To instantiate a template, compilers substitute specific arguments for a template's parameters to generate a concrete function or class instance. Some substitutions are not possible; these are eliminated by an overload resolution policy described by the phrase "Substitution failure is not an error" (SFINAE). Templates are a powerful tool that can be used for generic programming, template metaprogramming, and code optimization, but this power implies a cost. Template use may increase code size, because each template instantiation produces a copy of the template code: one for each set of template arguments, however, this is the same amount of code that would be generated, or less, that if the code was written by hand.[30] This is in contrast to run-time generics seen in other languages (e.g., Java) where at compile-time the type is erased and a single template body is preserved.
Templates are different from macros: while both of these compile-time language features enable conditional compilation, templates are not restricted to lexical substitution. Templates are aware of the semantics and type system of their companion language, as well as all compile-time type definitions, and can perform high-level operations including programmatic flow control based on evaluation of strictly type-checked parameters. Macros are capable of conditional control over compilation based on predetermined criteria, but cannot instantiate new types, recurse, or perform type evaluation and in effect are limited to pre-compilation text-substitution and text-inclusion/exclusion. In other words, macros can control compilation flow based on pre-defined symbols but cannot, unlike templates, independently instantiate new symbols. Templates are a tool for static polymorphism (see below) and generic programming.
In addition, templates are a compile time mechanism in C++ that is Turing-complete, meaning that any computation expressible by a computer program can be computed, in some form, by a template metaprogram prior to runtime.
In summary, a template is a compile-time parameterized function or class written without knowledge of the specific arguments used to instantiate it. After instantiation, the resulting code is equivalent to code written specifically for the passed arguments. In this manner, templates provide a way to decouple generic, broadly applicable aspects of functions and classes (encoded in templates) from specific aspects (encoded in template parameters) without sacrificing performance due to abstraction.
Objects
Main article: C++ classes
C++ introduces object-oriented programming (OOP) features to C. It offers classes, which provide the four features commonly present in OOP (and some non-OOP) languages: abstraction, encapsulation, inheritance, and polymorphism. One distinguishing feature of C++ classes compared to classes in other programming languages is support for deterministic destructors, which in turn provide support for the Resource Acquisition is Initialization (RAII) concept.
Encapsulation
Encapsulation is the hiding of information to ensure that data structures and operators are used as intended and to make the usage model more obvious to the developer. C++ provides the ability to define classes and functions as its primary encapsulation mechanisms. Within a class, members can be declared as either public, protected, or private to explicitly enforce encapsulation. A public member of the class is accessible to any function. A private member is accessible only to functions that are members of that class and to functions and classes explicitly granted access permission by the class ("friends"). A protected member is accessible to members of classes that inherit from the class in addition to the class itself and any friends.
The OO principle is that all of the functions (and only the functions) that access the internal representation of a type should be encapsulated within the type definition. C++ supports this (via member functions and friend functions), but does not enforce it: the programmer can declare parts or all of the representation of a type to be public, and is allowed to make public entities that are not part of the representation of the type. Therefore, C++ supports not just OO programming, but other weaker decomposition paradigms, like modular programming.
It is generally considered good practice to make all data private or protected, and to make public only those functions that are part of a minimal interface for users of the class. This can hide the details of data implementation, allowing the designer to later fundamentally change the implementation without changing the interface in any way.[31][32]
Inheritance
Inheritance allows one data type to acquire properties of other data types. Inheritance from a base class may be declared as public, protected, or private. This access specifier determines whether unrelated and derived classes can access the inherited public and protected members of the base class. Only public inheritance corresponds to what is usually meant by "inheritance". The other two forms are much less frequently used. If the access specifier is omitted, a "class" inherits privately, while a "struct" inherits publicly. Base classes may be declared as virtual; this is called virtual inheritance. Virtual inheritance ensures that only one instance of a base class exists in the inheritance graph, avoiding some of the ambiguity problems of multiple inheritance.
Multiple inheritance is a C++ feature not found in most other languages, allowing a class to be derived from more than one base classes; this allows for more elaborate inheritance relationships. For example, a "Flying Cat" class can inherit from both "Cat" and "Flying Mammal". Some other languages, such as C# or Java, accomplish something similar (although more limited) by allowing inheritance of multiple interfaces while restricting the number of base classes to one (interfaces, unlike classes, provide only declarations of member functions, no implementation or member data). An interface as in C# and Java can be defined in C++ as a class containing only pure virtual functions, often known as an abstract base class or "ABC". The member functions of such an abstract base class are normally explicitly defined in the derived class, not inherited implicitly. C++ virtual inheritance exhibits an ambiguity resolution feature called dominance.
Polymorphism
See also: Polymorphism in object-oriented programming
Polymorphism enables one common interface for many implementations, and for objects to act differently under different circumstances.
C++ supports several kinds of static (compile-time) and dynamic (run-time) polymorphisms. Compile-time polymorphism does not allow for certain run-time decisions, while run-time polymorphism typically incurs a performance penalty.
Static polymorphism
Function overloading allows programs to declare multiple functions having the same name (but with different arguments). The functions are distinguished by the number or types of their formal parameters. Thus, the same function name can refer to different functions depending on the context in which it is used. The type returned by the function is not used to distinguish overloaded functions and would result in a compile-time error message.
When declaring a function, a programmer can specify for one or more parameters a default value. Doing so allows the parameters with defaults to optionally be omitted when the function is called, in which case the default arguments will be used. When a function is called with fewer arguments than there are declared parameters, explicit arguments are matched to parameters in left-to-right order, with any unmatched parameters at the end of the parameter list being assigned their default arguments. In many cases, specifying default arguments in a single function declaration is preferable to providing overloaded function definitions with different numbers of parameters.
Templates in C++ provide a sophisticated mechanism for writing generic, polymorphic code. In particular, through the Curiously Recurring Template Pattern, it's possible to implement a form of static polymorphism that closely mimics the syntax for overriding virtual functions. Because C++ templates are type-aware and Turing-complete, they can also be used to let the compiler resolve recursive conditionals and generate substantial programs through template metaprogramming. Contrary to some opinion, template code will not generate a bulk code after compilation with the proper compiler settings.[30]
Dynamic polymorphism
Inheritance
Variable pointers (and references) to a base class type in C++ can refer to objects of any derived classes of that type in addition to objects exactly matching the variable type. This allows arrays and other kinds of containers to hold pointers to objects of differing types. Because assignment of values to variables usually occurs at run-time, this is necessarily a run-time phenomenon.
C++ also provides a dynamic_cast operator, which allows the program to safely attempt conversion of an object into an object of a more specific object type (as opposed to conversion to a more general type, which is always allowed). This feature relies on run-time type information (RTTI). Objects known to be of a certain specific type can also be cast to that type with static_cast, a purely compile-time construct that has no runtime overhead and does not require RTTI.
Virtual member functions
Ordinarily, when a function in a derived class overrides a function in a base class, the function to call is determined by the type of the object. A given function is overridden when there exists no difference in the number or type of parameters between two or more definitions of that function. Hence, at compile time, it may not be possible to determine the type of the object and therefore the correct function to call, given only a base class pointer; the decision is therefore put off until runtime. This is called dynamic dispatch. Virtual member functions or methods[33] allow the most specific implementation of the function to be called, according to the actual run-time type of the object. In C++ implementations, this is commonly done using virtual function tables. If the object type is known, this may be bypassed by prepending a fully qualified class name before the function call, but in general calls to virtual functions are resolved at run time.
In addition to standard member functions, operator overloads and destructors can be virtual. A general rule of thumb is that if any functions in the class are virtual, the destructor should be as well. As the type of an object at its creation is known at compile time, constructors, and by extension copy constructors, cannot be virtual. Nonetheless a situation may arise where a copy of an object needs to be created when a pointer to a derived object is passed as a pointer to a base object. In such a case, a common solution is to create a clone() (or similar) virtual function that creates and returns a copy of the derived class when called.
A member function can also be made "pure virtual" by appending it with = 0 after the closing parenthesis and before the semicolon. A class containing a pure virtual function is called an abstract data type. Objects cannot be created from abstract data types; they can only be derived from. Any derived class inherits the virtual function as pure and must provide a non-pure definition of it (and all other pure virtual functions) before objects of the derived class can be created. A program that attempts to create an object of a class with a pure virtual member function or inherited pure virtual member function is ill-formed.
Standard library

The C++ standard consists of two parts: the core language and the C++ Standard Library; which C++ programmers expect on every major implementation of C++, it includes vectors, lists, maps, algorithms (find, for_each, binary_search, random_shuffle, etc.), sets, queues, stacks, arrays, tuples, input/output facilities (iostream; reading from the console input, reading/writing from files), smart pointers for automatic memory management, regular expression support, multi-threading library, atomics support (allowing a variable to be read or written to be at most one thread at a time without any external synchronisation), time utilities (measurement, getting current time, etc.), a system for converting error reporting that doesn't use C++ exceptions into C++ exceptions, a random number generator and a slightly modified version of the C standard library (to make it comply with the C++ type system).
A large part of the C++ library is based on the STL. This provides useful tools as containers (for example vectors and lists), iterators to provide these containers with array-like access and algorithms to perform operations such as searching and sorting. Furthermore (multi)maps (associative arrays) and (multi)sets are provided, all of which export compatible interfaces. Therefore it is possible, using templates, to write generic algorithms that work with any container or on any sequence defined by iterators. As in C, the features of the library are accessed by using the #include directive to include a standard header. C++ provides 105 standard headers, of which 27 are deprecated.
The standard incorporates the STL was originally designed by Alexander Stepanov, who experimented with generic algorithms and containers for many years. When he started with C++, he finally found a language where it was possible to create generic algorithms (e.g., STL sort) that perform even better than, for example, the C standard library qsort, thanks to C++ features like using inlining and compile-time binding instead of function pointers. The standard does not refer to it as "STL", as it is merely a part of the standard library, but the term is still widely used to distinguish it from the rest of the standard library (input/output streams, internationalization, diagnostics, the C library subset, etc.).
Most C++ compilers, and all major ones, provide a standards conforming implementation of the C++ standard library.
Parsing and processing C++ source code

It is relatively difficult to write a good C++ parser with classic parsing algorithms such as LALR(1).[34] This is partly the result of the C++ grammar not being LALR. Because of this, there are very few tools for analyzing or performing non-trivial transformations (e.g., refactoring) of existing code. One way to handle this difficulty is to choose a different syntax. More powerful parsers, such as GLR parsers, can be substantially simpler (though slower).
Parsing (in the literal sense of producing a syntax tree) is not the most difficult problem in building a C++ processing tool. Such tools must also have the same understanding of the meaning of the identifiers in the program as a compiler might have. Practical systems for processing C++ must then not only parse the source text, but be able to resolve for each identifier precisely which definition applies (e.g., they must correctly handle C++'s complex scoping rules) and what its type is, as well as the types of larger expressions.
Finally, a practical C++ processing tool must be able to handle the variety of C++ dialects used in practice (such as that supported by the GNU Compiler Collection and that of Microsoft's Visual C++) and implement appropriate analyzers, source code transformers, and regenerate source text. Combining advanced parsing algorithms such as GLR with symbol table construction and program transformation machinery can enable the construction of arbitrary C++ tools.
Parsers do exist in all major compilers. Despite that only one compiler provides the parser in a format suitable for tool integration, Clang,[35] the parser is usable as a C++ (or C) library which is ready for integration into, i.e. an IDE.
Compatibility

Producing a reasonably standards-compliant C++ compiler has proven to be a difficult task for compiler vendors in general. For many years, different C++ compilers implemented the C++ language to different levels of compliance to the standard, and their implementations varied widely in some areas such as partial template specialization. Recent releases of most popular C++ compilers support almost all of the C++ 1998 standard.[36]
To give compiler vendors greater freedom, the C++ standards committee decided not to dictate the implementation of name mangling, exception handling, and other implementation-specific features. The downside of this decision is that object code produced by different compilers is expected to be incompatible. There were, however, attempts to standardize compilers for particular machines or operating systems (for example C++ ABI),[37] though they seem to be largely abandoned now.
Exported templates
One particular point of contention is the export keyword, intended to allow template definitions to be separated from their declarations. The first widely available compiler to implement export was Comeau C/C++, in early 2003 (five years after the release of the standard); in 2004, the beta compiler of Borland C++ Builder X was also released with export. Both of these compilers are based on the EDG C++ front end. Other compilers such as GCC do not support it at all. Beginning ANSI C++ by Ivor Horton provides example code with the keyword that will not compile in most compilers, without reference to this problem. Herb Sutter, former convener of the C++ standards committee, recommended that export be removed from future versions of the C++ standard.[38] During the March 2010 ISO C++ standards meeting, the C++ standards committee voted to remove exported templates entirely from C++11, but reserve the keyword for future use.[39]
With C
For more details on this topic, see Compatibility of C and C++.
Gnome globe current event.svg
This section's factual accuracy may be compromised due to out-of-date information. Please update this article to reflect recent events or newly available information. (September 2011)
C++ is often considered to be a superset of C, but this is not strictly true.[40] Most C code can easily be made to compile correctly in C++, but there are a few differences that cause some valid C code to be invalid or behave differently in C++.
One commonly encountered difference is that C allows implicit conversion from void* to other pointer types, but C++ does not (for type safety reasons). Another common portability issue is that C++ defines many new keywords, such as new and class, which may be used as identifiers (e.g. variable names) in a C program.
Some incompatibilities have been removed by the 1999 revision of the C standard (C99), which now supports C++ features such as line comments (//), and declarations mixed with code. On the other hand, C99 introduced a number of new features that C++ did not support, were incompatible or redundant in C++ (e.g. complex, use the complex class in the standard library instead), such as variable-length arrays, native complex-number types, designated initializers, compound literals, the boolean typedef (in C++ it is a fundamental type) and the restrict keyword.[41] Some of the C99-introduced features were included in the subsequent version of the C++ standard, C++11:[42][43][44]
C99 preprocessor (including variadic macros, wide/narrow literal concatenation, wider integer arithmetic)
_Pragma()
long long
__func__
Headers:
cstdbool (stdbool.h)
cstdint (stdint.h)
cinttypes (inttypes.h).
To intermix C and C++ code, any function declaration or definition that is to be called from/used both in C and C++ must be declared with C linkage by placing it within an extern "C" {/*...*/} block. Such a function may not rely on features depending on name mangling (i.e., function overloading).
Criticism

C++ is sometimes compared unfavorably with more strictly object-oriented languages on the basis that it enables programmers to "mix and match" declarative, functional, generic, modular, and procedural programming styles with object-oriented programming, rather than strictly enforcing a single style, although C++ is intentionally a multi-paradigm language.e other hand, C99 introduced a number of new features that C++ did not support, were incompatible or redundant in C++ (e.g. complex, use the complex class in the standard library instead), such as variable-length arrays, native complex-number types, designated initializers, compound literals, the boolean typedef (in C++ it is a fundamental type) and the restrict keyword.[41] Some of the C99-introduced features were included in the subsequent version of the C++ standard, C++11:[42][43][44]
C99 preprocessor (including variadic macros, wide/narrow literal concatenation, wider integer arithmetic)
_Pragma()
long long
__func__
Headers:
cstdbool (stdbool.h)
cstdint (stdint.h)
cinttypes (inttypes.h).
To intermix C and C++ code, any function declaration or definition that is to be called from/used both in C and C++ must be declared with C linkage by placing it within an extern "C" {/*...*/} block. Such a function may not rely on features depending on name mangling (i.e., function overloading).
Criticism

C++ is sometimes compared unfavorably with more strictly object-oriented languages on the basis that it enables programmers to "mix and match" declarative, functional, generic, modular, and procedural programming styles with object-oriented programming, rather than strictly enforcing a single style, although C++ is intentionally a multi-paradigm language.e other hand, C99 introduced a number of new features that C++ did not support, were incompatible or redundant in C++ (e.g. complex, use the complex class in the standard library instead), such as variable-length arrays, native complex-number types, designated initializers, compound literals, the boolean typedef (in C++ it is a fundamental type) and the restrict keyword.[41] Some of the C99-introduced features were included in the subsequent version of the C++ standard, C++11:[42][43][44]
C99 preprocessor (including variadic macros, wide/narrow literal concatenation, wider integer arithmetic)
_Pragma()
long long
__func__
Headers:
cstdbool (stdbool.h)
cstdint (stdint.h)
cinttypes (inttypes.h).
To intermix C and C++ code, any function declaration or definition that is to be called from/used both in C and C++ must be declared with C linkage by placing it within an extern "C" {/*...*/} block. Such a function may not rely on features depending on name mangling (i.e., function overloading).
Criticism

C++ is sometimes compared unfavorably with more strictly object-oriented languages on the basis that it enables programmers to "mix and match" declarative, functional, generic, modular, and procedural programming styles with object-oriented programming, rather than strictly enforcing a single style, although C++ is intentionally a multi-paradigm language.e other hand, C99 introduced a number of new features that C++ did not support, were incompatible or redundant in C++ (e.g. complex, use the complex class in the standard library instead), such as variable-length arrays, native complex-number types, designated initializers, compound literals, the boolean typedef (in C++ it is a fundamental type) and the restrict keyword.[41] Some of the C99-introduced features were included in the subsequent version of the C++ standard, C++11:[42][43][44]
C99 preprocessor (including variadic macros, wide/narrow literal concatenation, wider integer arithmetic)
_Pragma()
long long
__func__
Headers:
cstdbool (stdbool.h)
cstdint (stdint.h)
cinttypes (inttypes.h).
To intermix C and C++ code, any function declaration or definition that is to be called from/used both in C and C++ must be declared with C linkage by placing it within an extern "C" {/*...*/} block. Such a function may not rely on features depending on name mangling (i.e., function overloading).
Criticism

C++ is sometimes compared unfavorably with more strictly object-oriented languages on the basis that it enables programmers to "mix and match" declarative, functional, generic, modular, and procedural programming styles with object-oriented programming, rather than strictly enforcing a single style, although C++ is intentionally a multi-paradigm language.collection is possible. The Boehm garbage collector is commonly used for this purpose.
The fine control over memory management is similar to C, but in contrast with languages that intend to hide such details from the programmer, such as Java, Perl, PHP, and Ruby.
Templates
See also: Template metaprogramming and Generic programming
C++ templates enable generic programming. C++ supports both function and class templates. Templates may be parameterized by types, compile-time constants, and other templates. Templates are implemented by instantiation at compile-time. To instantiate a template, compilers substitute specific arguments for a template's parameters to generate a concrete function or class instance. Some substitutions are not possible; these are eliminated by an overload resolution policy described by the phrase "Substitution failure is not an error" (SFINAE). Templates are a powerful tool that can be used for generic programming, template metaprogramming, and code optimization, but this power implies a cost. Template use may increase code size, because each template instantiation produces a copy of the template code: one for each set of template arguments, however, this is the same amount of code that would be generated, or less, that if the code was written by hand.[30] This is in contrast to run-time generics seen in other languages (e.g., Java) where at compile-time the type is erased and a single template body is preserved.
Templates are different from macros: while both of these compile-time language features enable conditional compilation, templates are not restricted to lexical substitution. Templates are aware of the semantics and type system of their companion language, as well as all compile-time type definitions, and can perform high-level operations including programmatic flow control based on evaluation of strictly type-checked parameters. Macros are capable of conditional control over compilation based on predetermined criteria, but cannot instantiate new types, recurse, or perform type evaluation and in effect are limited to pre-compilation text-substitution and text-inclusion/exclusion. In other words, macros can control compilation flow based on pre-defined symbols but cannot, unlike templates, independently instantiate new symbols. Templates are a tool for static polymorphism (see below) and generic programming.
In addition, templates are a compile time mechanism in C++ that is Turing-complete, meaning that any computation expressible by a computer program can be computed, in some form, by a template metaprogram prior to runtime.
In summary, a template is a compile-time parameterized function or class written without knowledge of the specific arguments used to instantiate it. After instantiation, the resulting code is equivalent to code written specifically for the passed arguments. In this manner, templates provide a way to decouple generic, broadly applicable aspects of functions and classes (encoded in templates) from specific aspects (encoded in template parameters) without sacrificing performance due to abstraction.
Objects
Main article: C++ classes
C++ introduces object-oriented programming (OOP) features to C. It offers classes, which provide the four features commonly present in OOP (and some non-OOP) languages: abstraction, encapsulation, inheritance, and polymorphism. One distinguishing feature of C++ classes compared to classes in other programming languages is support for deterministic destructors, which in turn provide support for the Resource Acquisition is Initialization (RAII) concept.
Encapsulation
Encapsulation is the hiding of information to ensure that data structures and operators are used as intended and to make the usage model more obvious to the developer. C++ provides the ability to define classes and functions as its primary encapsulation mechanisms. Within a class, members can be declared as either public, protected, or private to explicitly enforce encapsulation. A public member of the class is accessible to any function. A private member is accessible only to functions that are members of that class and to functions and classes explicitly granted access permission by the class ("friends"). A protected member is accessible to members of classes that inherit from the class in addition to the class itself and any friends.
The OO principle is that all of the functions (and only the functions) that access the internal representation of a type should be encapsulated within the type definition. C++ supports this (via member functions and friend functions), but does not enforce it: the programmer can declare parts or all of the representation of a type to be public, and is allowed to make public entities that are not part of the representation of the type. Therefore, C++ supports not just OO programming, but other weaker decomposition paradigms, like modular programming.
It is generally considered good practice to make all data private or protected, and to make public only those functions that are part of a minimal interface for users of the class. This can hide the details of data implementation, allowing the designer to later fundamentally change the implementation without changing the interface in any way.[31][32]
Inheritance
Inheritance allows one data type to acquire properties of other data types. Inheritance from a base class may be declared as public, protected, or private. This access specifier determines whether unrelated and derived classes can access the inherited public and protected members of the base class. Only public inheritance corresponds to what is usually meant by "inheritance". The other two forms are much less frequently used. If the access specifier is omitted, a "class" inherits privately, while a "struct" inherits publicly. Base classes may be declared as virtual; this is called virtual inheritance. Virtual inheritance ensures that only one instance of a base class exists in the inheritance graph, avoiding some of the ambiguity problems of multiple inheritance.
Multiple inheritance is a C++ feature not found in most other languages, allowing a class to be derived from more than one base classes; this allows for more elaborate inheritance relationships. For example, a "Flying Cat" class can inherit from both "Cat" and "Flying Mammal". Some other languages, such as C# or Java, accomplish something similar (although more limited) by allowing inheritance of multiple interfaces while restricting the number of base classes to one (interfaces, unlike classes, provide only declarations of member functions, no implementation or member data). An interface as in C# and Java can be defined in C++ as a class containing only pure virtual functions, often known as an abstract base class or "ABC". The member functions of such an abstract base class are normally explicitly defined in the derived class, not inherited implicitly. C++ virtual inheritance exhibits an ambiguity resolution feature called dominance.
Polymorphism
See also: Polymorphism in object-oriented programming
Polymorphism enables one common interface for many implementations, and for objects to act differently under different circumstances.
C++ supports several kinds of static (compile-time) and dynamic (run-time) polymorphisms. Compile-time polymorphism does not allow for certain run-time decisions, while run-time polymorphism typically incurs a performance penalty.
Static polymorphism
Function overloading allows programs to declare multiple functions having the same name (but with different arguments). The functions are distinguished by the number or types of their formal parameters. Thus, the same function name can refer to different functions depending on the context in which it is used. The type returned by the function is not used to distinguish overloaded functions and would result in a compile-time error message.
When declaring a function, a programmer can specify for one or more parameters a default value. Doing so allows the parameters with defaults to optionally be omitted when the function is called, in which case the default arguments will be used. When a function is called with fewer arguments than there are declared parameters, explicit arguments are matched to parameters in left-to-right order, with any unmatched parameters at the end of the parameter list being assigned their default arguments. In many cases, specifying default arguments in a single function declaration is preferable to providing overloaded function definitions with different numbers of parameters.
Templates in C++ provide a sophisticated mechanism for writing generic, polymorphic code. In particular, through the Curiously Recurring Template Pattern, it's possible to implement a form of static polymorphism that closely mimics the syntax for overriding virtual functions. Because C++ templates are type-aware and Turing-complete, they can also be used to let the compiler resolve recursive conditionals and generate substantial programs through template metaprogramming. Contrary to some opinion, template code will not generate a bulk code after compilation with the proper compiler settings.[30]
Dynamic polymorphism
Inheritance
Variable pointers (and references) to a base class type in C++ can refer to objects of any derived classes of that type in addition to objects exactly matching the variable type. This allows arrays and other kinds of containers to hold pointers to objects of differing types. Because assignment of values to variables usually occurs at run-time, this is necessarily a run-time phenomenon.
C++ also provides a dynamic_cast operator, which allows the program to safely attempt conversion of an object into an object of a more specific object type (as opposed to conversion to a more general type, which is always allowed). This feature relies on run-time type information (RTTI). Objects known to be of a certain specific type can also be cast to that type with static_cast, a purely compile-time construct that has no runtime overhead and does not require RTTI.
Virtual member functions
Ordinarily, when a function in a derived class overrides a function in a base class, the function to call is determined by the type of the object. A given function is overridden when there exists no difference in the number or type of parameters between two or more definitions of that function. Hence, at compile time, it may not be possible to determine the type of the object and therefore the correct function to call, given only a base class pointer; the decision is therefore put off until runtime. This is called dynamic dispatch. Virtual member functions or methods[33] allow the most specific implementation of the function to be called, according to the actual run-time type of the object. In C++ implementations, this is commonly done using virtual function tables. If the object type is known, this may be bypassed by prepending a fully qualified class name before the function call, but in general calls to virtual functions are resolved at run time.
In addition to standard member functions, operator overloads and destructors can be virtual. A general rule of thumb is that if any functions in the class are virtual, the destructor should be as well. As the type of an object at its creation is known at compile time, constructors, and by extension copy constructors, cannot be virtual. Nonetheless a situation may arise where a copy of an object needs to be created when a pointer to a derived object is passed as a pointer to a base object. In such a case, a common solution is to create a clone() (or similar) virtual function that creates and returns a copy of the derived class when called.
A member function can also be made "pure virtual" by appending it with = 0 after the closing parenthesis and before the semicolon. A class containing a pure virtual function is called an abstract data type. Objects cannot be created from abstract data types; they can only be derived from. Any derived class inherits the virtual function as pure and must provide a non-pure definition of it (and all other pure virtual functions) before objects of the derived class can be created. A program that attempts to create an object of a class with a pure virtual member function or inherited pure virtual member function is ill-formed.
Standard library

The C++ standard consists of two parts: the core language and the C++ Standard Library; which C++ programmers expect on every major implementation of C++, it includes vectors, lists, maps, algorithms (find, for_each, binary_search, random_shuffle, etc.), sets, queues, stacks, arrays, tuples, input/output facilities (iostream; reading from the console input, reading/writing from files), smart pointers for automatic memory management, regular expression support, multi-threading library, atomics support (allowing a variable to be read or written to be at most one thread at a time without any external synchronisation), time utilities (measurement, getting current time, etc.), a system for converting error reporting that doesn't use C++ exceptions into C++ exceptions, a random number generator and a slightly modified version of the C standard library (to make it comply with the C++ type system).
A large part of the C++ library is based on the STL. This provides useful tools as containers (for example vectors and lists), iterators to provide these containers with array-like access and algorithms to perform operations such as searching and sorting. Furthermore (multi)maps (associative arrays) and (multi)sets are provided, all of which export compatible interfaces. Therefore it is possible, using templates, to write generic algorithms that work with any container or on any sequence defined by iterators. As in C, the features of the library are accessed by using the #include directive to include a standard header. C++ provides 105 standard headers, of which 27 are deprecated.
The standard incorporates the STL was originally designed by Alexander Stepanov, who experimented with generic algorithms and containers for many years. When he started with C++, he finally found a language where it was possible to create generic algorithms (e.g., STL sort) that perform even better than, for example, the C standard library qsort, thanks to C++ features like using inlining and compile-time binding instead of function pointers. The standard does not refer to it as "STL", as it is merely a part of the standard library, but the term is still widely used to distinguish it from the rest of the standard library (input/output streams, Despicable Me: Minion Mayhem
From Wikipedia, the free encyclopedia

This article may be written from a fan's point of view, rather than a neutral point of view. Please clean it up to conform to a higher standard of quality, and to make it neutral in tone. (June 2013)
Despicable Me: Minion Mayhem
DespicableMeMinionMayhem.jpg
Despicable Me Minion Mayhem building.jpg
The Despicable Me: Minion Mayhem show building
[hide]Universal Studios Florida
Area	Production Central
Status	Operating
Soft opening date	June 9, 2012
Opening date	July 2, 2012-present[1]
Replaced	Jimmy Neutron's Nicktoon Blast (2003–2011)
[hide]Universal Studios Hollywood
Area	Upper Lot
Status	Under construction
Opening date	April 10, 2014
Replaced	T2 3-D: Battle Across Time
General statistics
Attraction type	4-D Simulator ride[2]
Manufacturer	Intamin
Designer	Universal Creative
Illumination Entertainment
Reel FX
Theme	Despicable Me
Riders per vehicle	8
Rows	2
Riders per row	4
Duration	8
Height restriction	40 in (102 cm)
Pre-show host	Gru (Steve Carell)[3]
Ride hosts	Margo (Miranda Cosgrove), Edith (Dana Gaier) , Agnes (Elsie Fisher)[4]
Despicable Me: Minion Mayhem is a simulator ride attraction at Universal Studios Florida and coming on April 10, 2014 to Universal Studios Hollywood. The attraction is based on Universal Studios and Illumination Entertainment's 2010 animated film Despicable Me and employs the use of 3-D HD digital animation. The attraction replaced Jimmy Neutron's Nicktoon Blast in Florida and will be replacing Terminator 2 3D in Hollywood.
Contents  [hide] 
1 History
2 Overview
2.1 Experience
2.1.1 Queue
2.1.2 First pre-show room (Gru's living room)
2.1.3 Second pre-show room (Gru's laboratory)
2.1.4 Ride
2.1.5 Post-show
2.2 Gift shop
3 Accolades
4 See also
5 References
6 External links
History[edit source | editbeta]



Some theming surrounding the ride at Universal Studios Florida
In March 2011, Universal Studios Florida announced that Jimmy Neutron's Nicktoon Blast would be closing to make way for a new attraction due to Nick no longer airing the show mentioned on the ride. The ride began seasonal operations on April 1, 2011, before officially closing on August 18, 2011.[5][6] On April 14, 2011, Universal Orlando Resort began a teaser campaign on their Facebook page where weekly hints were released leading up to the announcement of their upcoming attraction.[7][8] On May 19, 2011, the attraction was officially announced at a live webcast at Universal Orlando Resort. Universal Parks & Resorts also announced a major refurbishment of The Amazing Adventures of Spider-Man at Islands of Adventure on the same day.[2][9]
Construction for the Despicable Me attraction at Universal Studios Florida began in mid-August 2011, with the removal the former Jimmy Neutron ride.[10] After a period of construction spanning several months, the attraction soft opened to the public on June 9, 2012.[11] On July 2, 2012, Despicable Me: Minion Mayhem officially opened to the public.[4] The ride's gift shop, Super Silly Stuff, had opened prior to the ride in May 2012.[12]
On March 11, 2013, Universal Studios Hollywood announced that they would open Despicable Me: Minion Mayhem in 2014.[13] The announcement followed a series of rumours stating the park would replace the recently-closed T2 3-D: Battle Across Time attraction with a Despicable Me attraction.[14][15] A later announcement revealed the surrounding area would be themed as Super Silly Fun Land.[16]
On August 3, 2013, it was announced that Despicable Me: Minion Mayhem's Hollywood attraction would open on April 10, 2014.
Overview[edit source | editbeta]

Universal Orlando Resort announced that the attraction is being designed by their Universal Creative company in association with Illumination Entertainment and Despicable Me film producer Chris Meledandri. The ride is a motion simulator and employs the use of high-definition 3-D Infitec projection systems, and features multiple characters from the film, including Gru, Margo, Edith, Agnes and the Minions.
The attraction at Universal Studios Florida is located in Soundstage 42 in the Production Central area. The soundstage previously housed The Funtastic World of Hanna-Barbera 1990 until 2002 and Jimmy Neutron's Nicktoon Blast from 2003 until 2011.[3] The attraction at Universal Studios Hollywood will be located on the former site of T2 3-D: Battle Across Time on the Upper Lot.[14]
Experience[edit source | editbeta]
Queue[edit source | editbeta]
When people are waiting in line for the ride, they get to learn what a Minion really needs, the profiles of Gru, Dr. Nefario, Margo, Edith, Agnes and the Minions; they also get to see a revision of the original Despicable Me film. The guests are also given a Minion-quiz, to let them test themselves to see if they are fully prepared to be a Minion. The Hollywood version will have details to look more like Gru's house than the one in Florida. The answers in the quiz are always the last options.
First pre-show room (Gru's living room)[edit source | editbeta]
First, the guests enter the room and get Minion Goggles (3-D glasses). Then the pre-show starts when Gru, the world's #1 supervillain, welcomes guests to his house and explains them that they will be trained as minions, but he also warns us that "danger lurks, at every turn". Just as he was about to begin, however, Agnes, Gru's youngest daughter, appears on-screen, chasing Kyle, Gru's pet dog, despite Gru saying that he's "trying to be evil". Then, Margo and Edith, Gru's other daughters, appear on-screen: the brown-eyed oldest, Margo, appears right next to Gru, asking what he is doing, but Gru explains he's fine. The grey-eyed tomboy, Edith, makes weird faces in front of the camera. Then Agnes appears in front of the camera along with Kyle: the former asks to the audience: "Who's the cutest doggie in the world?", while kissing the latter on the camera at the same time, leaving a smudge, then continues chasing him. Gru, however, attempts to maintain his concentration, but loses it when he sees Margo cleaning Kyle's smudge. All of a sudden, Edith appears with some sock puppet in front of the camera, mimicking the voice of an evil clown. During Edith's imitation, Agnes chases Kyle. Gru and Margo, on the other hand start to grow suspicious of Edith's behaviour. Once Gru realizes that Edith and Agnes are going way too far, he orders them to listen up and just let him explain. Once Edith and Agnes start to heed Gru's orders, Edith explains that she, along with her siblings, are "just trying to keep things interesting". Gru forces the girls to keep themselves quiet and stand still. He introduces his daughters to the audience who, in response, greet the audience. After the introduction for Gru's daughters, Gru forces the public to take a three-hour written exam, but Margo explains him not to do that, since they haven't planned it. Gru, who did not think it's a good idea, unwillingly accepts and begins by explaining about Minion Goggles, the latest invention created by his sidekick, Dr. Nefario. He tested them on Gru's very own Minions to see how they work, and what the guests should be doing during the demonstration. Gru explains to the audience that they have Nefario's guarantee. This means that the Minion Goggles will last five times longer than the person wearing them. He also explains the safety violations for the goggles, like not putting them on until you've got the permission to do that, also that it is prohibited to use the Minion Goggles to hold in anything that looks like food to us. Afterwards, Gru orders the guests to proceed to his lab and also forces them to heed his warns. Margo, Gru's oldest daughter, on the other hand, orders the guests to have fun, but Gru doesn't even smile, so the girls try to spruce him up: Edith by playing with the sock puppet, imitating the voice of an evil clown at the same time, Agnes by saying: "Come on! Smile, Gru!". However, Gru responds in a bored tone with: "I hate smiling". Then a voice tells the guests safety introductions. Next, the doors open to Gru's laboratory with Gru saying what to do while walking in the room; the guests should stay in their row and not put on their Minion Goggles yet until they're told to do so.
Second pre-show room (Gru's laboratory)[edit source | editbeta]
In this pre-show room, just before the ride, Gru, along with some Minions, enter the room and explains the public are there for a reason: henching for the world's #1 supervillain. Gru wants to take time to interview the new recruits one at a time, but explains he's working on something really big today, so he does the interviewing very fast. As Gru is about to begin, however, a Minion, holding a blueprint, interrupts him. Gru excuses the audience to wait a moment so he can read the blueprint the Minion is holding. Gru finds the blueprint good and orders the Minion to tell Doctor Nefario, his assistant, for more dynamite. When the Minion leaves, only to envolve an argument with another throwing a piece of wadded paper at him, Gru explains his plan of turning everyday ordinary human beings into Minions using a kind of device, called the Minion Gun, created by Doctor Nefario. He tested out on some human beings to see how good it functions, transforming them into Minions of all different shapes and sizes. Next, the whole audience is given a routine body scan to make sure there aren't any "human germs" in the lab by using high-density lasers. However, the scan ends up with a warning: Gru gets disappointed when that some of the guests "have not showered in like a week". This causes the Minions to make fun of the public, but they stop laughing and are forced to get back to work when Gru glares at them. Lucky for the audience, Gru is in a bit of a time crunch and warns for the rest of the audience that he will hit them with his "Pistola de pedo" if any are thinking on backing out. Next, Gru asks: "So what will it be? Minions... or farts?". However, at the same moment, Edith interrupts and imitates her father. Gru, realizing his daughters have showed up, explains to the audience to ignore them. All of a sudden, some of the Minions appear holding mega-phones, but are forced to retreat when Gru explains: "Not now!", and shoos them away. Agnes and Margo start to explain to the audience that they shouldn't be scared of Gru by calling him "just a big, bald teddy bear". The confident Gru, however, wants to prove it to his daughters by pressing a button on his computer, which causes the fart gun to go off. Because of the stench, Edith and Agnes are forced to cover their mouths, Margo and the Minions to hold their breaths. They stop doing it when Edith sniffs the room, then picks up the scent, explaining it "smells like bananas". This causes the Minions to start going mad and some lick on window. When this happens, the girls act natural. Gru, on the other hand, gets annoyed with the unexpected antics of his henchmen. Afterwards, Agnes wants to give a present to Gru. He loves to accept it, but tells her to wait, explaining that he's going to be really behind schedule; also, he has to train the public who are on the verge of becoming Minions. Margo eagerly asks Gru if the trio can assist him by training the crowd: Gru thinks for a moment, but responds with: "I do not think so." However, as Edith starts begging, Gru says that the training is very technical. It all becomes clear when Edith explains that her foster father has been reluctant for a while, not wanting to accept his daughters' willings. When Margo and Edith finally explain Gru, who's busy shooing the Minions holding fire-works away, that the Minion training is "not like it's rocket science, or even fourth grade science" and that "a training monkey can do it", he agrees irate, calmly explaining to the audience that he will leave his daughters in charge of the training. Once Edith hears this, she explains to the guests that they "are so doomed". Gru, however, orders the public to not listen to her, despite him saying that Edith might be right for once. He leaves the room and wishes the guests good luck, at exactly the same time Agnes attempts to catch up with him to give him her anniversary gift of the girls adoption. Edith, however, explains to her younger sibling that Gru already left, which made Agnes filled with sorrow, realizing that Gru may have forgotten the anniversary of their adoption, but Margo says her that he won't, also that they got an important job to do: training the audience into Minions for Gru's bidding. Margo's determination to initiate the training causes Edith to be pumped up and say: "Let's do this!". After that, the doors to the ride are opened, the public is let through and Margo instructs to the audience to not put on their minion goggles until they're told to do so by a lab assistant.
Ride[edit source | editbeta]
Once the ride begins, riders see Gru's daughters riding on some kind of hovering UFO-like vehicle. Once Edith orders Kevin the Minion to zap the riders, he pulls a lever which activates the Minion Gun, transforming the riders into Minions. Next, the riders get pushed down a long tube to training by the girls. Margo welcomes the guests to the Minion Training Grounds. As the riders slide down and avoid the water sprayers, Margo instructs the guests: "This where we test your "strength, speed and ability to not die". The audience is also forced to dodge deadly security lasers, a giant cactus, and fly swatters along the way. Once some Minions, holding "Stop" signs, force us to stop running, two Minions are being punched away by a giant boxing glove, then the riders are being punched down by another, along with two Minions, and unexpectedly stop at a giant gap. This is where Gru's daughters want us to test our problem solving and teamwork skills; the guests are forced to create a giant, human hand-like Minion-chain to get across the other side. However, once Edith uses a giant banana as bait, the Minions suddenly get distracted by it, causing the Minion-chain to break apart and the riders to accidentally fall down a long hole to the bomb transportation sector, which is a restricted area; Gru also warns us that it might be dangerous. When the girls are helping us to get out of the sector, the worst happens: bombs start to explode in the bomb transportation room; when the girls get startled by the explosions, Agnes loses her gift and the guests attempt to retrieve it by dodging the bombs, also the giant machinery on the verge of crushing the riders and the girls into pieces, like giant razor sharp blades, with Agnes barely catching it. However, when the two Minions that the guests used to follow start to fall down, Gru arrives, attempting to catch them, but he falls down along with them, only to be nearly saved by grabbing hold to the hovering vehicle that Margo, Edith and Agnes are riding. However, as Agnes is about to give her present to Gru, her adoptive father, he gets unexpectedly knocked off the vehicle by a giant mallet unseen. The girls continue, but Gru gets hit straight at the riders. The riders then suddenly end up, along with Gru's daughters, who, because of an accidental push given by us, get pushed off their vehicle, in another sector. Once in another area, Margo, Edith and Agnes are starting to float and Margo realises that she, along with the others, are in the anti-gravity recycling room. To make matters worse, a giant robot arm rises from under the girls, ending themselves up being surrounded by claws and other hazards, but they hold on to it. When this happens, Margo warns her younger siblings to just remain hold to the giant grooves of the wire to avoid being crushed. However, one of the crushers nearby startles Gru's daughters, causing Agnes to lose her present. Seeing her present for Gru floating away, Agnes is forced to risk her life and lets her go of Margo's foot and attempts to float off to recover Gru's one-year anniversary gift, narrowly avoiding a bomb, despite Margo warning her to not to. However, once Agnes recovers her one-year present by barely avoiding a giant spiked crusher, she starts floating into a giant oscillating fan, when, all of a sudden, Gru arrives, blocking the crushers with an steel beam, then saves Agnes. Seeing each other, Gru and Agnes give themselves a hug when suddenly the smashers start moving again, leaving Gru no choice but to summon all of his strength to stop the giant crusher just in time, saving all of them, including himself, from being smashed. Because of Gru's strength and pressure that he used to both save Agnes and stop the giant crusher, the anti-gravity recycling room's power goes down, and the riders, along with Gru and his daughters, land safely on a crowd of Minions. Once both the Gru residence and the guests land safely on the Minions, Gru opens Agnes' present, revealing a doll replica of himself. Despite that Agnes says "it's a little squashed", Gru finds it "absolutely perfect", and gives his daughters a hug, also giving the trio "a little something": an amusement park-like anniversary party. Once the giant doors open to the party, the riders follow the Gru residence, now riding on a hovering vehicle, avoiding the party decorations all the way to the stage. Once there, Gru congratulates us of being successful in their training. However, a rocket is fired at the Minion Gun, right next to Gru. He protects his daughters, however, the gun breaks and goes off on the riders, causing the effects to be reversed, transforming the guests into humans again. Once this happens, Gru gets disappointed, realizing the riders are "human again", orders someone off-screen for the next troop.
Post-show[edit source | editbeta]
After the ride, the door to some sort of dance party are opened. with the public dancing on Boogie Fever, along with a costumed Minion.[3]
Gift shop[edit source | editbeta]
In May 2012, the ride's gift shop Super Silly Stuff opened,[12] replacing the Nickstuff store. The store sells Despicable Me-related merchandise. The store is themed to the carnival Gru, Margo, Edith, and Agnes visit in the original film.Despicable Me: Minion Mayhem
From Wikipedia, the free encyclopedia

This article may be written from a fan's point of view, rather than a neutral point of view. Please clean it up to conform to a higher standard of quality, and to make it neutral in tone. (June 2013)
Despicable Me: Minion Mayhem
DespicableMeMinionMayhem.jpg
Despicable Me Minion Mayhem building.jpg
The Despicable Me: Minion Mayhem show building
[hide]Universal Studios Florida
Area	Production Central
Status	Operating
Soft opening date	June 9, 2012
Opening date	July 2, 2012-present[1]
Replaced	Jimmy Neutron's Nicktoon Blast (2003–2011)
[hide]Universal Studios Hollywood
Area	Upper Lot
Status	Under construction
Opening date	April 10, 2014
Replaced	T2 3-D: Battle Across Time
General statistics
Attraction type	4-D Simulator ride[2]
Manufacturer	Intamin
Designer	Universal Creative
Illumination Entertainment
Reel FX
Theme	Despicable Me
Riders per vehicle	8
Rows	2
Riders per row	4
Duration	8
Height restriction	40 in (102 cm)
Pre-show host	Gru (Steve Carell)[3]
Ride hosts	Margo (Miranda Cosgrove), Edith (Dana Gaier) , Agnes (Elsie Fisher)[4]
Despicable Me: Minion Mayhem is a simulator ride attraction at Universal Studios Florida and coming on April 10, 2014 to Universal Studios Hollywood. The attraction is based on Universal Studios and Illumination Entertainment's 2010 animated film Despicable Me and employs the use of 3-D HD digital animation. The attraction replaced Jimmy Neutron's Nicktoon Blast in Florida and will be replacing Terminator 2 3D in Hollywood.
Contents  [hide] 
1 History
2 Overview
2.1 Experience
2.1.1 Queue
2.1.2 First pre-show room (Gru's living room)
2.1.3 Second pre-show room (Gru's laboratory)
2.1.4 Ride
2.1.5 Post-show
2.2 Gift shop
3 Accolades
4 See also
5 References
6 External links
History[edit source | editbeta]



Some theming surrounding the ride at Universal Studios Florida
In March 2011, Universal Studios Florida announced that Jimmy Neutron's Nicktoon Blast would be closing to make way for a new attraction due to Nick no longer airing the show mentioned on the ride. The ride began seasonal operations on April 1, 2011, before officially closing on August 18, 2011.[5][6] On April 14, 2011, Universal Orlando Resort began a teaser campaign on their Facebook page where weekly hints were released leading up to the announcement of their upcoming attraction.[7][8] On May 19, 2011, the attraction was officially announced at a live webcast at Universal Orlando Resort. Universal Parks & Resorts also announced a major refurbishment of The Amazing Adventures of Spider-Man at Islands of Adventure on the same day.[2][9]
Construction for the Despicable Me attraction at Universal Studios Florida began in mid-August 2011, with the removal the former Jimmy Neutron ride.[10] After a period of construction spanning several months, the attraction soft opened to the public on June 9, 2012.[11] On July 2, 2012, Despicable Me: Minion Mayhem officially opened to the public.[4] The ride's gift shop, Super Silly Stuff, had opened prior to the ride in May 2012.[12]
On March 11, 2013, Universal Studios Hollywood announced that they would open Despicable Me: Minion Mayhem in 2014.[13] The announcement followed a series of rumours stating the park would replace the recently-closed T2 3-D: Battle Across Time attraction with a Despicable Me attraction.[14][15] A later announcement revealed the surrounding area would be themed as Super Silly Fun Land.[16]
On August 3, 2013, it was announced that Despicable Me: Minion Mayhem's Hollywood attraction would open on April 10, 2014.
Overview[edit source | editbeta]

Universal Orlando Resort announced that the attraction is being designed by their Universal Creative company in association with Illumination Entertainment and Despicable Me film producer Chris Meledandri. The ride is a motion simulator and employs the use of high-definition 3-D Infitec projection systems, and features multiple characters from the film, including Gru, Margo, Edith, Agnes and the Minions.
The attraction at Universal Studios Florida is located in Soundstage 42 in the Production Central area. The soundstage previously housed The Funtastic World of Hanna-Barbera 1990 until 2002 and Jimmy Neutron's Nicktoon Blast from 2003 until 2011.[3] The attraction at Universal Studios Hollywood will be located on the former site of T2 3-D: Battle Across Time on the Upper Lot.[14]
Experience[edit source | editbeta]
Queue[edit source | editbeta]
When people are waiting in line for the ride, they get to learn what a Minion really needs, the profiles of Gru, Dr. Nefario, Margo, Edith, Agnes and the Minions; they also get to see a revision of the original Despicable Me film. The guests are also given a Minion-quiz, to let them test themselves to see if they are fully prepared to be a Minion. The Hollywood version will have details to look more like Gru's house than the one in Florida. The answers in the quiz are always the last options.
First pre-show room (Gru's living room)[edit source | editbeta]
First, the guests enter the room and get Minion Goggles (3-D glasses). Then the pre-show starts when Gru, the world's #1 supervillain, welcomes guests to his house and explains them that they will be trained as minions, but he also warns us that "danger lurks, at every turn". Just as he was about to begin, however, Agnes, Gru's youngest daughter, appears on-screen, chasing Kyle, Gru's pet dog, despite Gru saying that he's "trying to be evil". Then, Margo and Edith, Gru's other daughters, appear on-screen: the brown-eyed oldest, Margo, appears right next to Gru, asking what he is doing, but Gru explains he's fine. The grey-eyed tomboy, Edith, makes weird faces in front of the camera. Then Agnes appears in front of the camera along with Kyle: the former asks to the audience: "Who's the cutest doggie in the world?", while kissing the latter on the camera at the same time, leaving a smudge, then continues chasing him. Gru, however, attempts to maintain his concentration, but loses it when he sees Margo cleaning Kyle's smudge. All of a sudden, Edith appears with some sock puppet in front of the camera, mimicking the voice of an evil clown. During Edith's imitation, Agnes chases Kyle. Gru and Margo, on the other hand start to grow suspicious of Edith's behaviour. Once Gru realizes that Edith and Agnes are going way too far, he orders them to listen up and just let him explain. Once Edith and Agnes start to heed Gru's orders, Edith explains that she, along with her siblings, are "just trying to keep things interesting". Gru forces the girls to keep themselves quiet and stand still. He introduces his daughters to the audience who, in response, greet the audience. After the introduction for Gru's daughters, Gru forces the public to take a three-hour written exam, but Margo explains him not to do that, since they haven't planned it. Gru, who did not think it's a good idea, unwillingly accepts and begins by explaining about Minion Goggles, the latest invention created by his sidekick, Dr. Nefario. He tested them on Gru's very own Minions to see how they work, and what the guests should be doing during the demonstration. Gru explains to the audience that they have Nefario's guarantee. This means that the Minion Goggles will last five times longer than the person wearing them. He also explains the safety violations for the goggles, like not putting them on until you've got the permission to do that, also that it is prohibited to use the Minion Goggles to hold in anything that looks like food to us. Afterwards, Gru orders the guests to proceed to his lab and also forces them to heed his warns. Margo, Gru's oldest daughter, on the other hand, orders the guests to have fun, but Gru doesn't even smile, so the girls try to spruce him up: Edith by playing with the sock puppet, imitating the voice of an evil clown at the same time, Agnes by saying: "Come on! Smile, Gru!". However, Gru responds in a bored tone with: "I hate smiling". Then a voice tells the guests safety introductions. Next, the doors open to Gru's laboratory with Gru saying what to do while walking in the room; the guests should stay in their row and not put on their Minion Goggles yet until they're told to do so.
Second pre-show room (Gru's laboratory)[edit source | editbeta]
In this pre-show room, just before the ride, Gru, along with some Minions, enter the room and explains the public are there for a reason: henching for the world's #1 supervillain. Gru wants to take time to interview the new recruits one at a time, but explains he's working on something really big today, so he does the interviewing very fast. As Gru is about to begin, however, a Minion, holding a blueprint, interrupts him. Gru excuses the audience to wait a moment so he can read the blueprint the Minion is holding. Gru finds the blueprint good and orders the Minion to tell Doctor Nefario, his assistant, for more dynamite. When the Minion leaves, only to envolve an argument with another throwing a piece of wadded paper at him, Gru explains his plan of turning everyday ordinary human beings into Minions using a kind of device, called the Minion Gun, created by Doctor Nefario. He tested out on some human beings to see how good it functions, transforming them into Minions of all different shapes and sizes. Next, the whole audience is given a routine body scan to make sure there aren't any "human germs" in the lab by using high-density lasers. However, the scan ends up with a warning: Gru gets disappointed when that some of the guests "have not showered in like a week". This causes the Minions to make fun of the public, but they stop laughing and are forced to get back to work when Gru glares at them. Lucky for the audience, Gru is in a bit of a time crunch and warns for the rest of the audience that he will hit them with his "Pistola de pedo" if any are thinking on backing out. Next, Gru asks: "So what will it be? Minions... or farts?". However, at the same moment, Edith interrupts and imitates her father. Gru, realizing his daughters have showed up, explains to the audience to ignore them. All of a sudden, some of the Minions appear holding mega-phones, but are forced to retreat when Gru explains: "Not now!", and shoos them away. Agnes and Margo start to explain to the audience that they shouldn't be scared of Gru by calling him "just a big, bald teddy bear". The confident Gru, however, wants to prove it to his daughters by pressing a button on his computer, which causes the fart gun to go off. Because of the stench, Edith and Agnes are forced to cover their mouths, Margo and the Minions to hold their breaths. They stop doing it when Edith sniffs the room, then picks up the scent, explaining it "smells like bananas". This causes the Minions to start going mad and some lick on window. When this happens, the girls act natural. Gru, on the other hand, gets annoyed with the unexpected antics of his henchmen. Afterwards, Agnes wants to give a present to Gru. He loves to accept it, but tells her to wait, explaining that he's going to be really behind schedule; also, he has to train the public who are on the verge of becoming Minions. Margo eagerly asks Gru if the trio can assist him by training the crowd: Gru thinks for a moment, but responds with: "I do not think so." However, as Edith starts begging, Gru says that the training is very technical. It all becomes clear when Edith explains that her foster father has been reluctant for a while, not wanting to accept his daughters' willings. When Margo and Edith finally explain Gru, who's busy shooing the Minions holding fire-works away, that the Minion training is "not like it's rocket science, or even fourth grade science" and that "a training monkey can do it", he agrees irate, calmly explaining to the audience that he will leave his daughters in charge of the training. Once Edith hears this, she explains to the guests that they "are so doomed". Gru, however, orders the public to not listen to her, despite him saying that Edith might be right for once. He leaves the room and wishes the guests good luck, at exactly the same time Agnes attempts to catch up with him to give him her anniversary gift of the girls adoption. Edith, however, explains to her younger sibling that Gru already left, which made Agnes filled with sorrow, realizing that Gru may have forgotten the anniversary of their adoption, but Margo says her that he won't, also that they got an important job to do: training the audience into Minions for Gru's bidding. Margo's determination to initiate the training causes Edith to be pumped up and say: "Let's do this!". After that, the doors to the ride are opened, the public is let through and Margo instructs to the audience to not put on their minion goggles until they're told to do so by a lab assistant.
Ride[edit source | editbeta]
Once the ride begins, riders see Gru's daughters riding on some kind of hovering UFO-like vehicle. Once Edith orders Kevin the Minion to zap the riders, he pulls a lever which activates the Minion Gun, transforming the riders into Minions. Next, the riders get pushed down a long tube to training by the girls. Margo welcomes the guests to the Minion Training Grounds. As the riders slide down and avoid the water sprayers, Margo instructs the guests: "This where we test your "strength, speed and ability to not die". The audience is also forced to dodge deadly security lasers, a giant cactus, and fly swatters along the way. Once some Minions, holding "Stop" signs, force us to stop running, two Minions are being punched away by a giant boxing glove, then the riders are being punched down by another, along with two Minions, and unexpectedly stop at a giant gap. This is where Gru's daughters want us to test our problem solving and teamwork skills; the guests are forced to create a giant, human hand-like Minion-chain to get across the other side. However, once Edith uses a giant banana as bait, the Minions suddenly get distracted by it, causing the Minion-chain to break apart and the riders to accidentally fall down a long hole to the bomb transportation sector, which is a restricted area; Gru also warns us that it might be dangerous. When the girls are helping us to get out of the sector, the worst happens: bombs start to explode in the bomb transportation room; when the girls get startled by the explosions, Agnes loses her gift and the guests attempt to retrieve it by dodging the bombs, also the giant machinery on the verge of crushing the riders and the girls into pieces, like giant razor sharp blades, with Agnes barely catching it. However, when the two Minions that the guests used to follow start to fall down, Gru arrives, attempting to catch them, but he falls down along with them, only to be nearly saved by grabbing hold to the hovering vehicle that Margo, Edith and Agnes are riding. However, as Agnes is about to give her present to Gru, her adoptive father, he gets unexpectedly knocked off the vehicle by a giant mallet unseen. The girls continue, but Gru gets hit straight at the riders. The riders then suddenly end up, along with Gru's daughters, who, because of an accidental push given by us, get pushed off their vehicle, in another sector. Once in another area, Margo, Edith and Agnes are starting to float and Margo realises that she, along with the others, are in the anti-gravity recycling room. To make matters worse, a giant robot arm rises from under the girls, ending themselves up being surrounded by claws and other hazards, but they hold on to it. When this happens, Margo warns her younger siblings to just remain hold to the giant grooves of the wire to avoid being crushed. However, one of the crushers nearby startles Gru's daughters, causing Agnes to lose her present. Seeing her present for Gru floating away, Agnes is forced to risk her life and lets her go of Margo's foot and attempts to float off to recover Gru's one-year anniversary gift, narrowly avoiding a bomb, despite Margo warning her to not to. However, once Agnes recovers her one-year present by barely avoiding a giant spiked crusher, she starts floating into a giant oscillating fan, when, all of a sudden, Gru arrives, blocking the crushers with an steel beam, then saves Agnes. Seeing each other, Gru and Agnes give themselves a hug when suddenly the smashers start moving again, leaving Gru no choice but to summon all of his strength to stop the giant crusher just in time, saving all of them, including himself, from being smashed. Because of Gru's strength and pressure that he used to both save Agnes and stop the giant crusher, the anti-gravity recycling room's power goes down, and the riders, along with Gru and his daughters, land safely on a crowd of Minions. Once both the Gru residence and the guests land safely on the Minions, Gru opens Agnes' present, revealing a doll replica of himself. Despite that Agnes says "it's a little squashed", Gru finds it "absolutely perfect", and gives his daughters a hug, also giving the trio "a little something": an amusement park-like anniversary party. Once the giant doors open to the party, the riders follow the Gru residence, now riding on a hovering vehicle, avoiding the party decorations all the way to the stage. Once there, Gru congratulates us of being successful in their training. However, a rocket is fired at the Minion Gun, right next to Gru. He protects his daughters, however, the gun breaks and goes off on the riders, causing the effects to be reversed, transforming the guests into humans again. Once this happens, Gru gets disappointed, realizing the riders are "human again", orders someone off-screen for the next troop.
Post-show[edit source | editbeta]
After the ride, the door to some sort of dance party are opened. with the public dancing on Boogie Fever, along with a costumed Minion.[3]
Gift shop[edit source | editbeta]
In May 2012, the ride's gift shop Super Silly Stuff opened,[12] replacing the Nickstuff store. The store sells Despicable Me-related merchandise. The store is themed to the carnival Gru, Margo, Edith, and Agnes visit in the original film.Despicable Me: Minion Mayhem
From Wikipedia, the free encyclopedia

This article may be written from a fan's point of view, rather than a neutral point of view. Please clean it up to conform to a higher standard of quality, and to make it neutral in tone. (June 2013)
Despicable Me: Minion Mayhem
DespicableMeMinionMayhem.jpg
Despicable Me Minion Mayhem building.jpg
The Despicable Me: Minion Mayhem show building
[hide]Universal Studios Florida
Area	Production Central
Status	Operating
Soft opening date	June 9, 2012
Opening date	July 2, 2012-present[1]
Replaced	Jimmy Neutron's Nicktoon Blast (2003–2011)
[hide]Universal Studios Hollywood
Area	Upper Lot
Status	Under construction
Opening date	April 10, 2014
Replaced	T2 3-D: Battle Across Time
General statistics
Attraction type	4-D Simulator ride[2]
Manufacturer	Intamin
Designer	Universal Creative
Illumination Entertainment
Reel FX
Theme	Despicable Me
Riders per vehicle	8
Rows	2
Riders per row	4
Duration	8
Height restriction	40 in (102 cm)
Pre-show host	Gru (Steve Carell)[3]
Ride hosts	Margo (Miranda Cosgrove), Edith (Dana Gaier) , Agnes (Elsie Fisher)[4]
Despicable Me: Minion Mayhem is a simulator ride attraction at Universal Studios Florida and coming on April 10, 2014 to Universal Studios Hollywood. The attraction is based on Universal Studios and Illumination Entertainment's 2010 animated film Despicable Me and employs the use of 3-D HD digital animation. The attraction replaced Jimmy Neutron's Nicktoon Blast in Florida and will be replacing Terminator 2 3D in Hollywood.
Contents  [hide] 
1 History
2 Overview
2.1 Experience
2.1.1 Queue
2.1.2 First pre-show room (Gru's living room)
2.1.3 Second pre-show room (Gru's laboratory)
2.1.4 Ride
2.1.5 Post-show
2.2 Gift shop
3 Accolades
4 See also
5 References
6 External links
History[edit source | editbeta]



Some theming surrounding the ride at Universal Studios Florida
In March 2011, Universal Studios Florida announced that Jimmy Neutron's Nicktoon Blast would be closing to make way for a new attraction due to Nick no longer airing the show mentioned on the ride. The ride began seasonal operations on April 1, 2011, before officially closing on August 18, 2011.[5][6] On April 14, 2011, Universal Orlando Resort began a teaser campaign on their Facebook page where weekly hints were released leading up to the announcement of their upcoming attraction.[7][8] On May 19, 2011, the attraction was officially announced at a live webcast at Universal Orlando Resort. Universal Parks & Resorts also announced a major refurbishment of The Amazing Adventures of Spider-Man at Islands of Adventure on the same day.[2][9]
Construction for the Despicable Me attraction at Universal Studios Florida began in mid-August 2011, with the removal the former Jimmy Neutron ride.[10] After a period of construction spanning several months, the attraction soft opened to the public on June 9, 2012.[11] On July 2, 2012, Despicable Me: Minion Mayhem officially opened to the public.[4] The ride's gift shop, Super Silly Stuff, had opened prior to the ride in May 2012.[12]
On March 11, 2013, Universal Studios Hollywood announced that they would open Despicable Me: Minion Mayhem in 2014.[13] The announcement followed a series of rumours stating the park would replace the recently-closed T2 3-D: Battle Across Time attraction with a Despicable Me attraction.[14][15] A later announcement revealed the surrounding area would be themed as Super Silly Fun Land.[16]
On August 3, 2013, it was announced that Despicable Me: Minion Mayhem's Hollywood attraction would open on April 10, 2014.
Overview[edit source | editbeta]

Universal Orlando Resort announced that the attraction is being designed by their Universal Creative company in association with Illumination Entertainment and Despicable Me film producer Chris Meledandri. The ride is a motion simulator and employs the use of high-definition 3-D Infitec projection systems, and features multiple characters from the film, including Gru, Margo, Edith, Agnes and the Minions.
The attraction at Universal Studios Florida is located in Soundstage 42 in the Production Central area. The soundstage previously housed The Funtastic World of Hanna-Barbera 1990 until 2002 and Jimmy Neutron's Nicktoon Blast from 2003 until 2011.[3] The attraction at Universal Studios Hollywood will be located on the former site of T2 3-D: Battle Across Time on the Upper Lot.[14]
Experience[edit source | editbeta]
Queue[edit source | editbeta]
When people are waiting in line for the ride, they get to learn what a Minion really needs, the profiles of Gru, Dr. Nefario, Margo, Edith, Agnes and the Minions; they also get to see a revision of the original Despicable Me film. The guests are also given a Minion-quiz, to let them test themselves to see if they are fully prepared to be a Minion. The Hollywood version will have details to look more like Gru's house than the one in Florida. The answers in the quiz are always the last options.
First pre-show room (Gru's living room)[edit source | editbeta]
First, the guests enter the room and get Minion Goggles (3-D glasses). Then the pre-show starts when Gru, the world's #1 supervillain, welcomes guests to his house and explains them that they will be trained as minions, but he also warns us that "danger lurks, at every turn". Just as he was about to begin, however, Agnes, Gru's youngest daughter, appears on-screen, chasing Kyle, Gru's pet dog, despite Gru saying that he's "trying to be evil". Then, Margo and Edith, Gru's other daughters, appear on-screen: the brown-eyed oldest, Margo, appears right next to Gru, asking what he is doing, but Gru explains he's fine. The grey-eyed tomboy, Edith, makes weird faces in front of the camera. Then Agnes appears in front of the camera along with Kyle: the former asks to the audience: "Who's the cutest doggie in the world?", while kissing the latter on the camera at the same time, leaving a smudge, then continues chasing him. Gru, however, attempts to maintain his concentration, but loses it when he sees Margo cleaning Kyle's smudge. All of a sudden, Edith appears with some sock puppet in front of the camera, mimicking the voice of an evil clown. During Edith's imitation, Agnes chases Kyle. Gru and Margo, on the other hand start to grow suspicious of Edith's behaviour. Once Gru realizes that Edith and Agnes are going way too far, he orders them to listen up and just let him explain. Once Edith and Agnes start to heed Gru's orders, Edith explains that she, along with her siblings, are "just trying to keep things interesting". Gru forces the girls to keep themselves quiet and stand still. He introduces his daughters to the audience who, in response, greet the audience. After the introduction for Gru's daughters, Gru forces the public to take a three-hour written exam, but Margo explains him not to do that, since they haven't planned it. Gru, who did not think it's a good idea, unwillingly accepts and begins by explaining about Minion Goggles, the latest invention created by his sidekick, Dr. Nefario. He tested them on Gru's very own Minions to see how they work, and what the guests should be doing during the demonstration. Gru explains to the audience that they have Nefario's guarantee. This means that the Minion Goggles will last five times longer than the person wearing them. He also explains the safety violations for the goggles, like not putting them on until you've got the permission to do that, also that it is prohibited to use the Minion Goggles to hold in anything that looks like food to us. Afterwards, Gru orders the guests to proceed to his lab and also forces them to heed his warns. Margo, Gru's oldest daughter, on the other hand, orders the guests to have fun, but Gru doesn't even smile, so the girls try to spruce him up: Edith by playing with the sock puppet, imitating the voice of an evil clown at the same time, Agnes by saying: "Come on! Smile, Gru!". However, Gru responds in a bored tone with: "I hate smiling". Then a voice tells the guests safety introductions. Next, the doors open to Gru's laboratory with Gru saying what to do while walking in the room; the guests should stay in their row and not put on their Minion Goggles yet until they're told to do so.
Second pre-show room (Gru's laboratory)[edit source | editbeta]
In this pre-show room, just before the ride, Gru, along with some Minions, enter the room and explains the public are there for a reason: henching for the world's #1 supervillain. Gru wants to take time to interview the new recruits one at a time, but explains he's working on something really big today, so he does the interviewing very fast. As Gru is about to begin, however, a Minion, holding a blueprint, interrupts him. Gru excuses the audience to wait a moment so he can read the blueprint the Minion is holding. Gru finds the blueprint good and orders the Minion to tell Doctor Nefario, his assistant, for more dynamite. When the Minion leaves, only to envolve an argument with another throwing a piece of wadded paper at him, Gru explains his plan of turning everyday ordinary human beings into Minions using a kind of device, called the Minion Gun, created by Doctor Nefario. He tested out on some human beings to see how good it functions, transforming them into Minions of all different shapes and sizes. Next, the whole audience is given a routine body scan to make sure there aren't any "human germs" in the lab by using high-density lasers. However, the scan ends up with a warning: Gru gets disappointed when that some of the guests "have not showered in like a week". This causes the Minions to make fun of the public, but they stop laughing and are forced to get back to work when Gru glares at them. Lucky for the audience, Gru is in a bit of a time crunch and warns for the rest of the audience that he will hit them with his "Pistola de pedo" if any are thinking on backing out. Next, Gru asks: "So what will it be? Minions... or farts?". However, at the same moment, Edith interrupts and imitates her father. Gru, realizing his daughters have showed up, explains to the audience to ignore them. All of a sudden, some of the Minions appear holding mega-phones, but are forced to retreat when Gru explains: "Not now!", and shoos them away. Agnes and Margo start to explain to the audience that they shouldn't be scared of Gru by calling him "just a big, bald teddy bear". The confident Gru, however, wants to prove it to his daughters by pressing a button on his computer, which causes the fart gun to go off. Because of the stench, Edith and Agnes are forced to cover their mouths, Margo and the Minions to hold their breaths. They stop doing it when Edith sniffs the room, then picks up the scent, explaining it "smells like bananas". This causes the Minions to start going mad and some lick on window. When this happens, the girls act natural. Gru, on the other hand, gets annoyed with the unexpected antics of his henchmen. Afterwards, Agnes wants to give a present to Gru. He loves to accept it, but tells her to wait, explaining that he's going to be really behind schedule; also, he has to train the public who are on the verge of becoming Minions. Margo eagerly asks Gru if the trio can assist him by training the crowd: Gru thinks for a moment, but responds with: "I do not think so." However, as Edith starts begging, Gru says that the training is very technical. It all becomes clear when Edith explains that her foster father has been reluctant for a while, not wanting to accept his daughters' willings. When Margo and Edith finally explain Gru, who's busy shooing the Minions holding fire-works away, that the Minion training is "not like it's rocket science, or even fourth grade science" and that "a training monkey can do it", he agrees irate, calmly explaining to the audience that he will leave his daughters in charge of the training. Once Edith hears this, she explains to the guests that they "are so doomed". Gru, however, orders the public to not listen to her, despite him saying that Edith might be right for once. He leaves the room and wishes the guests good luck, at exactly the same time Agnes attempts to catch up with him to give him her anniversary gift of the girls adoption. Edith, however, explains to her younger sibling that Gru already left, which made Agnes filled with sorrow, realizing that Gru may have forgotten the anniversary of their adoption, but Margo says her that he won't, also that they got an important job to do: training the audience into Minions for Gru's bidding. Margo's determination to initiate the training causes Edith to be pumped up and say: "Let's do this!". After that, the doors to the ride are opened, the public is let through and Margo instructs to the audience to not put on their minion goggles until they're told to do so by a lab assistant.
Ride[edit source | editbeta]
Once the ride begins, riders see Gru's daughters riding on some kind of hovering UFO-like vehicle. Once Edith orders Kevin the Minion to zap the riders, he pulls a lever which activates the Minion Gun, transforming the riders into Minions. Next, the riders get pushed down a long tube to training by the girls. Margo welcomes the guests to the Minion Training Grounds. As the riders slide down and avoid the water sprayers, Margo instructs the guests: "This where we test your "strength, speed and ability to not die". The audience is also forced to dodge deadly security lasers, a giant cactus, and fly swatters along the way. Once some Minions, holding "Stop" signs, force us to stop running, two Minions are being punched away by a giant boxing glove, then the riders are being punched down by another, along with two Minions, and unexpectedly stop at a giant gap. This is where Gru's daughters want us to test our problem solving and teamwork skills; the guests are forced to create a giant, human hand-like Minion-chain to get across the other side. However, once Edith uses a giant banana as bait, the Minions suddenly get distracted by it, causing the Minion-chain to break apart and the riders to accidentally fall down a long hole to the bomb transportation sector, which is a restricted area; Gru also warns us that it might be dangerous. When the girls are helping us to get out of the sector, the worst happens: bombs start to explode in the bomb transportation room; when the girls get startled by the explosions, Agnes loses her gift and the guests attempt to retrieve it by dodging the bombs, also the giant machinery on the verge of crushing the riders and the girls into pieces, like giant razor sharp blades, with Agnes barely catching it. However, when the two Minions that the guests used to follow start to fall down, Gru arrives, attempting to catch them, but he falls down along with them, only to be nearly saved by grabbing hold to the hovering vehicle that Margo, Edith and Agnes are riding. However, as Agnes is about to give her present to Gru, her adoptive father, he gets unexpectedly knocked off the vehicle by a giant mallet unseen. The girls continue, but Gru gets hit straight at the riders. The riders then suddenly end up, along with Gru's daughters, who, because of an accidental push given by us, get pushed off their vehicle, in another sector. Once in another area, Margo, Edith and Agnes are starting to float and Margo realises that she, along with the others, are in the anti-gravity recycling room. To make matters worse, a giant robot arm rises from under the girls, ending themselves up being surrounded by claws and other hazards, but they hold on to it. When this happens, Margo warns her younger siblings to just remain hold to the giant grooves of the wire to avoid being crushed. However, one of the crushers nearby startles Gru's daughters, causing Agnes to lose her present. Seeing her present for Gru floating away, Agnes is forced to risk her life and lets her go of Margo's foot and attempts to float off to recover Gru's one-year anniversary gift, narrowly avoiding a bomb, despite Margo warning her to not to. However, once Agnes recovers her one-year present by barely avoiding a giant spiked crusher, she starts floating into a giant oscillating fan, when, all of a sudden, Gru arrives, blocking the crushers with an steel beam, then saves Agnes. Seeing each other, Gru and Agnes give themselves a hug when suddenly the smashers start moving again, leaving Gru no choice but to summon all of his strength to stop the giant crusher just in time, saving all of them, including himself, from being smashed. Because of Gru's strength and pressure that he used to both save Agnes and stop the giant crusher, the anti-gravity recycling room's power goes down, and the riders, along with Gru and his daughters, land safely on a crowd of Minions. Once both the Gru residence and the guests land safely on the Minions, Gru opens Agnes' present, revealing a doll replica of himself. Despite that Agnes says "it's a little squashed", Gru finds it "absolutely perfect", and gives his daughters a hug, also giving the trio "a little something": an amusement park-like anniversary party. Once the giant doors open to the party, the riders follow the Gru residence, now riding on a hovering vehicle, avoiding the party decorations all the way to the stage. Once there, Gru congratulates us of being successful in their training. However, a rocket is fired at the Minion Gun, right next to Gru. He protects his daughters, however, the gun breaks and goes off on the riders, causing the effects to be reversed, transforming the guests into humans again. Once this happens, Gru gets disappointed, realizing the riders are "human again", orders someone off-screen for the next troop.
Post-show[edit source | editbeta]
After the ride, the door to some sort of dance party are opened. with the public dancing on Boogie Fever, along with a costumed Minion.[3]
Gift shop[edit source | editbeta]
In May 2012, the ride's gift shop Super Silly Stuff opened,[12] replacing the Nickstuff store. The store sells Despicable Me-related merchandise. The store is themed to the carnival Gru, Margo, Edith, and Agnes visit in the original film.Despicable Me: Minion Mayhem
From Wikipedia, the free encyclopedia

This article may be written from a fan's point of view, rather than a neutral point of view. Please clean it up to conform to a higher standard of quality, and to make it neutral in tone. (June 2013)
Despicable Me: Minion Mayhem
DespicableMeMinionMayhem.jpg
Despicable Me Minion Mayhem building.jpg
The Despicable Me: Minion Mayhem show building
[hide]Universal Studios Florida
Area	Production Central
Status	Operating
Soft opening date	June 9, 2012
Opening date	July 2, 2012-present[1]
Replaced	Jimmy Neutron's Nicktoon Blast (2003–2011)
[hide]Universal Studios Hollywood
Area	Upper Lot
Status	Under construction
Opening date	April 10, 2014
Replaced	T2 3-D: Battle Across Time
General statistics
Attraction type	4-D Simulator ride[2]
Manufacturer	Intamin
Designer	Universal Creative
Illumination Entertainment
Reel FX
Theme	Despicable Me
Riders per vehicle	8
Rows	2
Riders per row	4
Duration	8
Height restriction	40 in (102 cm)
Pre-show host	Gru (Steve Carell)[3]
Ride hosts	Margo (Miranda Cosgrove), Edith (Dana Gaier) , Agnes (Elsie Fisher)[4]
Despicable Me: Minion Mayhem is a simulator ride attraction at Universal Studios Florida and coming on April 10, 2014 to Universal Studios Hollywood. The attraction is based on Universal Studios and Illumination Entertainment's 2010 animated film Despicable Me and employs the use of 3-D HD digital animation. The attraction replaced Jimmy Neutron's Nicktoon Blast in Florida and will be replacing Terminator 2 3D in Hollywood.
Contents  [hide] 
1 History
2 Overview
2.1 Experience
2.1.1 Queue
2.1.2 First pre-show room (Gru's living room)
2.1.3 Second pre-show room (Gru's laboratory)
2.1.4 Ride
2.1.5 Post-show
2.2 Gift shop
3 Accolades
4 See also
5 References
6 External links
History[edit source | editbeta]



Some theming surrounding the ride at Universal Studios Florida
In March 2011, Universal Studios Florida announced that Jimmy Neutron's Nicktoon Blast would be closing to make way for a new attraction due to Nick no longer airing the show mentioned on the ride. The ride began seasonal operations on April 1, 2011, before officially closing on August 18, 2011.[5][6] On April 14, 2011, Universal Orlando Resort began a teaser campaign on their Facebook page where weekly hints were released leading up to the announcement of their upcoming attraction.[7][8] On May 19, 2011, the attraction was officially announced at a live webcast at Universal Orlando Resort. Universal Parks & Resorts also announced a major refurbishment of The Amazing Adventures of Spider-Man at Islands of Adventure on the same day.[2][9]
Construction for the Despicable Me attraction at Universal Studios Florida began in mid-August 2011, with the removal the former Jimmy Neutron ride.[10] After a period of construction spanning several months, the attraction soft opened to the public on June 9, 2012.[11] On July 2, 2012, Despicable Me: Minion Mayhem officially opened to the public.[4] The ride's gift shop, Super Silly Stuff, had opened prior to the ride in May 2012.[12]
On March 11, 2013, Universal Studios Hollywood announced that they would open Despicable Me: Minion Mayhem in 2014.[13] The announcement followed a series of rumours stating the park would replace the recently-closed T2 3-D: Battle Across Time attraction with a Despicable Me attraction.[14][15] A later announcement revealed the surrounding area would be themed as Super Silly Fun Land.[16]
On August 3, 2013, it was announced that Despicable Me: Minion Mayhem's Hollywood attraction would open on April 10, 2014.
Overview[edit source | editbeta]

Universal Orlando Resort announced that the attraction is being designed by their Universal Creative company in association with Illumination Entertainment and Despicable Me film producer Chris Meledandri. The ride is a motion simulator and employs the use of high-definition 3-D Infitec projection systems, and features multiple characters from the film, including Gru, Margo, Edith, Agnes and the Minions.
The attraction at Universal Studios Florida is located in Soundstage 42 in the Production Central area. The soundstage previously housed The Funtastic World of Hanna-Barbera 1990 until 2002 and Jimmy Neutron's Nicktoon Blast from 2003 until 2011.[3] The attraction at Universal Studios Hollywood will be located on the former site of T2 3-D: Battle Across Time on the Upper Lot.[14]
Experience[edit source | editbeta]
Queue[edit source | editbeta]
When people are waiting in line for the ride, they get to learn what a Minion really needs, the profiles of Gru, Dr. Nefario, Margo, Edith, Agnes and the Minions; they also get to see a revision of the original Despicable Me film. The guests are also given a Minion-quiz, to let them test themselves to see if they are fully prepared to be a Minion. The Hollywood version will have details to look more like Gru's house than the one in Florida. The answers in the quiz are always the last options.
First pre-show room (Gru's living room)[edit source | editbeta]
First, the guests enter the room and get Minion Goggles (3-D glasses). Then the pre-show starts when Gru, the world's #1 supervillain, welcomes guests to his house and explains them that they will be trained as minions, but he also warns us that "danger lurks, at every turn". Just as he was about to begin, however, Agnes, Gru's youngest daughter, appears on-screen, chasing Kyle, Gru's pet dog, despite Gru saying that he's "trying to be evil". Then, Margo and Edith, Gru's other daughters, appear on-screen: the brown-eyed oldest, Margo, appears right next to Gru, asking what he is doing, but Gru explains he's fine. The grey-eyed tomboy, Edith, makes weird faces in front of the camera. Then Agnes appears in front of the camera along with Kyle: the former asks to the audience: "Who's the cutest doggie in the world?", while kissing the latter on the camera at the same time, leaving a smudge, then continues chasing him. Gru, however, attempts to maintain his concentration, but loses it when he sees Margo cleaning Kyle's smudge. All of a sudden, Edith appears with some sock puppet in front of the camera, mimicking the voice of an evil clown. During Edith's imitation, Agnes chases Kyle. Gru and Margo, on the other hand start to grow suspicious of Edith's behaviour. Once Gru realizes that Edith and Agnes are going way too far, he orders them to listen up and just let him explain. Once Edith and Agnes start to heed Gru's orders, Edith explains that she, along with her siblings, are "just trying to keep things interesting". Gru forces the girls to keep themselves quiet and stand still. He introduces his daughters to the audience who, in response, greet the audience. After the introduction for Gru's daughters, Gru forces the public to take a three-hour written exam, but Margo explains him not to do that, since they haven't planned it. Gru, who did not think it's a good idea, unwillingly accepts and begins by explaining about Minion Goggles, the latest invention created by his sidekick, Dr. Nefario. He tested them on Gru's very own Minions to see how they work, and what the guests should be doing during the demonstration. Gru explains to the audience that they have Nefario's guarantee. This means that the Minion Goggles will last five times longer than the person wearing them. He also explains the safety violations for the goggles, like not putting them on until you've got the permission to do that, also that it is prohibited to use the Minion Goggles to hold in anything that looks like food to us. Afterwards, Gru orders the guests to proceed to his lab and also forces them to heed his warns. Margo, Gru's oldest daughter, on the other hand, orders the guests to have fun, but Gru doesn't even smile, so the girls try to spruce him up: Edith by playing with the sock puppet, imitating the voice of an evil clown at the same time, Agnes by saying: "Come on! Smile, Gru!". However, Gru responds in a bored tone with: "I hate smiling". Then a voice tells the guests safety introductions. Next, the doors open to Gru's laboratory with Gru saying what to do while walking in the room; the guests should stay in their row and not put on their Minion Goggles yet until they're told to do so.
Second pre-show room (Gru's laboratory)[edit source | editbeta]
In this pre-show room, just before the ride, Gru, along with some Minions, enter the room and explains the public are there for a reason: henching for the world's #1 supervillain. Gru wants to take time to interview the new recruits one at a time, but explains he's working on something really big today, so he does the interviewing very fast. As Gru is about to begin, however, a Minion, holding a blueprint, interrupts him. Gru excuses the audience to wait a moment so he can read the blueprint the Minion is holding. Gru finds the blueprint good and orders the Minion to tell Doctor Nefario, his assistant, for more dynamite. When the Minion leaves, only to envolve an argument with another throwing a piece of wadded paper at him, Gru explains his plan of turning everyday ordinary human beings into Minions using a kind of device, called the Minion Gun, created by Doctor Nefario. He tested out on some human beings to see how good it functions, transforming them into Minions of all different shapes and sizes. Next, the whole audience is given a routine body scan to make sure there aren't any "human germs" in the lab by using high-density lasers. However, the scan ends up with a warning: Gru gets disappointed when that some of the guests "have not showered in like a week". This causes the Minions to make fun of the public, but they stop laughing and are forced to get back to work when Gru glares at them. Lucky for the audience, Gru is in a bit of a time crunch and warns for the rest of the audience that he will hit them with his "Pistola de pedo" if any are thinking on backing out. Next, Gru asks: "So what will it be? Minions... or farts?". However, at the same moment, Edith interrupts and imitates her father. Gru, realizing his daughters have showed up, explains to the audience to ignore them. All of a sudden, some of the Minions appear holding mega-phones, but are forced to retreat when Gru explains: "Not now!", and shoos them away. Agnes and Margo start to explain to the audience that they shouldn't be scared of Gru by calling him "just a big, bald teddy bear". The confident Gru, however, wants to prove it to his daughters by pressing a button on his computer, which causes the fart gun to go off. Because of the stench, Edith and Agnes are forced to cover their mouths, Margo and the Minions to hold their breaths. They stop doing it when Edith sniffs the room, then picks up the scent, explaining it "smells like bananas". This causes the Minions to start going mad and some lick on window. When this happens, the girls act natural. Gru, on the other hand, gets annoyed with the unexpected antics of his henchmen. Afterwards, Agnes wants to give a present to Gru. He loves to accept it, but tells her to wait, explaining that he's going to be really behind schedule; also, he has to train the public who are on the verge of becoming Minions. Margo eagerly asks Gru if the trio can assist him by training the crowd: Gru thinks for a moment, but responds with: "I do not think so." However, as Edith starts begging, Gru says that the training is very technical. It all becomes clear when Edith explains that her foster father has been reluctant for a while, not wanting to accept his daughters' willings. When Margo and Edith finally explain Gru, who's busy shooing the Minions holding fire-works away, that the Minion training is "not like it's rocket science, or even fourth grade science" and that "a training monkey can do it", he agrees irate, calmly explaining to the audience that he will leave his daughters in charge of the training. Once Edith hears this, she explains to the guests that they "are so doomed". Gru, however, orders the public to not listen to her, despite him saying that Edith might be right for once. He leaves the room and wishes the guests good luck, at exactly the same time Agnes attempts to catch up with him to give him her anniversary gift of the girls adoption. Edith, however, explains to her younger sibling that Gru already left, which made Agnes filled with sorrow, realizing that Gru may have forgotten the anniversary of their adoption, but Margo says her that he won't, also that they got an important job to do: training the audience into Minions for Gru's bidding. Margo's determination to initiate the training causes Edith to be pumped up and say: "Let's do this!". After that, the doors to the ride are opened, the public is let through and Margo instructs to the audience to not put on their minion goggles until they're told to do so by a lab assistant.
Ride[edit source | editbeta]
Once the ride begins, riders see Gru's daughters riding on some kind of hovering UFO-like vehicle. Once Edith orders Kevin the Minion to zap the riders, he pulls a lever which activates the Minion Gun, transforming the riders into Minions. Next, the riders get pushed down a long tube to training by the girls. Margo welcomes the guests to the Minion Training Grounds. As the riders slide down and avoid the water sprayers, Margo instructs the guests: "This where we test your "strength, speed and ability to not die". The audience is also forced to dodge deadly security lasers, a giant cactus, and fly swatters along the way. Once some Minions, holding "Stop" signs, force us to stop running, two Minions are being punched away by a giant boxing glove, then the riders are being punched down by another, along with two Minions, and unexpectedly stop at a giant gap. This is where Gru's daughters want us to test our problem solving and teamwork skills; the guests are forced to create a giant, human hand-like Minion-chain to get across the other side. However, once Edith uses a giant banana as bait, the Minions suddenly get distracted by it, causing the Minion-chain to break apart and the riders to accidentally fall down a long hole to the bomb transportation sector, which is a restricted area; Gru also warns us that it might be dangerous. When the girls are helping us to get out of the sector, the worst happens: bombs start to explode in the bomb transportation room; when the girls get startled by the explosions, Agnes loses her gift and the guests attempt to retrieve it by dodging the bombs, also the giant machinery on the verge of crushing the riders and the girls into pieces, like giant razor sharp blades, with Agnes barely catching it. However, when the two Minions that the guests used to follow start to fall down, Gru arrives, attempting to catch them, but he falls down along with them, only to be nearly saved by grabbing hold to the hovering vehicle that Margo, Edith and Agnes are riding. However, as Agnes is about to give her present to Gru, her adoptive father, he gets unexpectedly knocked off the vehicle by a giant mallet unseen. The girls continue, but Gru gets hit straight at the riders. The riders then suddenly end up, along with Gru's daughters, who, because of an accidental push given by us, get pushed off their vehicle, in another sector. Once in another area, Margo, Edith and Agnes are starting to float and Margo realises that she, along with the others, are in the anti-gravity recycling room. To make matters worse, a giant robot arm rises from under the girls, ending themselves up being surrounded by claws and other hazards, but they hold on to it. When this happens, Margo warns her younger siblings to just remain hold to the giant grooves of the wire to avoid being crushed. However, one of the crushers nearby startles Gru's daughters, causing Agnes to lose her present. Seeing her present for Gru floating away, Agnes is forced to risk her life and lets her go of Margo's foot and attempts to float off to recover Gru's one-year anniversary gift, narrowly avoiding a bomb, despite Margo warning her to not to. However, once Agnes recovers her one-year present by barely avoiding a giant spiked crusher, she starts floating into a giant oscillating fan, when, all of a sudden, Gru arrives, blocking the crushers with an steel beam, then saves Agnes. Seeing each other, Gru and Agnes give themselves a hug when suddenly the smashers start moving again, leaving Gru no choice but to summon all of his strength to stop the giant crusher just in time, saving all of them, including himself, from being smashed. Because of Gru's strength and pressure that he used to both save Agnes and stop the giant crusher, the anti-gravity recycling room's power goes down, and the riders, along with Gru and his daughters, land safely on a crowd of Minions. Once both the Gru residence and the guests land safely on the Minions, Gru opens Agnes' present, revealing a doll replica of himself. Despite that Agnes says "it's a little squashed", Gru finds it "absolutely perfect", and gives his daughters a hug, also giving the trio "a little something": an amusement park-like anniversary party. Once the giant doors open to the party, the riders follow the Gru residence, now riding on a hovering vehicle, avoiding the party decorations all the way to the stage. Once there, Gru congratulates us of being successful in their training. However, a rocket is fired at the Minion Gun, right next to Gru. He protects his daughters, however, the gun breaks and goes off on the riders, causing the effects to be reversed, transforming the guests into humans again. Once this happens, Gru gets disappointed, realizing the riders are "human again", orders someone off-screen for the next troop.
Post-show[edit source | editbeta]
After the ride, the door to some sort of dance party are opened. with the public dancing on Boogie Fever, along with a costumed Minion.[3]
Gift shop[edit source | editbeta]
In May 2012, the ride's gift shop Super Silly Stuff opened,[12] replacing the Nickstuff store. The store sells Despicable Me-related merchandise. The store is themed to the carnival Gru, Margo, Edith, and Agnes visit in the original film.Despicable Me: Minion Mayhem
From Wikipedia, the free encyclopedia

This article may be written from a fan's point of view, rather than a neutral point of view. Please clean it up to conform to a higher standard of quality, and to make it neutral in tone. (June 2013)
Despicable Me: Minion Mayhem
DespicableMeMinionMayhem.jpg
Despicable Me Minion Mayhem building.jpg
The Despicable Me: Minion Mayhem show building
[hide]Universal Studios Florida
Area	Production Central
Status	Operating
Soft opening date	June 9, 2012
Opening date	July 2, 2012-present[1]
Replaced	Jimmy Neutron's Nicktoon Blast (2003–2011)
[hide]Universal Studios Hollywood
Area	Upper Lot
Status	Under construction
Opening date	April 10, 2014
Replaced	T2 3-D: Battle Across Time
General statistics
Attraction type	4-D Simulator ride[2]
Manufacturer	Intamin
Designer	Universal Creative
Illumination Entertainment
Reel FX
Theme	Despicable Me
Riders per vehicle	8
Rows	2
Riders per row	4
Duration	8
Height restriction	40 in (102 cm)
Pre-show host	Gru (Steve Carell)[3]
Ride hosts	Margo (Miranda Cosgrove), Edith (Dana Gaier) , Agnes (Elsie Fisher)[4]
Despicable Me: Minion Mayhem is a simulator ride attraction at Universal Studios Florida and coming on April 10, 2014 to Universal Studios Hollywood. The attraction is based on Universal Studios and Illumination Entertainment's 2010 animated film Despicable Me and employs the use of 3-D HD digital animation. The attraction replaced Jimmy Neutron's Nicktoon Blast in Florida and will be replacing Terminator 2 3D in Hollywood.
Contents  [hide] 
1 History
2 Overview
2.1 Experience
2.1.1 Queue
2.1.2 First pre-show room (Gru's living room)
2.1.3 Second pre-show room (Gru's laboratory)
2.1.4 Ride
2.1.5 Post-show
2.2 Gift shop
3 Accolades
4 See also
5 References
6 External links
History[edit source | editbeta]



Some theming surrounding the ride at Universal Studios Florida
In March 2011, Universal Studios Florida announced that Jimmy Neutron's Nicktoon Blast would be closing to make way for a new attraction due to Nick no longer airing the show mentioned on the ride. The ride began seasonal operations on April 1, 2011, before officially closing on August 18, 2011.[5][6] On April 14, 2011, Universal Orlando Resort began a teaser campaign on their Facebook page where weekly hints were released leading up to the announcement of their upcoming attraction.[7][8] On May 19, 2011, the attraction was officially announced at a live webcast at Universal Orlando Resort. Universal Parks & Resorts also announced a major refurbishment of The Amazing Adventures of Spider-Man at Islands of Adventure on the same day.[2][9]
Construction for the Despicable Me attraction at Universal Studios Florida began in mid-August 2011, with the removal the former Jimmy Neutron ride.[10] After a period of construction spanning several months, the attraction soft opened to the public on June 9, 2012.[11] On July 2, 2012, Despicable Me: Minion Mayhem officially opened to the public.[4] The ride's gift shop, Super Silly Stuff, had opened prior to the ride in May 2012.[12]
On March 11, 2013, Universal Studios Hollywood announced that they would open Despicable Me: Minion Mayhem in 2014.[13] The announcement followed a series of rumours stating the park would replace the recently-closed T2 3-D: Battle Across Time attraction with a Despicable Me attraction.[14][15] A later announcement revealed the surrounding area would be themed as Super Silly Fun Land.[16]
On August 3, 2013, it was announced that Despicable Me: Minion Mayhem's Hollywood attraction would open on April 10, 2014.
Overview[edit source | editbeta]

Universal Orlando Resort announced that the attraction is being designed by their Universal Creative company in association with Illumination Entertainment and Despicable Me film producer Chris Meledandri. The ride is a motion simulator and employs the use of high-definition 3-D Infitec projection systems, and features multiple characters from the film, including Gru, Margo, Edith, Agnes and the Minions.
The attraction at Universal Studios Florida is located in Soundstage 42 in the Production Central area. The soundstage previously housed The Funtastic World of Hanna-Barbera 1990 until 2002 and Jimmy Neutron's Nicktoon Blast from 2003 until 2011.[3] The attraction at Universal Studios Hollywood will be located on the former site of T2 3-D: Battle Across Time on the Upper Lot.[14]
Experience[edit source | editbeta]
Queue[edit source | editbeta]
When people are waiting in line for the ride, they get to learn what a Minion really needs, the profiles of Gru, Dr. Nefario, Margo, Edith, Agnes and the Minions; they also get to see a revision of the original Despicable Me film. The guests are also given a Minion-quiz, to let them test themselves to see if they are fully prepared to be a Minion. The Hollywood version will have details to look more like Gru's house than the one in Florida. The answers in the quiz are always the last options.
First pre-show room (Gru's living room)[edit source | editbeta]
First, the guests enter the room and get Minion Goggles (3-D glasses). Then the pre-show starts when Gru, the world's #1 supervillain, welcomes guests to his house and explains them that they will be trained as minions, but he also warns us that "danger lurks, at every turn". Just as he was about to begin, however, Agnes, Gru's youngest daughter, appears on-screen, chasing Kyle, Gru's pet dog, despite Gru saying that he's "trying to be evil". Then, Margo and Edith, Gru's other daughters, appear on-screen: the brown-eyed oldest, Margo, appears right next to Gru, asking what he is doing, but Gru explains he's fine. The grey-eyed tomboy, Edith, makes weird faces in front of the camera. Then Agnes appears in front of the camera along with Kyle: the former asks to the audience: "Who's the cutest doggie in the world?", while kissing the latter on the camera at the same time, leaving a smudge, then continues chasing him. Gru, however, attempts to maintain his concentration, but loses it when he sees Margo cleaning Kyle's smudge. All of a sudden, Edith appears with some sock puppet in front of the camera, mimicking the voice of an evil clown. During Edith's imitation, Agnes chases Kyle. Gru and Margo, on the other hand start to grow suspicious of Edith's behaviour. Once Gru realizes that Edith and Agnes are going way too far, he orders them to listen up and just let him explain. Once Edith and Agnes start to heed Gru's orders, Edith explains that she, along with her siblings, are "just trying to keep things interesting". Gru forces the girls to keep themselves quiet and stand still. He introduces his daughters to the audience who, in response, greet the audience. After the introduction for Gru's daughters, Gru forces the public to take a three-hour written exam, but Margo explains him not to do that, since they haven't planned it. Gru, who did not think it's a good idea, unwillingly accepts and begins by explaining about Minion Goggles, the latest invention created by his sidekick, Dr. Nefario. He tested them on Gru's very own Minions to see how they work, and what the guests should be doing during the demonstration. Gru explains to the audience that they have Nefario's guarantee. This means that the Minion Goggles will last five times longer than the person wearing them. He also explains the safety violations for the goggles, like not putting them on until you've got the permission to do that, also that it is prohibited to use the Minion Goggles to hold in anything that looks like food to us. Afterwards, Gru orders the guests to proceed to his lab and also forces them to heed his warns. Margo, Gru's oldest daughter, on the other hand, orders the guests to have fun, but Gru doesn't even smile, so the girls try to spruce him up: Edith by playing with the sock puppet, imitating the voice of an evil clown at the same time, Agnes by saying: "Come on! Smile, Gru!". However, Gru responds in a bored tone with: "I hate smiling". Then a voice tells the guests safety introductions. Next, the doors open to Gru's laboratory with Gru saying what to do while walking in the room; the guests should stay in their row and not put on their Minion Goggles yet until they're told to do so.
Second pre-show room (Gru's laboratory)[edit source | editbeta]
In this pre-show room, just before the ride, Gru, along with some Minions, enter the room and explains the public are there for a reason: henching for the world's #1 supervillain. Gru wants to take time to interview the new recruits one at a time, but explains he's working on something really big today, so he does the interviewing very fast. As Gru is about to begin, however, a Minion, holding a blueprint, interrupts him. Gru excuses the audience to wait a moment so he can read the blueprint the Minion is holding. Gru finds the blueprint good and orders the Minion to tell Doctor Nefario, his assistant, for more dynamite. When the Minion leaves, only to envolve an argument with another throwing a piece of wadded paper at him, Gru explains his plan of turning everyday ordinary human beings into Minions using a kind of device, called the Minion Gun, created by Doctor Nefario. He tested out on some human beings to see how good it functions, transforming them into Minions of all different shapes and sizes. Next, the whole audience is given a routine body scan to make sure there aren't any "human germs" in the lab by using high-density lasers. However, the scan ends up with a warning: Gru gets disappointed when that some of the guests "have not showered in like a week". This causes the Minions to make fun of the public, but they stop laughing and are forced to get back to work when Gru glares at them. Lucky for the audience, Gru is in a bit of a time crunch and warns for the rest of the audience that he will hit them with his "Pistola de pedo" if any are thinking on backing out. Next, Gru asks: "So what will it be? Minions... or farts?". However, at the same moment, Edith interrupts and imitates her father. Gru, realizing his daughters have showed up, explains to the audience to ignore them. All of a sudden, some of the Minions appear holding mega-phones, but are forced to retreat when Gru explains: "Not now!", and shoos them away. Agnes and Margo start to explain to the audience that they shouldn't be scared of Gru by calling him "just a big, bald teddy bear". The confident Gru, however, wants to prove it to his daughters by pressing a button on his computer, which causes the fart gun to go off. Because of the stench, Edith and Agnes are forced to cover their mouths, Margo and the Minions to hold their breaths. They stop doing it when Edith sniffs the room, then picks up the scent, explaining it "smells like bananas". This causes the Minions to start going mad and some lick on window. When this happens, the girls act natural. Gru, on the other hand, gets annoyed with the unexpected antics of his henchmen. Afterwards, Agnes wants to give a present to Gru. He loves to accept it, but tells her to wait, explaining that he's going to be really behind schedule; also, he has to train the public who are on the verge of becoming Minions. Margo eagerly asks Gru if the trio can assist him by training the crowd: Gru thinks for a moment, but responds with: "I do not think so." However, as Edith starts begging, Gru says that the training is very technical. It all becomes clear when Edith explains that her foster father has been reluctant for a while, not wanting to accept his daughters' willings. When Margo and Edith finally explain Gru, who's busy shooing the Minions holding fire-works away, that the Minion training is "not like it's rocket science, or even fourth grade science" and that "a training monkey can do it", he agrees irate, calmly explaining to the audience that he will leave his daughters in charge of the training. Once Edith hears this, she explains to the guests that they "are so doomed". Gru, however, orders the public to not listen to her, despite him saying that Edith might be right for once. He leaves the room and wishes the guests good luck, at exactly the same time Agnes attempts to catch up with him to give him her anniversary gift of the girls adoption. Edith, however, explains to her younger sibling that Gru already left, which made Agnes filled with sorrow, realizing that Gru may have forgotten the anniversary of their adoption, but Margo says her that he won't, also that they got an important job to do: training the audience into Minions for Gru's bidding. Margo's determination to initiate the training causes Edith to be pumped up and say: "Let's do this!". After that, the doors to the ride are opened, the public is let through and Margo instructs to the audience to not put on their minion goggles until they're told to do so by a lab assistant.
Ride[edit source | editbeta]
Once the ride begins, riders see Gru's daughters riding on some kind of hovering UFO-like vehicle. Once Edith orders Kevin the Minion to zap the riders, he pulls a lever which activates the Minion Gun, transforming the riders into Minions. Next, the riders get pushed down a long tube to training by the girls. Margo welcomes the guests to the Minion Training Grounds. As the riders slide down and avoid the water sprayers, Margo instructs the guests: "This where we test your "strength, speed and ability to not die". The audience is also forced to dodge deadly security lasers, a giant cactus, and fly swatters along the way. Once some Minions, holding "Stop" signs, force us to stop running, two Minions are being punched away by a giant boxing glove, then the riders are being punched down by another, along with two Minions, and unexpectedly stop at a giant gap. This is where Gru's daughters want us to test our problem solving and teamwork skills; the guests are forced to create a giant, human hand-like Minion-chain to get across the other side. However, once Edith uses a giant banana as bait, the Minions suddenly get distracted by it, causing the Minion-chain to break apart and the riders to accidentally fall down a long hole to the bomb transportation sector, which is a restricted area; Gru also warns us that it might be dangerous. When the girls are helping us to get out of the sector, the worst happens: bombs start to explode in the bomb transportation room; when the girls get startled by the explosions, Agnes loses her gift and the guests attempt to retrieve it by dodging the bombs, also the giant machinery on the verge of crushing the riders and the girls into pieces, like giant razor sharp blades, with Agnes barely catching it. However, when the two Minions that the guests used to follow start to fall down, Gru arrives, attempting to catch them, but he falls down along with them, only to be nearly saved by grabbing hold to the hovering vehicle that Margo, Edith and Agnes are riding. However, as Agnes is about to give her present to Gru, her adoptive father, he gets unexpectedly knocked off the vehicle by a giant mallet unseen. The girls continue, but Gru gets hit straight at the riders. The riders then suddenly end up, along with Gru's daughters, who, because of an accidental push given by us, get pushed off their vehicle, in another sector. Once in another area, Margo, Edith and Agnes are starting to float and Margo realises that she, along with the others, are in the anti-gravity recycling room. To make matters worse, a giant robot arm rises from under the girls, ending themselves up being surrounded by claws and other hazards, but they hold on to it. When this happens, Margo warns her younger siblings to just remain hold to the giant grooves of the wire to avoid being crushed. However, one of the crushers nearby startles Gru's daughters, causing Agnes to lose her present. Seeing her present for Gru floating away, Agnes is forced to risk her life and lets her go of Margo's foot and attempts to float off to recover Gru's one-year anniversary gift, narrowly avoiding a bomb, despite Margo warning her to not to. However, once Agnes recovers her one-year present by barely avoiding a giant spiked crusher, she starts floating into a giant oscillating fan, when, all of a sudden, Gru arrives, blocking the crushers with an steel beam, then saves Agnes. Seeing each other, Gru and Agnes give themselves a hug when suddenly the smashers start moving again, leaving Gru no choice but to summon all of his strength to stop the giant crusher just in time, saving all of them, including himself, from being smashed. Because of Gru's strength and pressure that he used to both save Agnes and stop the giant crusher, the anti-gravity recycling room's power goes down, and the riders, along with Gru and his daughters, land safely on a crowd of Minions. Once both the Gru residence and the guests land safely on the Minions, Gru opens Agnes' present, revealing a doll replica of himself. Despite that Agnes says "it's a little squashed", Gru finds it "absolutely perfect", and gives his daughters a hug, also giving the trio "a little something": an amusement park-like anniversary party. Once the giant doors open to the party, the riders follow the Gru residence, now riding on a hovering vehicle, avoiding the party decorations all the way to the stage. Once there, Gru congratulates us of being successful in their training. However, a rocket is fired at the Minion Gun, right next to Gru. He protects his daughters, however, the gun breaks and goes off on the riders, causing the effects to be reversed, transforming the guests into humans again. Once this happens, Gru gets disappointed, realizing the riders are "human again", orders someone off-screen for the next troop.
Post-show[edit source | editbeta]
After the ride, the door to some sort of dance party are opened. with the public dancing on Boogie Fever, along with a costumed Minion.[3]
Gift shop[edit source | editbeta]
In May 2012, the ride's gift shop Super Silly Stuff opened,[12] replacing the Nickstuff store. The store sells Despicable Me-related merchandise. The store is themed to the carnival Gru, Margo, Edith, and Agnes visit in the original film.Despicable Me: Minion Mayhem
From Wikipedia, the free encyclopedia

This article may be written from a fan's point of view, rather than a neutral point of view. Please clean it up to conform to a higher standard of quality, and to make it neutral in tone. (June 2013)
Despicable Me: Minion Mayhem
DespicableMeMinionMayhem.jpg
Despicable Me Minion Mayhem building.jpg
The Despicable Me: Minion Mayhem show building
[hide]Universal Studios Florida
Area	Production Central
Status	Operating
Soft opening date	June 9, 2012
Opening date	July 2, 2012-present[1]
Replaced	Jimmy Neutron's Nicktoon Blast (2003–2011)
[hide]Universal Studios Hollywood
Area	Upper Lot
Status	Under construction
Opening date	April 10, 2014
Replaced	T2 3-D: Battle Across Time
General statistics
Attraction type	4-D Simulator ride[2]
Manufacturer	Intamin
Designer	Universal Creative
Illumination Entertainment
Reel FX
Theme	Despicable Me
Riders per vehicle	8
Rows	2
Riders per row	4
Duration	8
Height restriction	40 in (102 cm)
Pre-show host	Gru (Steve Carell)[3]
Ride hosts	Margo (Miranda Cosgrove), Edith (Dana Gaier) , Agnes (Elsie Fisher)[4]
Despicable Me: Minion Mayhem is a simulator ride attraction at Universal Studios Florida and coming on April 10, 2014 to Universal Studios Hollywood. The attraction is based on Universal Studios and Illumination Entertainment's 2010 animated film Despicable Me and employs the use of 3-D HD digital animation. The attraction replaced Jimmy Neutron's Nicktoon Blast in Florida and will be replacing Terminator 2 3D in Hollywood.
Contents  [hide] 
1 History
2 Overview
2.1 Experience
2.1.1 Queue
2.1.2 First pre-show room (Gru's living room)
2.1.3 Second pre-show room (Gru's laboratory)
2.1.4 Ride
2.1.5 Post-show
2.2 Gift shop
3 Accolades
4 See also
5 References
6 External links
History[edit source | editbeta]



Some theming surrounding the ride at Universal Studios Florida
In March 2011, Universal Studios Florida announced that Jimmy Neutron's Nicktoon Blast would be closing to make way for a new attraction due to Nick no longer airing the show mentioned on the ride. The ride began seasonal operations on April 1, 2011, before officially closing on August 18, 2011.[5][6] On April 14, 2011, Universal Orlando Resort began a teaser campaign on their Facebook page where weekly hints were released leading up to the announcement of their upcoming attraction.[7][8] On May 19, 2011, the attraction was officially announced at a live webcast at Universal Orlando Resort. Universal Parks & Resorts also announced a major refurbishment of The Amazing Adventures of Spider-Man at Islands of Adventure on the same day.[2][9]
Construction for the Despicable Me attraction at Universal Studios Florida began in mid-August 2011, with the removal the former Jimmy Neutron ride.[10] After a period of construction spanning several months, the attraction soft opened to the public on June 9, 2012.[11] On July 2, 2012, Despicable Me: Minion Mayhem officially opened to the public.[4] The ride's gift shop, Super Silly Stuff, had opened prior to the ride in May 2012.[12]
On March 11, 2013, Universal Studios Hollywood announced that they would open Despicable Me: Minion Mayhem in 2014.[13] The announcement followed a series of rumours stating the park would replace the recently-closed T2 3-D: Battle Across Time attraction with a Despicable Me attraction.[14][15] A later announcement revealed the surrounding area would be themed as Super Silly Fun Land.[16]
On August 3, 2013, it was announced that Despicable Me: Minion Mayhem's Hollywood attraction would open on April 10, 2014.
Overview[edit source | editbeta]

Universal Orlando Resort announced that the attraction is being designed by their Universal Creative company in association with Illumination Entertainment and Despicable Me film producer Chris Meledandri. The ride is a motion simulator and employs the use of high-definition 3-D Infitec projection systems, and features multiple characters from the film, including Gru, Margo, Edith, Agnes and the Minions.
The attraction at Universal Studios Florida is located in Soundstage 42 in the Production Central area. The soundstage previously housed The Funtastic World of Hanna-Barbera 1990 until 2002 and Jimmy Neutron's Nicktoon Blast from 2003 until 2011.[3] The attraction at Universal Studios Hollywood will be located on the former site of T2 3-D: Battle Across Time on the Upper Lot.[14]
Experience[edit source | editbeta]
Queue[edit source | editbeta]
When people are waiting in line for the ride, they get to learn what a Minion really needs, the profiles of Gru, Dr. Nefario, Margo, Edith, Agnes and the Minions; they also get to see a revision of the original Despicable Me film. The guests are also given a Minion-quiz, to let them test themselves to see if they are fully prepared to be a Minion. The Hollywood version will have details to look more like Gru's house than the one in Florida. The answers in the quiz are always the last options.
First pre-show room (Gru's living room)[edit source | editbeta]
First, the guests enter the room and get Minion Goggles (3-D glasses). Then the pre-show starts when Gru, the world's #1 supervillain, welcomes guests to his house and explains them that they will be trained as minions, but he also warns us that "danger lurks, at every turn". Just as he was about to begin, however, Agnes, Gru's youngest daughter, appears on-screen, chasing Kyle, Gru's pet dog, despite Gru saying that he's "trying to be evil". Then, Margo and Edith, Gru's other daughters, appear on-screen: the brown-eyed oldest, Margo, appears right next to Gru, asking what he is doing, but Gru explains he's fine. The grey-eyed tomboy, Edith, makes weird faces in front of the camera. Then Agnes appears in front of the camera along with Kyle: the former asks to the audience: "Who's the cutest doggie in the world?", while kissing the latter on the camera at the same time, leaving a smudge, then continues chasing him. Gru, however, attempts to maintain his concentration, but loses it when he sees Margo cleaning Kyle's smudge. All of a sudden, Edith appears with some sock puppet in front of the camera, mimicking the voice of an evil clown. During Edith's imitation, Agnes chases Kyle. Gru and Margo, on the other hand start to grow suspicious of Edith's behaviour. Once Gru realizes that Edith and Agnes are going way too far, he orders them to listen up and just let him explain. Once Edith and Agnes start to heed Gru's orders, Edith explains that she, along with her siblings, are "just trying to keep things interesting". Gru forces the girls to keep themselves quiet and stand still. He introduces his daughters to the audience who, in response, greet the audience. After the introduction for Gru's daughters, Gru forces the public to take a three-hour written exam, but Margo explains him not to do that, since they haven't planned it. Gru, who did not think it's a good idea, unwillingly accepts and begins by explaining about Minion Goggles, the latest invention created by his sidekick, Dr. Nefario. He tested them on Gru's very own Minions to see how they work, and what the guests should be doing during the demonstration. Gru explains to the audience that they have Nefario's guarantee. This means that the Minion Goggles will last five times longer than the person wearing them. He also explains the safety violations for the goggles, like not putting them on until you've got the permission to do that, also that it is prohibited to use the Minion Goggles to hold in anything that looks like food to us. Afterwards, Gru orders the guests to proceed to his lab and also forces them to heed his warns. Margo, Gru's oldest daughter, on the other hand, orders the guests to have fun, but Gru doesn't even smile, so the girls try to spruce him up: Edith by playing with the sock puppet, imitating the voice of an evil clown at the same time, Agnes by saying: "Come on! Smile, Gru!". However, Gru responds in a bored tone with: "I hate smiling". Then a voice tells the guests safety introductions. Next, the doors open to Gru's laboratory with Gru saying what to do while walking in the room; the guests should stay in their row and not put on their Minion Goggles yet until they're told to do so.
Second pre-show room (Gru's laboratory)[edit source | editbeta]
In this pre-show room, just before the ride, Gru, along with some Minions, enter the room and explains the public are there for a reason: henching for the world's #1 supervillain. Gru wants to take time to interview the new recruits one at a time, but explains he's working on something really big today, so he does the interviewing very fast. As Gru is about to begin, however, a Minion, holding a blueprint, interrupts him. Gru excuses the audience to wait a moment so he can read the blueprint the Minion is holding. Gru finds the blueprint good and orders the Minion to tell Doctor Nefario, his assistant, for more dynamite. When the Minion leaves, only to envolve an argument with another throwing a piece of wadded paper at him, Gru explains his plan of turning everyday ordinary human beings into Minions using a kind of device, called the Minion Gun, created by Doctor Nefario. He tested out on some human beings to see how good it functions, transforming them into Minions of all different shapes and sizes. Next, the whole audience is given a routine body scan to make sure there aren't any "human germs" in the lab by using high-density lasers. However, the scan ends up with a warning: Gru gets disappointed when that some of the guests "have not showered in like a week". This causes the Minions to make fun of the public, but they stop laughing and are forced to get back to work when Gru glares at them. Lucky for the audience, Gru is in a bit of a time crunch and warns for the rest of the audience that he will hit them with his "Pistola de pedo" if any are thinking on backing out. Next, Gru asks: "So what will it be? Minions... or farts?". However, at the same moment, Edith interrupts and imitates her father. Gru, realizing his daughters have showed up, explains to the audience to ignore them. All of a sudden, some of the Minions appear holding mega-phones, but are forced to retreat when Gru explains: "Not now!", and shoos them away. Agnes and Margo start to explain to the audience that they shouldn't be scared of Gru by calling him "just a big, bald teddy bear". The confident Gru, however, wants to prove it to his daughters by pressing a button on his computer, which causes the fart gun to go off. Because of the stench, Edith and Agnes are forced to cover their mouths, Margo and the Minions to hold their breaths. They stop doing it when Edith sniffs the room, then picks up the scent, explaining it "smells like bananas". This causes the Minions to start going mad and some lick on window. When this happens, the girls act natural. Gru, on the other hand, gets annoyed with the unexpected antics of his henchmen. Afterwards, Agnes wants to give a present to Gru. He loves to accept it, but tells her to wait, explaining that he's going to be really behind schedule; also, he has to train the public who are on the verge of becoming Minions. Margo eagerly asks Gru if the trio can assist him by training the crowd: Gru thinks for a moment, but responds with: "I do not think so." However, as Edith starts begging, Gru says that the training is very technical. It all becomes clear when Edith explains that her foster father has been reluctant for a while, not wanting to accept his daughters' willings. When Margo and Edith finally explain Gru, who's busy shooing the Minions holding fire-works away, that the Minion training is "not like it's rocket science, or even fourth grade science" and that "a training monkey can do it", he agrees irate, calmly explaining to the audience that he will leave his daughters in charge of the training. Once Edith hears this, she explains to the guests that they "are so doomed". Gru, however, orders the public to not listen to her, despite him saying that Edith might be right for once. He leaves the room and wishes the guests good luck, at exactly the same time Agnes attempts to catch up with him to give him her anniversary gift of the girls adoption. Edith, however, explains to her younger sibling that Gru already left, which made Agnes filled with sorrow, realizing that Gru may have forgotten the anniversary of their adoption, but Margo says her that he won't, also that they got an important job to do: training the audience into Minions for Gru's bidding. Margo's determination to initiate the training causes Edith to be pumped up and say: "Let's do this!". After that, the doors to the ride are opened, the public is let through and Margo instructs to the audience to not put on their minion goggles until they're told to do so by a lab assistant.
Ride[edit source | editbeta]
Once the ride begins, riders see Gru's daughters riding on some kind of hovering UFO-like vehicle. Once Edith orders Kevin the Minion to zap the riders, he pulls a lever which activates the Minion Gun, transforming the riders into Minions. Next, the riders get pushed down a long tube to training by the girls. Margo welcomes the guests to the Minion Training Grounds. As the riders slide down and avoid the water sprayers, Margo instructs the guests: "This where we test your "strength, speed and ability to not die". The audience is also forced to dodge deadly security lasers, a giant cactus, and fly swatters along the way. Once some Minions, holding "Stop" signs, force us to stop running, two Minions are being punched away by a giant boxing glove, then the riders are being punched down by another, along with two Minions, and unexpectedly stop at a giant gap. This is where Gru's daughters want us to test our problem solving and teamwork skills; the guests are forced to create a giant, human hand-like Minion-chain to get across the other side. However, once Edith uses a giant banana as bait, the Minions suddenly get distracted by it, causing the Minion-chain to break apart and the riders to accidentally fall down a long hole to the bomb transportation sector, which is a restricted area; Gru also warns us that it might be dangerous. When the girls are helping us to get out of the sector, the worst happens: bombs start to explode in the bomb transportation room; when the girls get startled by the explosions, Agnes loses her gift and the guests attempt to retrieve it by dodging the bombs, also the giant machinery on the verge of crushing the riders and the girls into pieces, like giant razor sharp blades, with Agnes barely catching it. However, when the two Minions that the guests used to follow start to fall down, Gru arrives, attempting to catch them, but he falls down along with them, only to be nearly saved by grabbing hold to the hovering vehicle that Margo, Edith and Agnes are riding. However, as Agnes is about to give her present to Gru, her adoptive father, he gets unexpectedly knocked off the vehicle by a giant mallet unseen. The girls continue, but Gru gets hit straight at the riders. The riders then suddenly end up, along with Gru's daughters, who, because of an accidental push given by us, get pushed off their vehicle, in another sector. Once in another area, Margo, Edith and Agnes are starting to float and Margo realises that she, along with the others, are in the anti-gravity recycling room. To make matters worse, a giant robot arm rises from under the girls, ending themselves up being surrounded by claws and other hazards, but they hold on to it. When this happens, Margo warns her younger siblings to just remain hold to the giant grooves of the wire to avoid being crushed. However, one of the crushers nearby startles Gru's daughters, causing Agnes to lose her present. Seeing her present for Gru floating away, Agnes is forced to risk her life and lets her go of Margo's foot and attempts to float off to recover Gru's one-year anniversary gift, narrowly avoiding a bomb, despite Margo warning her to not to. However, once Agnes recovers her one-year present by barely avoiding a giant spiked crusher, she starts floating into a giant oscillating fan, when, all of a sudden, Gru arrives, blocking the crushers with an steel beam, then saves Agnes. Seeing each other, Gru and Agnes give themselves a hug when suddenly the smashers start moving again, leaving Gru no choice but to summon all of his strength to stop the giant crusher just in time, saving all of them, including himself, from being smashed. Because of Gru's strength and pressure that he used to both save Agnes and stop the giant crusher, the anti-gravity recycling room's power goes down, and the riders, along with Gru and his daughters, land safely on a crowd of Minions. Once both the Gru residence and the guests land safely on the Minions, Gru opens Agnes' present, revealing a doll replica of himself. Despite that Agnes says "it's a little squashed", Gru finds it "absolutely perfect", and gives his daughters a hug, also giving the trio "a little something": an amusement park-like anniversary party. Once the giant doors open to the party, the riders follow the Gru residence, now riding on a hovering vehicle, avoiding the party decorations all the way to the stage. Once there, Gru congratulates us of being successful in their training. However, a rocket is fired at the Minion Gun, right next to Gru. He protects his daughters, however, the gun breaks and goes off on the riders, causing the effects to be reversed, transforming the guests into humans again. Once this happens, Gru gets disappointed, realizing the riders are "human again", orders someone off-screen for the next troop.
Post-show[edit source | editbeta]
After the ride, the door to some sort of dance party are opened. with the public dancing on Boogie Fever, along with a costumed Minion.[3]
Gift shop[edit source | editbeta]
In May 2012, the ride's gift shop Super Silly Stuff opened,[12] replacing the Nickstuff store. The store sells Despicable Me-related merchandise. The store is themed to the carnival Gru, Margo, Edith, and Agnes visit in the original film.Despicable Me: Minion Mayhem
From Wikipedia, the free encyclopedia

This article may be written from a fan's point of view, rather than a neutral point of view. Please clean it up to conform to a higher standard of quality, and to make it neutral in tone. (June 2013)
Despicable Me: Minion Mayhem
DespicableMeMinionMayhem.jpg
Despicable Me Minion Mayhem building.jpg
The Despicable Me: Minion Mayhem show building
[hide]Universal Studios Florida
Area	Production Central
Status	Operating
Soft opening date	June 9, 2012
Opening date	July 2, 2012-present[1]
Replaced	Jimmy Neutron's Nicktoon Blast (2003–2011)
[hide]Universal Studios Hollywood
Area	Upper Lot
Status	Under construction
Opening date	April 10, 2014
Replaced	T2 3-D: Battle Across Time
General statistics
Attraction type	4-D Simulator ride[2]
Manufacturer	Intamin
Designer	Universal Creative
Illumination Entertainment
Reel FX
Theme	Despicable Me
Riders per vehicle	8
Rows	2
Riders per row	4
Duration	8
Height restriction	40 in (102 cm)
Pre-show host	Gru (Steve Carell)[3]
Ride hosts	Margo (Miranda Cosgrove), Edith (Dana Gaier) , Agnes (Elsie Fisher)[4]
Despicable Me: Minion Mayhem is a simulator ride attraction at Universal Studios Florida and coming on April 10, 2014 to Universal Studios Hollywood. The attraction is based on Universal Studios and Illumination Entertainment's 2010 animated film Despicable Me and employs the use of 3-D HD digital animation. The attraction replaced Jimmy Neutron's Nicktoon Blast in Florida and will be replacing Terminator 2 3D in Hollywood.
Contents  [hide] 
1 History
2 Overview
2.1 Experience
2.1.1 Queue
2.1.2 First pre-show room (Gru's living room)
2.1.3 Second pre-show room (Gru's laboratory)
2.1.4 Ride
2.1.5 Post-show
2.2 Gift shop
3 Accolades
4 See also
5 References
6 External links
History[edit source | editbeta]



Some theming surrounding the ride at Universal Studios Florida
In March 2011, Universal Studios Florida announced that Jimmy Neutron's Nicktoon Blast would be closing to make way for a new attraction due to Nick no longer airing the show mentioned on the ride. The ride began seasonal operations on April 1, 2011, before officially closing on August 18, 2011.[5][6] On April 14, 2011, Universal Orlando Resort began a teaser campaign on their Facebook page where weekly hints were released leading up to the announcement of their upcoming attraction.[7][8] On May 19, 2011, the attraction was officially announced at a live webcast at Universal Orlando Resort. Universal Parks & Resorts also announced a major refurbishment of The Amazing Adventures of Spider-Man at Islands of Adventure on the same day.[2][9]
Construction for the Despicable Me attraction at Universal Studios Florida began in mid-August 2011, with the removal the former Jimmy Neutron ride.[10] After a period of construction spanning several months, the attraction soft opened to the public on June 9, 2012.[11] On July 2, 2012, Despicable Me: Minion Mayhem officially opened to the public.[4] The ride's gift shop, Super Silly Stuff, had opened prior to the ride in May 2012.[12]
On March 11, 2013, Universal Studios Hollywood announced that they would open Despicable Me: Minion Mayhem in 2014.[13] The announcement followed a series of rumours stating the park would replace the recently-closed T2 3-D: Battle Across Time attraction with a Despicable Me attraction.[14][15] A later announcement revealed the surrounding area would be themed as Super Silly Fun Land.[16]
On August 3, 2013, it was announced that Despicable Me: Minion Mayhem's Hollywood attraction would open on April 10, 2014.
Overview[edit source | editbeta]

Universal Orlando Resort announced that the attraction is being designed by their Universal Creative company in association with Illumination Entertainment and Despicable Me film producer Chris Meledandri. The ride is a motion simulator and employs the use of high-definition 3-D Infitec projection systems, and features multiple characters from the film, including Gru, Margo, Edith, Agnes and the Minions.
The attraction at Universal Studios Florida is located in Soundstage 42 in the Production Central area. The soundstage previously housed The Funtastic World of Hanna-Barbera 1990 until 2002 and Jimmy Neutron's Nicktoon Blast from 2003 until 2011.[3] The attraction at Universal Studios Hollywood will be located on the former site of T2 3-D: Battle Across Time on the Upper Lot.[14]
Experience[edit source | editbeta]
Queue[edit source | editbeta]
When people are waiting in line for the ride, they get to learn what a Minion really needs, the profiles of Gru, Dr. Nefario, Margo, Edith, Agnes and the Minions; they also get to see a revision of the original Despicable Me film. The guests are also given a Minion-quiz, to let them test themselves to see if they are fully prepared to be a Minion. The Hollywood version will have details to look more like Gru's house than the one in Florida. The answers in the quiz are always the last options.
First pre-show room (Gru's living room)[edit source | editbeta]
First, the guests enter the room and get Minion Goggles (3-D glasses). Then the pre-show starts when Gru, the world's #1 supervillain, welcomes guests to his house and explains them that they will be trained as minions, but he also warns us that "danger lurks, at every turn". Just as he was about to begin, however, Agnes, Gru's youngest daughter, appears on-screen, chasing Kyle, Gru's pet dog, despite Gru saying that he's "trying to be evil". Then, Margo and Edith, Gru's other daughters, appear on-screen: the brown-eyed oldest, Margo, appears right next to Gru, asking what he is doing, but Gru explains he's fine. The grey-eyed tomboy, Edith, makes weird faces in front of the camera. Then Agnes appears in front of the camera along with Kyle: the former asks to the audience: "Who's the cutest doggie in the world?", while kissing the latter on the camera at the same time, leaving a smudge, then continues chasing him. Gru, however, attempts to maintain his concentration, but loses it when he sees Margo cleaning Kyle's smudge. All of a sudden, Edith appears with some sock puppet in front of the camera, mimicking the voice of an evil clown. During Edith's imitation, Agnes chases Kyle. Gru and Margo, on the other hand start to grow suspicious of Edith's behaviour. Once Gru realizes that Edith and Agnes are going way too far, he orders them to listen up and just let him explain. Once Edith and Agnes start to heed Gru's orders, Edith explains that she, along with her siblings, are "just trying to keep things interesting". Gru forces the girls to keep themselves quiet and stand still. He introduces his daughters to the audience who, in response, greet the audience. After the introduction for Gru's daughters, Gru forces the public to take a three-hour written exam, but Margo explains him not to do that, since they haven't planned it. Gru, who did not think it's a good idea, unwillingly accepts and begins by explaining about Minion Goggles, the latest invention created by his sidekick, Dr. Nefario. He tested them on Gru's very own Minions to see how they work, and what the guests should be doing during the demonstration. Gru explains to the audience that they have Nefario's guarantee. This means that the Minion Goggles will last five times longer than the person wearing them. He also explains the safety violations for the goggles, like not putting them on until you've got the permission to do that, also that it is prohibited to use the Minion Goggles to hold in anything that looks like food to us. Afterwards, Gru orders the guests to proceed to his lab and also forces them to heed his warns. Margo, Gru's oldest daughter, on the other hand, orders the guests to have fun, but Gru doesn't even smile, so the girls try to spruce him up: Edith by playing with the sock puppet, imitating the voice of an evil clown at the same time, Agnes by saying: "Come on! Smile, Gru!". However, Gru responds in a bored tone with: "I hate smiling". Then a voice tells the guests safety introductions. Next, the doors open to Gru's laboratory with Gru saying what to do while walking in the room; the guests should stay in their row and not put on their Minion Goggles yet until they're told to do so.
Second pre-show room (Gru's laboratory)[edit source | editbeta]
In this pre-show room, just before the ride, Gru, along with some Minions, enter the room and explains the public are there for a reason: henching for the world's #1 supervillain. Gru wants to take time to interview the new recruits one at a time, but explains he's working on something really big today, so he does the interviewing very fast. As Gru is about to begin, however, a Minion, holding a blueprint, interrupts him. Gru excuses the audience to wait a moment so he can read the blueprint the Minion is holding. Gru finds the blueprint good and orders the Minion to tell Doctor Nefario, his assistant, for more dynamite. When the Minion leaves, only to envolve an argument with another throwing a piece of wadded paper at him, Gru explains his plan of turning everyday ordinary human beings into Minions using a kind of device, called the Minion Gun, created by Doctor Nefario. He tested out on some human beings to see how good it functions, transforming them into Minions of all different shapes and sizes. Next, the whole audience is given a routine body scan to make sure there aren't any "human germs" in the lab by using high-density lasers. However, the scan ends up with a warning: Gru gets disappointed when that some of the guests "have not showered in like a week". This causes the Minions to make fun of the public, but they stop laughing and are forced to get back to work when Gru glares at them. Lucky for the audience, Gru is in a bit of a time crunch and warns for the rest of the audience that he will hit them with his "Pistola de pedo" if any are thinking on backing out. Next, Gru asks: "So what will it be? Minions... or farts?". However, at the same moment, Edith interrupts and imitates her father. Gru, realizing his daughters have showed up, explains to the audience to ignore them. All of a sudden, some of the Minions appear holding mega-phones, but are forced to retreat when Gru explains: "Not now!", and shoos them away. Agnes and Margo start to explain to the audience that they shouldn't be scared of Gru by calling him "just a big, bald teddy bear". The confident Gru, however, wants to prove it to his daughters by pressing a button on his computer, which causes the fart gun to go off. Because of the stench, Edith and Agnes are forced to cover their mouths, Margo and the Minions to hold their breaths. They stop doing it when Edith sniffs the room, then picks up the scent, explaining it "smells like bananas". This causes the Minions to start going mad and some lick on window. When this happens, the girls act natural. Gru, on the other hand, gets annoyed with the unexpected antics of his henchmen. Afterwards, Agnes wants to give a present to Gru. He loves to accept it, but tells her to wait, explaining that he's going to be really behind schedule; also, he has to train the public who are on the verge of becoming Minions. Margo eagerly asks Gru if the trio can assist him by training the crowd: Gru thinks for a moment, but responds with: "I do not think so." However, as Edith starts begging, Gru says that the training is very technical. It all becomes clear when Edith explains that her foster father has been reluctant for a while, not wanting to accept his daughters' willings. When Margo and Edith finally explain Gru, who's busy shooing the Minions holding fire-works away, that the Minion training is "not like it's rocket science, or even fourth grade science" and that "a training monkey can do it", he agrees irate, calmly explaining to the audience that he will leave his daughters in charge of the training. Once Edith hears this, she explains to the guests that they "are so doomed". Gru, however, orders the public to not listen to her, despite him saying that Edith might be right for once. He leaves the room and wishes the guests good luck, at exactly the same time Agnes attempts to catch up with him to give him her anniversary gift of the girls adoption. Edith, however, explains to her younger sibling that Gru already left, which made Agnes filled with sorrow, realizing that Gru may have forgotten the anniversary of their adoption, but Margo says her that he won't, also that they got an important job to do: training the audience into Minions for Gru's bidding. Margo's determination to initiate the training causes Edith to be pumped up and say: "Let's do this!". After that, the doors to the ride are opened, the public is let through and Margo instructs to the audience to not put on their minion goggles until they're told to do so by a lab assistant.
Ride[edit source | editbeta]
Once the ride begins, riders see Gru's daughters riding on some kind of hovering UFO-like vehicle. Once Edith orders Kevin the Minion to zap the riders, he pulls a lever which activates the Minion Gun, transforming the riders into Minions. Next, the riders get pushed down a long tube to training by the girls. Margo welcomes the guests to the Minion Training Grounds. As the riders slide down and avoid the water sprayers, Margo instructs the guests: "This where we test your "strength, speed and ability to not die". The audience is also forced to dodge deadly security lasers, a giant cactus, and fly swatters along the way. Once some Minions, holding "Stop" signs, force us to stop running, two Minions are being punched away by a giant boxing glove, then the riders are being punched down by another, along with two Minions, and unexpectedly stop at a giant gap. This is where Gru's daughters want us to test our problem solving and teamwork skills; the guests are forced to create a giant, human hand-like Minion-chain to get across the other side. However, once Edith uses a giant banana as bait, the Minions suddenly get distracted by it, causing the Minion-chain to break apart and the riders to accidentally fall down a long hole to the bomb transportation sector, which is a restricted area; Gru also warns us that it might be dangerous. When the girls are helping us to get out of the sector, the worst happens: bombs start to explode in the bomb transportation room; when the girls get startled by the explosions, Agnes loses her gift and the guests attempt to retrieve it by dodging the bombs, also the giant machinery on the verge of crushing the riders and the girls into pieces, like giant razor sharp blades, with Agnes barely catching it. However, when the two Minions that the guests used to follow start to fall down, Gru arrives, attempting to catch them, but he falls down along with them, only to be nearly saved by grabbing hold to the hovering vehicle that Margo, Edith and Agnes are riding. However, as Agnes is about to give her present to Gru, her adoptive father, he gets unexpectedly knocked off the vehicle by a giant mallet unseen. The girls continue, but Gru gets hit straight at the riders. The riders then suddenly end up, along with Gru's daughters, who, because of an accidental push given by us, get pushed off their vehicle, in another sector. Once in another area, Margo, Edith and Agnes are starting to float and Margo realises that she, along with the others, are in the anti-gravity recycling room. To make matters worse, a giant robot arm rises from under the girls, ending themselves up being surrounded by claws and other hazards, but they hold on to it. When this happens, Margo warns her younger siblings to just remain hold to the giant grooves of the wire to avoid being crushed. However, one of the crushers nearby startles Gru's daughters, causing Agnes to lose her present. Seeing her present for Gru floating away, Agnes is forced to risk her life and lets her go of Margo's foot and attempts to float off to recover Gru's one-year anniversary gift, narrowly avoiding a bomb, despite Margo warning her to not to. However, once Agnes recovers her one-year present by barely avoiding a giant spiked crusher, she starts floating into a giant oscillating fan, when, all of a sudden, Gru arrives, blocking the crushers with an steel beam, then saves Agnes. Seeing each other, Gru and Agnes give themselves a hug when suddenly the smashers start moving again, leaving Gru no choice but to summon all of his strength to stop the giant crusher just in time, saving all of them, including himself, from being smashed. Because of Gru's strength and pressure that he used to both save Agnes and stop the giant crusher, the anti-gravity recycling room's power goes down, and the riders, along with Gru and his daughters, land safely on a crowd of Minions. Once both the Gru residence and the guests land safely on the Minions, Gru opens Agnes' present, revealing a doll replica of himself. Despite that Agnes says "it's a little squashed", Gru finds it "absolutely perfect", and gives his daughters a hug, also giving the trio "a little something": an amusement park-like anniversary party. Once the giant doors open to the party, the riders follow the Gru residence, now riding on a hovering vehicle, avoiding the party decorations all the way to the stage. Once there, Gru congratulates us of being successful in their training. However, a rocket is fired at the Minion Gun, right next to Gru. He protects his daughters, however, the gun breaks and goes off on the riders, causing the effects to be reversed, transforming the guests into humans again. Once this happens, Gru gets disappointed, realizing the riders are "human again", orders someone off-screen for the next troop.
Post-show[edit source | editbeta]
After the ride, the door to some sort of dance party are opened. with the public dancing on Boogie Fever, along with a costumed Minion.[3]
Gift shop[edit source | editbeta]
In May 2012, the ride's gift shop Super Silly Stuff opened,[12] replacing the Nickstuff store. The store sells Despicable Me-related merchandise. The store is themed to the carnival Gru, Margo, Edith, and Agnes visit in the original film.Despicable Me: Minion Mayhem
From Wikipedia, the free encyclopedia

This article may be written from a fan's point of view, rather than a neutral point of view. Please clean it up to conform to a higher standard of quality, and to make it neutral in tone. (June 2013)
Despicable Me: Minion Mayhem
DespicableMeMinionMayhem.jpg
Despicable Me Minion Mayhem building.jpg
The Despicable Me: Minion Mayhem show building
[hide]Universal Studios Florida
Area	Production Central
Status	Operating
Soft opening date	June 9, 2012
Opening date	July 2, 2012-present[1]
Replaced	Jimmy Neutron's Nicktoon Blast (2003–2011)
[hide]Universal Studios Hollywood
Area	Upper Lot
Status	Under construction
Opening date	April 10, 2014
Replaced	T2 3-D: Battle Across Time
General statistics
Attraction type	4-D Simulator ride[2]
Manufacturer	Intamin
Designer	Universal Creative
Illumination Entertainment
Reel FX
Theme	Despicable Me
Riders per vehicle	8
Rows	2
Riders per row	4
Duration	8
Height restriction	40 in (102 cm)
Pre-show host	Gru (Steve Carell)[3]
Ride hosts	Margo (Miranda Cosgrove), Edith (Dana Gaier) , Agnes (Elsie Fisher)[4]
Despicable Me: Minion Mayhem is a simulator ride attraction at Universal Studios Florida and coming on April 10, 2014 to Universal Studios Hollywood. The attraction is based on Universal Studios and Illumination Entertainment's 2010 animated film Despicable Me and employs the use of 3-D HD digital animation. The attraction replaced Jimmy Neutron's Nicktoon Blast in Florida and will be replacing Terminator 2 3D in Hollywood.
Contents  [hide] 
1 History
2 Overview
2.1 Experience
2.1.1 Queue
2.1.2 First pre-show room (Gru's living room)
2.1.3 Second pre-show room (Gru's laboratory)
2.1.4 Ride
2.1.5 Post-show
2.2 Gift shop
3 Accolades
4 See also
5 References
6 External links
History[edit source | editbeta]



Some theming surrounding the ride at Universal Studios Florida
In March 2011, Universal Studios Florida announced that Jimmy Neutron's Nicktoon Blast would be closing to make way for a new attraction due to Nick no longer airing the show mentioned on the ride. The ride began seasonal operations on April 1, 2011, before officially closing on August 18, 2011.[5][6] On April 14, 2011, Universal Orlando Resort began a teaser campaign on their Facebook page where weekly hints were released leading up to the announcement of their upcoming attraction.[7][8] On May 19, 2011, the attraction was officially announced at a live webcast at Universal Orlando Resort. Universal Parks & Resorts also announced a major refurbishment of The Amazing Adventures of Spider-Man at Islands of Adventure on the same day.[2][9]
Construction for the Despicable Me attraction at Universal Studios Florida began in mid-August 2011, with the removal the former Jimmy Neutron ride.[10] After a period of construction spanning several months, the attraction soft opened to the public on June 9, 2012.[11] On July 2, 2012, Despicable Me: Minion Mayhem officially opened to the public.[4] The ride's gift shop, Super Silly Stuff, had opened prior to the ride in May 2012.[12]
On March 11, 2013, Universal Studios Hollywood announced that they would open Despicable Me: Minion Mayhem in 2014.[13] The announcement followed a series of rumours stating the park would replace the recently-closed T2 3-D: Battle Across Time attraction with a Despicable Me attraction.[14][15] A later announcement revealed the surrounding area would be themed as Super Silly Fun Land.[16]
On August 3, 2013, it was announced that Despicable Me: Minion Mayhem's Hollywood attraction would open on April 10, 2014.
Overview[edit source | editbeta]

Universal Orlando Resort announced that the attraction is being designed by their Universal Creative company in association with Illumination Entertainment and Despicable Me film producer Chris Meledandri. The ride is a motion simulator and employs the use of high-definition 3-D Infitec projection systems, and features multiple characters from the film, including Gru, Margo, Edith, Agnes and the Minions.
The attraction at Universal Studios Florida is located in Soundstage 42 in the Production Central area. The soundstage previously housed The Funtastic World of Hanna-Barbera 1990 until 2002 and Jimmy Neutron's Nicktoon Blast from 2003 until 2011.[3] The attraction at Universal Studios Hollywood will be located on the former site of T2 3-D: Battle Across Time on the Upper Lot.[14]
Experience[edit source | editbeta]
Queue[edit source | editbeta]
When people are waiting in line for the ride, they get to learn what a Minion really needs, the profiles of Gru, Dr. Nefario, Margo, Edith, Agnes and the Minions; they also get to see a revision of the original Despicable Me film. The guests are also given a Minion-quiz, to let them test themselves to see if they are fully prepared to be a Minion. The Hollywood version will have details to look more like Gru's house than the one in Florida. The answers in the quiz are always the last options.
First pre-show room (Gru's living room)[edit source | editbeta]
First, the guests enter the room and get Minion Goggles (3-D glasses). Then the pre-show starts when Gru, the world's #1 supervillain, welcomes guests to his house and explains them that they will be trained as minions, but he also warns us that "danger lurks, at every turn". Just as he was about to begin, however, Agnes, Gru's youngest daughter, appears on-screen, chasing Kyle, Gru's pet dog, despite Gru saying that he's "trying to be evil". Then, Margo and Edith, Gru's other daughters, appear on-screen: the brown-eyed oldest, Margo, appears right next to Gru, asking what he is doing, but Gru explains he's fine. The grey-eyed tomboy, Edith, makes weird faces in front of the camera. Then Agnes appears in front of the camera along with Kyle: the former asks to the audience: "Who's the cutest doggie in the world?", while kissing the latter on the camera at the same time, leaving a smudge, then continues chasing him. Gru, however, attempts to maintain his concentration, but loses it when he sees Margo cleaning Kyle's smudge. All of a sudden, Edith appears with some sock puppet in front of the camera, mimicking the voice of an evil clown. During Edith's imitation, Agnes chases Kyle. Gru and Margo, on the other hand start to grow suspicious of Edith's behaviour. Once Gru realizes that Edith and Agnes are going way too far, he orders them to listen up and just let him explain. Once Edith and Agnes start to heed Gru's orders, Edith explains that she, along with her siblings, are "just trying to keep things interesting". Gru forces the girls to keep themselves quiet and stand still. He introduces his daughters to the audience who, in response, greet the audience. After the introduction for Gru's daughters, Gru forces the public to take a three-hour written exam, but Margo explains him not to do that, since they haven't planned it. Gru, who did not think it's a good idea, unwillingly accepts and begins by explaining about Minion Goggles, the latest invention created by his sidekick, Dr. Nefario. He tested them on Gru's very own Minions to see how they work, and what the guests should be doing during the demonstration. Gru explains to the audience that they have Nefario's guarantee. This means that the Minion Goggles will last five times longer than the person wearing them. He also explains the safety violations for the goggles, like not putting them on until you've got the permission to do that, also that it is prohibited to use the Minion Goggles to hold in anything that looks like food to us. Afterwards, Gru orders the guests to proceed to his lab and also forces them to heed his warns. Margo, Gru's oldest daughter, on the other hand, orders the guests to have fun, but Gru doesn't even smile, so the girls try to spruce him up: Edith by playing with the sock puppet, imitating the voice of an evil clown at the same time, Agnes by saying: "Come on! Smile, Gru!". However, Gru responds in a bored tone with: "I hate smiling". Then a voice tells the guests safety introductions. Next, the doors open to Gru's laboratory with Gru saying what to do while walking in the room; the guests should stay in their row and not put on their Minion Goggles yet until they're told to do so.
Second pre-show room (Gru's laboratory)[edit source | editbeta]
In this pre-show room, just before the ride, Gru, along with some Minions, enter the room and explains the public are there for a reason: henching for the world's #1 supervillain. Gru wants to take time to interview the new recruits one at a time, but explains he's working on something really big today, so he does the interviewing very fast. As Gru is about to begin, however, a Minion, holding a blueprint, interrupts him. Gru excuses the audience to wait a moment so he can read the blueprint the Minion is holding. Gru finds the blueprint good and orders the Minion to tell Doctor Nefario, his assistant, for more dynamite. When the Minion leaves, only to envolve an argument with another throwing a piece of wadded paper at him, Gru explains his plan of turning everyday ordinary human beings into Minions using a kind of device, called the Minion Gun, created by Doctor Nefario. He tested out on some human beings to see how good it functions, transforming them into Minions of all different shapes and sizes. Next, the whole audience is given a routine body scan to make sure there aren't any "human germs" in the lab by using high-density lasers. However, the scan ends up with a warning: Gru gets disappointed when that some of the guests "have not showered in like a week". This causes the Minions to make fun of the public, but they stop laughing and are forced to get back to work when Gru glares at them. Lucky for the audience, Gru is in a bit of a time crunch and warns for the rest of the audience that he will hit them with his "Pistola de pedo" if any are thinking on backing out. Next, Gru asks: "So what will it be? Minions... or farts?". However, at the same moment, Edith interrupts and imitates her father. Gru, realizing his daughters have showed up, explains to the audience to ignore them. All of a sudden, some of the Minions appear holding mega-phones, but are forced to retreat when Gru explains: "Not now!", and shoos them away. Agnes and Margo start to explain to the audience that they shouldn't be scared of Gru by calling him "just a big, bald teddy bear". The confident Gru, however, wants to prove it to his daughters by pressing a button on his computer, which causes the fart gun to go off. Because of the stench, Edith and Agnes are forced to cover their mouths, Margo and the Minions to hold their breaths. They stop doing it when Edith sniffs the room, then picks up the scent, explaining it "smells like bananas". This causes the Minions to start going mad and some lick on window. When this happens, the girls act natural. Gru, on the other hand, gets annoyed with the unexpected antics of his henchmen. Afterwards, Agnes wants to give a present to Gru. He loves to accept it, but tells her to wait, explaining that he's going to be really behind schedule; also, he has to train the public who are on the verge of becoming Minions. Margo eagerly asks Gru if the trio can assist him by training the crowd: Gru thinks for a moment, but responds with: "I do not think so." However, as Edith starts begging, Gru says that the training is very technical. It all becomes clear when Edith explains that her foster father has been reluctant for a while, not wanting to accept his daughters' willings. When Margo and Edith finally explain Gru, who's busy shooing the Minions holding fire-works away, that the Minion training is "not like it's rocket science, or even fourth grade science" and that "a training monkey can do it", he agrees irate, calmly explaining to the audience that he will leave his daughters in charge of the training. Once Edith hears this, she explains to the guests that they "are so doomed". Gru, however, orders the public to not listen to her, despite him saying that Edith might be right for once. He leaves the room and wishes the guests good luck, at exactly the same time Agnes attempts to catch up with him to give him her anniversary gift of the girls adoption. Edith, however, explains to her younger sibling that Gru already left, which made Agnes filled with sorrow, realizing that Gru may have forgotten the anniversary of their adoption, but Margo says her that he won't, also that they got an important job to do: training the audience into Minions for Gru's bidding. Margo's determination to initiate the training causes Edith to be pumped up and say: "Let's do this!". After that, the doors to the ride are opened, the public is let through and Margo instructs to the audience to not put on their minion goggles until they're told to do so by a lab assistant.
Ride[edit source | editbeta]
Once the ride begins, riders see Gru's daughters riding on some kind of hovering UFO-like vehicle. Once Edith orders Kevin the Minion to zap the riders, he pulls a lever which activates the Minion Gun, transforming the riders into Minions. Next, the riders get pushed down a long tube to training by the girls. Margo welcomes the guests to the Minion Training Grounds. As the riders slide down and avoid the water sprayers, Margo instructs the guests: "This where we test your "strength, speed and ability to not die". The audience is also forced to dodge deadly security lasers, a giant cactus, and fly swatters along the way. Once some Minions, holding "Stop" signs, force us to stop running, two Minions are being punched away by a giant boxing glove, then the riders are being punched down by another, along with two Minions, and unexpectedly stop at a giant gap. This is where Gru's daughters want us to test our problem solving and teamwork skills; the guests are forced to create a giant, human hand-like Minion-chain to get across the other side. However, once Edith uses a giant banana as bait, the Minions suddenly get distracted by it, causing the Minion-chain to break apart and the riders to accidentally fall down a long hole to the bomb transportation sector, which is a restricted area; Gru also warns us that it might be dangerous. When the girls are helping us to get out of the sector, the worst happens: bombs start to explode in the bomb transportation room; when the girls get startled by the explosions, Agnes loses her gift and the guests attempt to retrieve it by dodging the bombs, also the giant machinery on the verge of crushing the riders and the girls into pieces, like giant razor sharp blades, with Agnes barely catching it. However, when the two Minions that the guests used to follow start to fall down, Gru arrives, attempting to catch them, but he falls down along with them, only to be nearly saved by grabbing hold to the hovering vehicle that Margo, Edith and Agnes are riding. However, as Agnes is about to give her present to Gru, her adoptive father, he gets unexpectedly knocked off the vehicle by a giant mallet unseen. The girls continue, but Gru gets hit straight at the riders. The riders then suddenly end up, along with Gru's daughters, who, because of an accidental push given by us, get pushed off their vehicle, in another sector. Once in another area, Margo, Edith and Agnes are starting to float and Margo realises that she, along with the others, are in the anti-gravity recycling room. To make matters worse, a giant robot arm rises from under the girls, ending themselves up being surrounded by claws and other hazards, but they hold on to it. When this happens, Margo warns her younger siblings to just remain hold to the giant grooves of the wire to avoid being crushed. However, one of the crushers nearby startles Gru's daughters, causing Agnes to lose her present. Seeing her present for Gru floating away, Agnes is forced to risk her life and lets her go of Margo's foot and attempts to float off to recover Gru's one-year anniversary gift, narrowly avoiding a bomb, despite Margo warning her to not to. However, once Agnes recovers her one-year present by barely avoiding a giant spiked crusher, she starts floating into a giant oscillating fan, when, all of a sudden, Gru arrives, blocking the crushers with an steel beam, then saves Agnes. Seeing each other, Gru and Agnes give themselves a hug when suddenly the smashers start moving again, leaving Gru no choice but to summon all of his strength to stop the giant crusher just in time, saving all of them, including himself, from being smashed. Because of Gru's strength and pressure that he used to both save Agnes and stop the giant crusher, the anti-gravity recycling room's power goes down, and the riders, along with Gru and his daughters, land safely on a crowd of Minions. Once both the Gru residence and the guests land safely on the Minions, Gru opens Agnes' present, revealing a doll replica of himself. Despite that Agnes says "it's a little squashed", Gru finds it "absolutely perfect", and gives his daughters a hug, also giving the trio "a little something": an amusement park-like anniversary party. Once the giant doors open to the party, the riders follow the Gru residence, now riding on a hovering vehicle, avoiding the party decorations all the way to the stage. Once there, Gru congratulates us of being successful in their training. However, a rocket is fired at the Minion Gun, right next to Gru. He protects his daughters, however, the gun breaks and goes off on the riders, causing the effects to be reversed, transforming the guests into humans again. Once this happens, Gru gets disappointed, realizing the riders are "human again", orders someone off-screen for the next troop.
Post-show[edit source | editbeta]
After the ride, the door to some sort of dance party are opened. with the public dancing on Boogie Fever, along with a costumed Minion.[3]
Gift shop[edit source | editbeta]
In May 2012, the ride's gift shop Super Silly Stuff opened,[12] replacing the Nickstuff store. The store sells Despicable Me-related merchandise. The store is themed to the carnival Gru, Margo, Edith, and Agnes visit in the original film.Despicable Me: Minion Mayhem
From Wikipedia, the free encyclopedia

This article may be written from a fan's point of view, rather than a neutral point of view. Please clean it up to conform to a higher standard of quality, and to make it neutral in tone. (June 2013)
Despicable Me: Minion Mayhem
DespicableMeMinionMayhem.jpg
Despicable Me Minion Mayhem building.jpg
The Despicable Me: Minion Mayhem show building
[hide]Universal Studios Florida
Area	Production Central
Status	Operating
Soft opening date	June 9, 2012
Opening date	July 2, 2012-present[1]
Replaced	Jimmy Neutron's Nicktoon Blast (2003–2011)
[hide]Universal Studios Hollywood
Area	Upper Lot
Status	Under construction
Opening date	April 10, 2014
Replaced	T2 3-D: Battle Across Time
General statistics
Attraction type	4-D Simulator ride[2]
Manufacturer	Intamin
Designer	Universal Creative
Illumination Entertainment
Reel FX
Theme	Despicable Me
Riders per vehicle	8
Rows	2
Riders per row	4
Duration	8
Height restriction	40 in (102 cm)
Pre-show host	Gru (Steve Carell)[3]
Ride hosts	Margo (Miranda Cosgrove), Edith (Dana Gaier) , Agnes (Elsie Fisher)[4]
Despicable Me: Minion Mayhem is a simulator ride attraction at Universal Studios Florida and coming on April 10, 2014 to Universal Studios Hollywood. The attraction is based on Universal Studios and Illumination Entertainment's 2010 animated film Despicable Me and employs the use of 3-D HD digital animation. The attraction replaced Jimmy Neutron's Nicktoon Blast in Florida and will be replacing Terminator 2 3D in Hollywood.
Contents  [hide] 
1 History
2 Overview
2.1 Experience
2.1.1 Queue
2.1.2 First pre-show room (Gru's living room)
2.1.3 Second pre-show room (Gru's laboratory)
2.1.4 Ride
2.1.5 Post-show
2.2 Gift shop
3 Accolades
4 See also
5 References
6 External links
History[edit source | editbeta]



Some theming surrounding the ride at Universal Studios Florida
In March 2011, Universal Studios Florida announced that Jimmy Neutron's Nicktoon Blast would be closing to make way for a new attraction due to Nick no longer airing the show mentioned on the ride. The ride began seasonal operations on April 1, 2011, before officially closing on August 18, 2011.[5][6] On April 14, 2011, Universal Orlando Resort began a teaser campaign on their Facebook page where weekly hints were released leading up to the announcement of their upcoming attraction.[7][8] On May 19, 2011, the attraction was officially announced at a live webcast at Universal Orlando Resort. Universal Parks & Resorts also announced a major refurbishment of The Amazing Adventures of Spider-Man at Islands of Adventure on the same day.[2][9]
Construction for the Despicable Me attraction at Universal Studios Florida began in mid-August 2011, with the removal the former Jimmy Neutron ride.[10] After a period of construction spanning several months, the attraction soft opened to the public on June 9, 2012.[11] On July 2, 2012, Despicable Me: Minion Mayhem officially opened to the public.[4] The ride's gift shop, Super Silly Stuff, had opened prior to the ride in May 2012.[12]
On March 11, 2013, Universal Studios Hollywood announced that they would open Despicable Me: Minion Mayhem in 2014.[13] The announcement followed a series of rumours stating the park would replace the recently-closed T2 3-D: Battle Across Time attraction with a Despicable Me attraction.[14][15] A later announcement revealed the surrounding area would be themed as Super Silly Fun Land.[16]
On August 3, 2013, it was announced that Despicable Me: Minion Mayhem's Hollywood attraction would open on April 10, 2014.
Overview[edit source | editbeta]

Universal Orlando Resort announced that the attraction is being designed by their Universal Creative company in association with Illumination Entertainment and Despicable Me film producer Chris Meledandri. The ride is a motion simulator and employs the use of high-definition 3-D Infitec projection systems, and features multiple characters from the film, including Gru, Margo, Edith, Agnes and the Minions.
The attraction at Universal Studios Florida is located in Soundstage 42 in the Production Central area. The soundstage previously housed The Funtastic World of Hanna-Barbera 1990 until 2002 and Jimmy Neutron's Nicktoon Blast from 2003 until 2011.[3] The attraction at Universal Studios Hollywood will be located on the former site of T2 3-D: Battle Across Time on the Upper Lot.[14]
Experience[edit source | editbeta]
Queue[edit source | editbeta]
When people are waiting in line for the ride, they get to learn what a Minion really needs, the profiles of Gru, Dr. Nefario, Margo, Edith, Agnes and the Minions; they also get to see a revision of the original Despicable Me film. The guests are also given a Minion-quiz, to let them test themselves to see if they are fully prepared to be a Minion. The Hollywood version will have details to look more like Gru's house than the one in Florida. The answers in the quiz are always the last options.
First pre-show room (Gru's living room)[edit source | editbeta]
First, the guests enter the room and get Minion Goggles (3-D glasses). Then the pre-show starts when Gru, the world's #1 supervillain, welcomes guests to his house and explains them that they will be trained as minions, but he also warns us that "danger lurks, at every turn". Just as he was about to begin, however, Agnes, Gru's youngest daughter, appears on-screen, chasing Kyle, Gru's pet dog, despite Gru saying that he's "trying to be evil". Then, Margo and Edith, Gru's other daughters, appear on-screen: the brown-eyed oldest, Margo, appears right next to Gru, asking what he is doing, but Gru explains he's fine. The grey-eyed tomboy, Edith, makes weird faces in front of the camera. Then Agnes appears in front of the camera along with Kyle: the former asks to the audience: "Who's the cutest doggie in the world?", while kissing the latter on the camera at the same time, leaving a smudge, then continues chasing him. Gru, however, attempts to maintain his concentration, but loses it when he sees Margo cleaning Kyle's smudge. All of a sudden, Edith appears with some sock puppet in front of the camera, mimicking the voice of an evil clown. During Edith's imitation, Agnes chases Kyle. Gru and Margo, on the other hand start to grow suspicious of Edith's behaviour. Once Gru realizes that Edith and Agnes are going way too far, he orders them to listen up and just let him explain. Once Edith and Agnes start to heed Gru's orders, Edith explains that she, along with her siblings, are "just trying to keep things interesting". Gru forces the girls to keep themselves quiet and stand still. He introduces his daughters to the audience who, in response, greet the audience. After the introduction for Gru's daughters, Gru forces the public to take a three-hour written exam, but Margo explains him not to do that, since they haven't planned it. Gru, who did not think it's a good idea, unwillingly accepts and begins by explaining about Minion Goggles, the latest invention created by his sidekick, Dr. Nefario. He tested them on Gru's very own Minions to see how they work, and what the guests should be doing during the demonstration. Gru explains to the audience that they have Nefario's guarantee. This means that the Minion Goggles will last five times longer than the person wearing them. He also explains the safety violations for the goggles, like not putting them on until you've got the permission to do that, also that it is prohibited to use the Minion Goggles to hold in anything that looks like food to us. Afterwards, Gru orders the guests to proceed to his lab and also forces them to heed his warns. Margo, Gru's oldest daughter, on the other hand, orders the guests to have fun, but Gru doesn't even smile, so the girls try to spruce him up: Edith by playing with the sock puppet, imitating the voice of an evil clown at the same time, Agnes by saying: "Come on! Smile, Gru!". However, Gru responds in a bored tone with: "I hate smiling". Then a voice tells the guests safety introductions. Next, the doors open to Gru's laboratory with Gru saying what to do while walking in the room; the guests should stay in their row and not put on their Minion Goggles yet until they're told to do so.
Second pre-show room (Gru's laboratory)[edit source | editbeta]
In this pre-show room, just before the ride, Gru, along with some Minions, enter the room and explains the public are there for a reason: henching for the world's #1 supervillain. Gru wants to take time to interview the new recruits one at a time, but explains he's working on something really big today, so he does the interviewing very fast. As Gru is about to begin, however, a Minion, holding a blueprint, interrupts him. Gru excuses the audience to wait a moment so he can read the blueprint the Minion is holding. Gru finds the blueprint good and orders the Minion to tell Doctor Nefario, his assistant, for more dynamite. When the Minion leaves, only to envolve an argument with another throwing a piece of wadded paper at him, Gru explains his plan of turning everyday ordinary human beings into Minions using a kind of device, called the Minion Gun, created by Doctor Nefario. He tested out on some human beings to see how good it functions, transforming them into Minions of all different shapes and sizes. Next, the whole audience is given a routine body scan to make sure there aren't any "human germs" in the lab by using high-density lasers. However, the scan ends up with a warning: Gru gets disappointed when that some of the guests "have not showered in like a week". This causes the Minions to make fun of the public, but they stop laughing and are forced to get back to work when Gru glares at them. Lucky for the audience, Gru is in a bit of a time crunch and warns for the rest of the audience that he will hit them with his "Pistola de pedo" if any are thinking on backing out. Next, Gru asks: "So what will it be? Minions... or farts?". However, at the same moment, Edith interrupts and imitates her father. Gru, realizing his daughters have showed up, explains to the audience to ignore them. All of a sudden, some of the Minions appear holding mega-phones, but are forced to retreat when Gru explains: "Not now!", and shoos them away. Agnes and Margo start to explain to the audience that they shouldn't be scared of Gru by calling him "just a big, bald teddy bear". The confident Gru, however, wants to prove it to his daughters by pressing a button on his computer, which causes the fart gun to go off. Because of the stench, Edith and Agnes are forced to cover their mouths, Margo and the Minions to hold their breaths. They stop doing it when Edith sniffs the room, then picks up the scent, explaining it "smells like bananas". This causes the Minions to start going mad and some lick on window. When this happens, the girls act natural. Gru, on the other hand, gets annoyed with the unexpected antics of his henchmen. Afterwards, Agnes wants to give a present to Gru. He loves to accept it, but tells her to wait, explaining that he's going to be really behind schedule; also, he has to train the public who are on the verge of becoming Minions. Margo eagerly asks Gru if the trio can assist him by training the crowd: Gru thinks for a moment, but responds with: "I do not think so." However, as Edith starts begging, Gru says that the training is very technical. It all becomes clear when Edith explains that her foster father has been reluctant for a while, not wanting to accept his daughters' willings. When Margo and Edith finally explain Gru, who's busy shooing the Minions holding fire-works away, that the Minion training is "not like it's rocket science, or even fourth grade science" and that "a training monkey can do it", he agrees irate, calmly explaining to the audience that he will leave his daughters in charge of the training. Once Edith hears this, she explains to the guests that they "are so doomed". Gru, however, orders the public to not listen to her, despite him saying that Edith might be right for once. He leaves the room and wishes the guests good luck, at exactly the same time Agnes attempts to catch up with him to give him her anniversary gift of the girls adoption. Edith, however, explains to her younger sibling that Gru already left, which made Agnes filled with sorrow, realizing that Gru may have forgotten the anniversary of their adoption, but Margo says her that he won't, also that they got an important job to do: training the audience into Minions for Gru's bidding. Margo's determination to initiate the training causes Edith to be pumped up and say: "Let's do this!". After that, the doors to the ride are opened, the public is let through and Margo instructs to the audience to not put on their minion goggles until they're told to do so by a lab assistant.
Ride[edit source | editbeta]
Once the ride begins, riders see Gru's daughters riding on some kind of hovering UFO-like vehicle. Once Edith orders Kevin the Minion to zap the riders, he pulls a lever which activates the Minion Gun, transforming the riders into Minions. Next, the riders get pushed down a long tube to training by the girls. Margo welcomes the guests to the Minion Training Grounds. As the riders slide down and avoid the water sprayers, Margo instructs the guests: "This where we test your "strength, speed and ability to not die". The audience is also forced to dodge deadly security lasers, a giant cactus, and fly swatters along the way. Once some Minions, holding "Stop" signs, force us to stop running, two Minions are being punched away by a giant boxing glove, then the riders are being punched down by another, along with two Minions, and unexpectedly stop at a giant gap. This is where Gru's daughters want us to test our problem solving and teamwork skills; the guests are forced to create a giant, human hand-like Minion-chain to get across the other side. However, once Edith uses a giant banana as bait, the Minions suddenly get distracted by it, causing the Minion-chain to break apart and the riders to accidentally fall down a long hole to the bomb transportation sector, which is a restricted area; Gru also warns us that it might be dangerous. When the girls are helping us to get out of the sector, the worst happens: bombs start to explode in the bomb transportation room; when the girls get startled by the explosions, Agnes loses her gift and the guests attempt to retrieve it by dodging the bombs, also the giant machinery on the verge of crushing the riders and the girls into pieces, like giant razor sharp blades, with Agnes barely catching it. However, when the two Minions that the guests used to follow start to fall down, Gru arrives, attempting to catch them, but he falls down along with them, only to be nearly saved by grabbing hold to the hovering vehicle that Margo, Edith and Agnes are riding. However, as Agnes is about to give her present to Gru, her adoptive father, he gets unexpectedly knocked off the vehicle by a giant mallet unseen. The girls continue, but Gru gets hit straight at the riders. The riders then suddenly end up, along with Gru's daughters, who, because of an accidental push given by us, get pushed off their vehicle, in another sector. Once in another area, Margo, Edith and Agnes are starting to float and Margo realises that she, along with the others, are in the anti-gravity recycling room. To make matters worse, a giant robot arm rises from under the girls, ending themselves up being surrounded by claws and other hazards, but they hold on to it. When this happens, Margo warns her younger siblings to just remain hold to the giant grooves of the wire to avoid being crushed. However, one of the crushers nearby startles Gru's daughters, causing Agnes to lose her present. Seeing her present for Gru floating away, Agnes is forced to risk her life and lets her go of Margo's foot and attempts to float off to recover Gru's one-year anniversary gift, narrowly avoiding a bomb, despite Margo warning her to not to. However, once Agnes recovers her one-year present by barely avoiding a giant spiked crusher, she starts floating into a giant oscillating fan, when, all of a sudden, Gru arrives, blocking the crushers with an steel beam, then saves Agnes. Seeing each other, Gru and Agnes give themselves a hug when suddenly the smashers start moving again, leaving Gru no choice but to summon all of his strength to stop the giant crusher just in time, saving all of them, including himself, from being smashed. Because of Gru's strength and pressure that he used to both save Agnes and stop the giant crusher, the anti-gravity recycling room's power goes down, and the riders, along with Gru and his daughters, land safely on a crowd of Minions. Once both the Gru residence and the guests land safely on the Minions, Gru opens Agnes' present, revealing a doll replica of himself. Despite that Agnes says "it's a little squashed", Gru finds it "absolutely perfect", and gives his daughters a hug, also giving the trio "a little something": an amusement park-like anniversary party. Once the giant doors open to the party, the riders follow the Gru residence, now riding on a hovering vehicle, avoiding the party decorations all the way to the stage. Once there, Gru congratulates us of being successful in their training. However, a rocket is fired at the Minion Gun, right next to Gru. He protects his daughters, however, the gun breaks and goes off on the riders, causing the effects to be reversed, transforming the guests into humans again. Once this happens, Gru gets disappointed, realizing the riders are "human again", orders someone off-screen for the next troop.
Post-show[edit source | editbeta]
After the ride, the door to some sort of dance party are opened. with the public dancing on Boogie Fever, along with a costumed Minion.[3]
Gift shop[edit source | editbeta]
In May 2012, the ride's gift shop Super Silly Stuff opened,[12] replacing the Nickstuff store. The store sells Despicable Me-related merchandise. The store is themed to the carnival Gru, Margo, Edith, and Agnes visit in the original film.Despicable Me: Minion Mayhem
From Wikipedia, the free encyclopedia

This article may be written from a fan's point of view, rather than a neutral point of view. Please clean it up to conform to a higher standard of quality, and to make it neutral in tone. (June 2013)
Despicable Me: Minion Mayhem
DespicableMeMinionMayhem.jpg
Despicable Me Minion Mayhem building.jpg
The Despicable Me: Minion Mayhem show building
[hide]Universal Studios Florida
Area	Production Central
Status	Operating
Soft opening date	June 9, 2012
Opening date	July 2, 2012-present[1]
Replaced	Jimmy Neutron's Nicktoon Blast (2003–2011)
[hide]Universal Studios Hollywood
Area	Upper Lot
Status	Under construction
Opening date	April 10, 2014
Replaced	T2 3-D: Battle Across Time
General statistics
Attraction type	4-D Simulator ride[2]
Manufacturer	Intamin
Designer	Universal Creative
Illumination Entertainment
Reel FX
Theme	Despicable Me
Riders per vehicle	8
Rows	2
Riders per row	4
Duration	8
Height restriction	40 in (102 cm)
Pre-show host	Gru (Steve Carell)[3]
Ride hosts	Margo (Miranda Cosgrove), Edith (Dana Gaier) , Agnes (Elsie Fisher)[4]
Despicable Me: Minion Mayhem is a simulator ride attraction at Universal Studios Florida and coming on April 10, 2014 to Universal Studios Hollywood. The attraction is based on Universal Studios and Illumination Entertainment's 2010 animated film Despicable Me and employs the use of 3-D HD digital animation. The attraction replaced Jimmy Neutron's Nicktoon Blast in Florida and will be replacing Terminator 2 3D in Hollywood.
Contents  [hide] 
1 History
2 Overview
2.1 Experience
2.1.1 Queue
2.1.2 First pre-show room (Gru's living room)
2.1.3 Second pre-show room (Gru's laboratory)
2.1.4 Ride
2.1.5 Post-show
2.2 Gift shop
3 Accolades
4 See also
5 References
6 External links
History[edit source | editbeta]



Some theming surrounding the ride at Universal Studios Florida
In March 2011, Universal Studios Florida announced that Jimmy Neutron's Nicktoon Blast would be closing to make way for a new attraction due to Nick no longer airing the show mentioned on the ride. The ride began seasonal operations on April 1, 2011, before officially closing on August 18, 2011.[5][6] On April 14, 2011, Universal Orlando Resort began a teaser campaign on their Facebook page where weekly hints were released leading up to the announcement of their upcoming attraction.[7][8] On May 19, 2011, the attraction was officially announced at a live webcast at Universal Orlando Resort. Universal Parks & Resorts also announced a major refurbishment of The Amazing Adventures of Spider-Man at Islands of Adventure on the same day.[2][9]
Construction for the Despicable Me attraction at Universal Studios Florida began in mid-August 2011, with the removal the former Jimmy Neutron ride.[10] After a period of construction spanning several months, the attraction soft opened to the public on June 9, 2012.[11] On July 2, 2012, Despicable Me: Minion Mayhem officially opened to the public.[4] The ride's gift shop, Super Silly Stuff, had opened prior to the ride in May 2012.[12]
On March 11, 2013, Universal Studios Hollywood announced that they would open Despicable Me: Minion Mayhem in 2014.[13] The announcement followed a series of rumours stating the park would replace the recently-closed T2 3-D: Battle Across Time attraction with a Despicable Me attraction.[14][15] A later announcement revealed the surrounding area would be themed as Super Silly Fun Land.[16]
On August 3, 2013, it was announced that Despicable Me: Minion Mayhem's Hollywood attraction would open on April 10, 2014.
Overview[edit source | editbeta]

Universal Orlando Resort announced that the attraction is being designed by their Universal Creative company in association with Illumination Entertainment and Despicable Me film producer Chris Meledandri. The ride is a motion simulator and employs the use of high-definition 3-D Infitec projection systems, and features multiple characters from the film, including Gru, Margo, Edith, Agnes and the Minions.
The attraction at Universal Studios Florida is located in Soundstage 42 in the Production Central area. The soundstage previously housed The Funtastic World of Hanna-Barbera 1990 until 2002 and Jimmy Neutron's Nicktoon Blast from 2003 until 2011.[3] The attraction at Universal Studios Hollywood will be located on the former site of T2 3-D: Battle Across Time on the Upper Lot.[14]
Experience[edit source | editbeta]
Queue[edit source | editbeta]
When people are waiting in line for the ride, they get to learn what a Minion really needs, the profiles of Gru, Dr. Nefario, Margo, Edith, Agnes and the Minions; they also get to see a revision of the original Despicable Me film. The guests are also given a Minion-quiz, to let them test themselves to see if they are fully prepared to be a Minion. The Hollywood version will have details to look more like Gru's house than the one in Florida. The answers in the quiz are always the last options.
First pre-show room (Gru's living room)[edit source | editbeta]
First, the guests enter the room and get Minion Goggles (3-D glasses). Then the pre-show starts when Gru, the world's #1 supervillain, welcomes guests to his house and explains them that they will be trained as minions, but he also warns us that "danger lurks, at every turn". Just as he was about to begin, however, Agnes, Gru's youngest daughter, appears on-screen, chasing Kyle, Gru's pet dog, despite Gru saying that he's "trying to be evil". Then, Margo and Edith, Gru's other daughters, appear on-screen: the brown-eyed oldest, Margo, appears right next to Gru, asking what he is doing, but Gru explains he's fine. The grey-eyed tomboy, Edith, makes weird faces in front of the camera. Then Agnes appears in front of the camera along with Kyle: the former asks to the audience: "Who's the cutest doggie in the world?", while kissing the latter on the camera at the same time, leaving a smudge, then continues chasing him. Gru, however, attempts to maintain his concentration, but loses it when he sees Margo cleaning Kyle's smudge. All of a sudden, Edith appears with some sock puppet in front of the camera, mimicking the voice of an evil clown. During Edith's imitation, Agnes chases Kyle. Gru and Margo, on the other hand start to grow suspicious of Edith's behaviour. Once Gru realizes that Edith and Agnes are going way too far, he orders them to listen up and just let him explain. Once Edith and Agnes start to heed Gru's orders, Edith explains that she, along with her siblings, are "just trying to keep things interesting". Gru forces the girls to keep themselves quiet and stand still. He introduces his daughters to the audience who, in response, greet the audience. After the introduction for Gru's daughters, Gru forces the public to take a three-hour written exam, but Margo explains him not to do that, since they haven't planned it. Gru, who did not think it's a good idea, unwillingly accepts and begins by explaining about Minion Goggles, the latest invention created by his sidekick, Dr. Nefario. He tested them on Gru's very own Minions to see how they work, and what the guests should be doing during the demonstration. Gru explains to the audience that they have Nefario's guarantee. This means that the Minion Goggles will last five times longer than the person wearing them. He also explains the safety violations for the goggles, like not putting them on until you've got the permission to do that, also that it is prohibited to use the Minion Goggles to hold in anything that looks like food to us. Afterwards, Gru orders the guests to proceed to his lab and also forces them to heed his warns. Margo, Gru's oldest daughter, on the other hand, orders the guests to have fun, but Gru doesn't even smile, so the girls try to spruce him up: Edith by playing with the sock puppet, imitating the voice of an evil clown at the same time, Agnes by saying: "Come on! Smile, Gru!". However, Gru responds in a bored tone with: "I hate smiling". Then a voice tells the guests safety introductions. Next, the doors open to Gru's laboratory with Gru saying what to do while walking in the room; the guests should stay in their row and not put on their Minion Goggles yet until they're told to do so.
Second pre-show room (Gru's laboratory)[edit source | editbeta]
In this pre-show room, just before the ride, Gru, along with some Minions, enter the room and explains the public are there for a reason: henching for the world's #1 supervillain. Gru wants to take time to interview the new recruits one at a time, but explains he's working on something really big today, so he does the interviewing very fast. As Gru is about to begin, however, a Minion, holding a blueprint, interrupts him. Gru excuses the audience to wait a moment so he can read the blueprint the Minion is holding. Gru finds the blueprint good and orders the Minion to tell Doctor Nefario, his assistant, for more dynamite. When the Minion leaves, only to envolve an argument with another throwing a piece of wadded paper at him, Gru explains his plan of turning everyday ordinary human beings into Minions using a kind of device, called the Minion Gun, created by Doctor Nefario. He tested out on some human beings to see how good it functions, transforming them into Minions of all different shapes and sizes. Next, the whole audience is given a routine body scan to make sure there aren't any "human germs" in the lab by using high-density lasers. However, the scan ends up with a warning: Gru gets disappointed when that some of the guests "have not showered in like a week". This causes the Minions to make fun of the public, but they stop laughing and are forced to get back to work when Gru glares at them. Lucky for the audience, Gru is in a bit of a time crunch and warns for the rest of the audience that he will hit them with his "Pistola de pedo" if any are thinking on backing out. Next, Gru asks: "So what will it be? Minions... or farts?". However, at the same moment, Edith interrupts and imitates her father. Gru, realizing his daughters have showed up, explains to the audience to ignore them. All of a sudden, some of the Minions appear holding mega-phones, but are forced to retreat when Gru explains: "Not now!", and shoos them away. Agnes and Margo start to explain to the audience that they shouldn't be scared of Gru by calling him "just a big, bald teddy bear". The confident Gru, however, wants to prove it to his daughters by pressing a button on his computer, which causes the fart gun to go off. Because of the stench, Edith and Agnes are forced to cover their mouths, Margo and the Minions to hold their breaths. They stop doing it when Edith sniffs the room, then picks up the scent, explaining it "smells like bananas". This causes the Minions to start going mad and some lick on window. When this happens, the girls act natural. Gru, on the other hand, gets annoyed with the unexpected antics of his henchmen. Afterwards, Agnes wants to give a present to Gru. He loves to accept it, but tells her to wait, explaining that he's going to be really behind schedule; also, he has to train the public who are on the verge of becoming Minions. Margo eagerly asks Gru if the trio can assist him by training the crowd: Gru thinks for a moment, but responds with: "I do not think so." However, as Edith starts begging, Gru says that the training is very technical. It all becomes clear when Edith explains that her foster father has been reluctant for a while, not wanting to accept his daughters' willings. When Margo and Edith finally explain Gru, who's busy shooing the Minions holding fire-works away, that the Minion training is "not like it's rocket science, or even fourth grade science" and that "a training monkey can do it", he agrees irate, calmly explaining to the audience that he will leave his daughters in charge of the training. Once Edith hears this, she explains to the guests that they "are so doomed". Gru, however, orders the public to not listen to her, despite him saying that Edith might be right for once. He leaves the room and wishes the guests good luck, at exactly the same time Agnes attempts to catch up with him to give him her anniversary gift of the girls adoption. Edith, however, explains to her younger sibling that Gru already left, which made Agnes filled with sorrow, realizing that Gru may have forgotten the anniversary of their adoption, but Margo says her that he won't, also that they got an important job to do: training the audience into Minions for Gru's bidding. Margo's determination to initiate the training causes Edith to be pumped up and say: "Let's do this!". After that, the doors to the ride are opened, the public is let through and Margo instructs to the audience to not put on their minion goggles until they're told to do so by a lab assistant.
Ride[edit source | editbeta]
Once the ride begins, riders see Gru's daughters riding on some kind of hovering UFO-like vehicle. Once Edith orders Kevin the Minion to zap the riders, he pulls a lever which activates the Minion Gun, transforming the riders into Minions. Next, the riders get pushed down a long tube to training by the girls. Margo welcomes the guests to the Minion Training Grounds. As the riders slide down and avoid the water sprayers, Margo instructs the guests: "This where we test your "strength, speed and ability to not die". The audience is also forced to dodge deadly security lasers, a giant cactus, and fly swatters along the way. Once some Minions, holding "Stop" signs, force us to stop running, two Minions are being punched away by a giant boxing glove, then the riders are being punched down by another, along with two Minions, and unexpectedly stop at a giant gap. This is where Gru's daughters want us to test our problem solving and teamwork skills; the guests are forced to create a giant, human hand-like Minion-chain to get across the other side. However, once Edith uses a giant banana as bait, the Minions suddenly get distracted by it, causing the Minion-chain to break apart and the riders to accidentally fall down a long hole to the bomb transportation sector, which is a restricted area; Gru also warns us that it might be dangerous. When the girls are helping us to get out of the sector, the worst happens: bombs start to explode in the bomb transportation room; when the girls get startled by the explosions, Agnes loses her gift and the guests attempt to retrieve it by dodging the bombs, also the giant machinery on the verge of crushing the riders and the girls into pieces, like giant razor sharp blades, with Agnes barely catching it. However, when the two Minions that the guests used to follow start to fall down, Gru arrives, attempting to catch them, but he falls down along with them, only to be nearly saved by grabbing hold to the hovering vehicle that Margo, Edith and Agnes are riding. However, as Agnes is about to give her present to Gru, her adoptive father, he gets unexpectedly knocked off the vehicle by a giant mallet unseen. The girls continue, but Gru gets hit straight at the riders. The riders then suddenly end up, along with Gru's daughters, who, because of an accidental push given by us, get pushed off their vehicle, in another sector. Once in another area, Margo, Edith and Agnes are starting to float and Margo realises that she, along with the others, are in the anti-gravity recycling room. To make matters worse, a giant robot arm rises from under the girls, ending themselves up being surrounded by claws and other hazards, but they hold on to it. When this happens, Margo warns her younger siblings to just remain hold to the giant grooves of the wire to avoid being crushed. However, one of the crushers nearby startles Gru's daughters, causing Agnes to lose her present. Seeing her present for Gru floating away, Agnes is forced to risk her life and lets her go of Margo's foot and attempts to float off to recover Gru's one-year anniversary gift, narrowly avoiding a bomb, despite Margo warning her to not to. However, once Agnes recovers her one-year present by barely avoiding a giant spiked crusher, she starts floating into a giant oscillating fan, when, all of a sudden, Gru arrives, blocking the crushers with an steel beam, then saves Agnes. Seeing each other, Gru and Agnes give themselves a hug when suddenly the smashers start moving again, leaving Gru no choice but to summon all of his strength to stop the giant crusher just in time, saving all of them, including himself, from being smashed. Because of Gru's strength and pressure that he used to both save Agnes and stop the giant crusher, the anti-gravity recycling room's power goes down, and the riders, along with Gru and his daughters, land safely on a crowd of Minions. Once both the Gru residence and the guests land safely on the Minions, Gru opens Agnes' present, revealing a doll replica of himself. Despite that Agnes says "it's a little squashed", Gru finds it "absolutely perfect", and gives his daughters a hug, also giving the trio "a little something": an amusement park-like anniversary party. Once the giant doors open to the party, the riders follow the Gru residence, now riding on a hovering vehicle, avoiding the party decorations all the way to the stage. Once there, Gru congratulates us of being successful in their training. However, a rocket is fired at the Minion Gun, right next to Gru. He protects his daughters, however, the gun breaks and goes off on the riders, causing the effects to be reversed, transforming the guests into humans again. Once this happens, Gru gets disappointed, realizing the riders are "human again", orders someone off-screen for the next troop.
Post-show[edit source | editbeta]
After the ride, the door to some sort of dance party are opened. with the public dancing on Boogie Fever, along with a costumed Minion.[3]
Gift shop[edit source | editbeta]
In May 2012, the ride's gift shop Super Silly Stuff opened,[12] replacing the Nickstuff store. The store sells Despicable Me-related merchandise. The store is themed to the carnival Gru, Margo, Edith, and Agnes visit in the original film.Despicable Me: Minion Mayhem
From Wikipedia, the free encyclopedia

This article may be written from a fan's point of view, rather than a neutral point of view. Please clean it up to conform to a higher standard of quality, and to make it neutral in tone. (June 2013)
Despicable Me: Minion Mayhem
DespicableMeMinionMayhem.jpg
Despicable Me Minion Mayhem building.jpg
The Despicable Me: Minion Mayhem show building
[hide]Universal Studios Florida
Area	Production Central
Status	Operating
Soft opening date	June 9, 2012
Opening date	July 2, 2012-present[1]
Replaced	Jimmy Neutron's Nicktoon Blast (2003–2011)
[hide]Universal Studios Hollywood
Area	Upper Lot
Status	Under construction
Opening date	April 10, 2014
Replaced	T2 3-D: Battle Across Time
General statistics
Attraction type	4-D Simulator ride[2]
Manufacturer	Intamin
Designer	Universal Creative
Illumination Entertainment
Reel FX
Theme	Despicable Me
Riders per vehicle	8
Rows	2
Riders per row	4
Duration	8
Height restriction	40 in (102 cm)
Pre-show host	Gru (Steve Carell)[3]
Ride hosts	Margo (Miranda Cosgrove), Edith (Dana Gaier) , Agnes (Elsie Fisher)[4]
Despicable Me: Minion Mayhem is a simulator ride attraction at Universal Studios Florida and coming on April 10, 2014 to Universal Studios Hollywood. The attraction is based on Universal Studios and Illumination Entertainment's 2010 animated film Despicable Me and employs the use of 3-D HD digital animation. The attraction replaced Jimmy Neutron's Nicktoon Blast in Florida and will be replacing Terminator 2 3D in Hollywood.
Contents  [hide] 
1 History
2 Overview
2.1 Experience
2.1.1 Queue
2.1.2 First pre-show room (Gru's living room)
2.1.3 Second pre-show room (Gru's laboratory)
2.1.4 Ride
2.1.5 Post-show
2.2 Gift shop
3 Accolades
4 See also
5 References
6 External links
History[edit source | editbeta]



Some theming surrounding the ride at Universal Studios Florida
In March 2011, Universal Studios Florida announced that Jimmy Neutron's Nicktoon Blast would be closing to make way for a new attraction due to Nick no longer airing the show mentioned on the ride. The ride began seasonal operations on April 1, 2011, before officially closing on August 18, 2011.[5][6] On April 14, 2011, Universal Orlando Resort began a teaser campaign on their Facebook page where weekly hints were released leading up to the announcement of their upcoming attraction.[7][8] On May 19, 2011, the attraction was officially announced at a live webcast at Universal Orlando Resort. Universal Parks & Resorts also announced a major refurbishment of The Amazing Adventures of Spider-Man at Islands of Adventure on the same day.[2][9]
Construction for the Despicable Me attraction at Universal Studios Florida began in mid-August 2011, with the removal the former Jimmy Neutron ride.[10] After a period of construction spanning several months, the attraction soft opened to the public on June 9, 2012.[11] On July 2, 2012, Despicable Me: Minion Mayhem officially opened to the public.[4] The ride's gift shop, Super Silly Stuff, had opened prior to the ride in May 2012.[12]
On March 11, 2013, Universal Studios Hollywood announced that they would open Despicable Me: Minion Mayhem in 2014.[13] The announcement followed a series of rumours stating the park would replace the recently-closed T2 3-D: Battle Across Time attraction with a Despicable Me attraction.[14][15] A later announcement revealed the surrounding area would be themed as Super Silly Fun Land.[16]
On August 3, 2013, it was announced that Despicable Me: Minion Mayhem's Hollywood attraction would open on April 10, 2014.
Overview[edit source | editbeta]

Universal Orlando Resort announced that the attraction is being designed by their Universal Creative company in association with Illumination Entertainment and Despicable Me film producer Chris Meledandri. The ride is a motion simulator and employs the use of high-definition 3-D Infitec projection systems, and features multiple characters from the film, including Gru, Margo, Edith, Agnes and the Minions.
The attraction at Universal Studios Florida is located in Soundstage 42 in the Production Central area. The soundstage previously housed The Funtastic World of Hanna-Barbera 1990 until 2002 and Jimmy Neutron's Nicktoon Blast from 2003 until 2011.[3] The attraction at Universal Studios Hollywood will be located on the former site of T2 3-D: Battle Across Time on the Upper Lot.[14]
Experience[edit source | editbeta]
Queue[edit source | editbeta]
When people are waiting in line for the ride, they get to learn what a Minion really needs, the profiles of Gru, Dr. Nefario, Margo, Edith, Agnes and the Minions; they also get to see a revision of the original Despicable Me film. The guests are also given a Minion-quiz, to let them test themselves to see if they are fully prepared to be a Minion. The Hollywood version will have details to look more like Gru's house than the one in Florida. The answers in the quiz are always the last options.
First pre-show room (Gru's living room)[edit source | editbeta]
First, the guests enter the room and get Minion Goggles (3-D glasses). Then the pre-show starts when Gru, the world's #1 supervillain, welcomes guests to his house and explains them that they will be trained as minions, but he also warns us that "danger lurks, at every turn". Just as he was about to begin, however, Agnes, Gru's youngest daughter, appears on-screen, chasing Kyle, Gru's pet dog, despite Gru saying that he's "trying to be evil". Then, Margo and Edith, Gru's other daughters, appear on-screen: the brown-eyed oldest, Margo, appears right next to Gru, asking what he is doing, but Gru explains he's fine. The grey-eyed tomboy, Edith, makes weird faces in front of the camera. Then Agnes appears in front of the camera along with Kyle: the former asks to the audience: "Who's the cutest doggie in the world?", while kissing the latter on the camera at the same time, leaving a smudge, then continues chasing him. Gru, however, attempts to maintain his concentration, but loses it when he sees Margo cleaning Kyle's smudge. All of a sudden, Edith appears with some sock puppet in front of the camera, mimicking the voice of an evil clown. During Edith's imitation, Agnes chases Kyle. Gru and Margo, on the other hand start to grow suspicious of Edith's behaviour. Once Gru realizes that Edith and Agnes are going way too far, he orders them to listen up and just let him explain. Once Edith and Agnes start to heed Gru's orders, Edith explains that she, along with her siblings, are "just trying to keep things interesting". Gru forces the girls to keep themselves quiet and stand still. He introduces his daughters to the audience who, in response, greet the audience. After the introduction for Gru's daughters, Gru forces the public to take a three-hour written exam, but Margo explains him not to do that, since they haven't planned it. Gru, who did not think it's a good idea, unwillingly accepts and begins by explaining about Minion Goggles, the latest invention created by his sidekick, Dr. Nefario. He tested them on Gru's very own Minions to see how they work, and what the guests should be doing during the demonstration. Gru explains to the audience that they have Nefario's guarantee. This means that the Minion Goggles will last five times longer than the person wearing them. He also explains the safety violations for the goggles, like not putting them on until you've got the permission to do that, also that it is prohibited to use the Minion Goggles to hold in anything that looks like food to us. Afterwards, Gru orders the guests to proceed to his lab and also forces them to heed his warns. Margo, Gru's oldest daughter, on the other hand, orders the guests to have fun, but Gru doesn't even smile, so the girls try to spruce him up: Edith by playing with the sock puppet, imitating the voice of an evil clown at the same time, Agnes by saying: "Come on! Smile, Gru!". However, Gru responds in a bored tone with: "I hate smiling". Then a voice tells the guests safety introductions. Next, the doors open to Gru's laboratory with Gru saying what to do while walking in the room; the guests should stay in their row and not put on their Minion Goggles yet until they're told to do so.
Second pre-show room (Gru's laboratory)[edit source | editbeta]
In this pre-show room, just before the ride, Gru, along with some Minions, enter the room and explains the public are there for a reason: henching for the world's #1 supervillain. Gru wants to take time to interview the new recruits one at a time, but explains he's working on something really big today, so he does the interviewing very fast. As Gru is about to begin, however, a Minion, holding a blueprint, interrupts him. Gru excuses the audience to wait a moment so he can read the blueprint the Minion is holding. Gru finds the blueprint good and orders the Minion to tell Doctor Nefario, his assistant, for more dynamite. When the Minion leaves, only to envolve an argument with another throwing a piece of wadded paper at him, Gru explains his plan of turning everyday ordinary human beings into Minions using a kind of device, called the Minion Gun, created by Doctor Nefario. He tested out on some human beings to see how good it functions, transforming them into Minions of all different shapes and sizes. Next, the whole audience is given a routine body scan to make sure there aren't any "human germs" in the lab by using high-density lasers. However, the scan ends up with a warning: Gru gets disappointed when that some of the guests "have not showered in like a week". This causes the Minions to make fun of the public, but they stop laughing and are forced to get back to work when Gru glares at them. Lucky for the audience, Gru is in a bit of a time crunch and warns for the rest of the audience that he will hit them with his "Pistola de pedo" if any are thinking on backing out. Next, Gru asks: "So what will it be? Minions... or farts?". However, at the same moment, Edith interrupts and imitates her father. Gru, realizing his daughters have showed up, explains to the audience to ignore them. All of a sudden, some of the Minions appear holding mega-phones, but are forced to retreat when Gru explains: "Not now!", and shoos them away. Agnes and Margo start to explain to the audience that they shouldn't be scared of Gru by calling him "just a big, bald teddy bear". The confident Gru, however, wants to prove it to his daughters by pressing a button on his computer, which causes the fart gun to go off. Because of the stench, Edith and Agnes are forced to cover their mouths, Margo and the Minions to hold their breaths. They stop doing it when Edith sniffs the room, then picks up the scent, explaining it "smells like bananas". This causes the Minions to start going mad and some lick on window. When this happens, the girls act natural. Gru, on the other hand, gets annoyed with the unexpected antics of his henchmen. Afterwards, Agnes wants to give a present to Gru. He loves to accept it, but tells her to wait, explaining that he's going to be really behind schedule; also, he has to train the public who are on the verge of becoming Minions. Margo eagerly asks Gru if the trio can assist him by training the crowd: Gru thinks for a moment, but responds with: "I do not think so." However, as Edith starts begging, Gru says that the training is very technical. It all becomes clear when Edith explains that her foster father has been reluctant for a while, not wanting to accept his daughters' willings. When Margo and Edith finally explain Gru, who's busy shooing the Minions holding fire-works away, that the Minion training is "not like it's rocket science, or even fourth grade science" and that "a training monkey can do it", he agrees irate, calmly explaining to the audience that he will leave his daughters in charge of the training. Once Edith hears this, she explains to the guests that they "are so doomed". Gru, however, orders the public to not listen to her, despite him saying that Edith might be right for once. He leaves the room and wishes the guests good luck, at exactly the same time Agnes attempts to catch up with him to give him her anniversary gift of the girls adoption. Edith, however, explains to her younger sibling that Gru already left, which made Agnes filled with sorrow, realizing that Gru may have forgotten the anniversary of their adoption, but Margo says her that he won't, also that they got an important job to do: training the audience into Minions for Gru's bidding. Margo's determination to initiate the training causes Edith to be pumped up and say: "Let's do this!". After that, the doors to the ride are opened, the public is let through and Margo instructs to the audience to not put on their minion goggles until they're told to do so by a lab assistant.
Ride[edit source | editbeta]
Once the ride begins, riders see Gru's daughters riding on some kind of hovering UFO-like vehicle. Once Edith orders Kevin the Minion to zap the riders, he pulls a lever which activates the Minion Gun, transforming the riders into Minions. Next, the riders get pushed down a long tube to training by the girls. Margo welcomes the guests to the Minion Training Grounds. As the riders slide down and avoid the water sprayers, Margo instructs the guests: "This where we test your "strength, speed and ability to not die". The audience is also forced to dodge deadly security lasers, a giant cactus, and fly swatters along the way. Once some Minions, holding "Stop" signs, force us to stop running, two Minions are being punched away by a giant boxing glove, then the riders are being punched down by another, along with two Minions, and unexpectedly stop at a giant gap. This is where Gru's daughters want us to test our problem solving and teamwork skills; the guests are forced to create a giant, human hand-like Minion-chain to get across the other side. However, once Edith uses a giant banana as bait, the Minions suddenly get distracted by it, causing the Minion-chain to break apart and the riders to accidentally fall down a long hole to the bomb transportation sector, which is a restricted area; Gru also warns us that it might be dangerous. When the girls are helping us to get out of the sector, the worst happens: bombs start to explode in the bomb transportation room; when the girls get startled by the explosions, Agnes loses her gift and the guests attempt to retrieve it by dodging the bombs, also the giant machinery on the verge of crushing the riders and the girls into pieces, like giant razor sharp blades, with Agnes barely catching it. However, when the two Minions that the guests used to follow start to fall down, Gru arrives, attempting to catch them, but he falls down along with them, only to be nearly saved by grabbing hold to the hovering vehicle that Margo, Edith and Agnes are riding. However, as Agnes is about to give her present to Gru, her adoptive father, he gets unexpectedly knocked off the vehicle by a giant mallet unseen. The girls continue, but Gru gets hit straight at the riders. The riders then suddenly end up, along with Gru's daughters, who, because of an accidental push given by us, get pushed off their vehicle, in another sector. Once in another area, Margo, Edith and Agnes are starting to float and Margo realises that she, along with the others, are in the anti-gravity recycling room. To make matters worse, a giant robot arm rises from under the girls, ending themselves up being surrounded by claws and other hazards, but they hold on to it. When this happens, Margo warns her younger siblings to just remain hold to the giant grooves of the wire to avoid being crushed. However, one of the crushers nearby startles Gru's daughters, causing Agnes to lose her present. Seeing her present for Gru floating away, Agnes is forced to risk her life and lets her go of Margo's foot and attempts to float off to recover Gru's one-year anniversary gift, narrowly avoiding a bomb, despite Margo warning her to not to. However, once Agnes recovers her one-year present by barely avoiding a giant spiked crusher, she starts floating into a giant oscillating fan, when, all of a sudden, Gru arrives, blocking the crushers with an steel beam, then saves Agnes. Seeing each other, Gru and Agnes give themselves a hug when suddenly the smashers start moving again, leaving Gru no choice but to summon all of his strength to stop the giant crusher just in time, saving all of them, including himself, from being smashed. Because of Gru's strength and pressure that he used to both save Agnes and stop the giant crusher, the anti-gravity recycling room's power goes down, and the riders, along with Gru and his daughters, land safely on a crowd of Minions. Once both the Gru residence and the guests land safely on the Minions, Gru opens Agnes' present, revealing a doll replica of himself. Despite that Agnes says "it's a little squashed", Gru finds it "absolutely perfect", and gives his daughters a hug, also giving the trio "a little something": an amusement park-like anniversary party. Once the giant doors open to the party, the riders follow the Gru residence, now riding on a hovering vehicle, avoiding the party decorations all the way to the stage. Once there, Gru congratulates us of being successful in their training. However, a rocket is fired at the Minion Gun, right next to Gru. He protects his daughters, however, the gun breaks and goes off on the riders, causing the effects to be reversed, transforming the guests into humans again. Once this happens, Gru gets disappointed, realizing the riders are "human again", orders someone off-screen for the next troop.
Post-show[edit source | editbeta]
After the ride, the door to some sort of dance party are opened. with the public dancing on Boogie Fever, along with a costumed Minion.[3]
Gift shop[edit source | editbeta]
In May 2012, the ride's gift shop Super Silly Stuff opened,[12] replacing the Nickstuff store. The store sells Despicable Me-related merchandise. The store is themed to the carnival Gru, Margo, Edith, and Agnes visit in the original film.Despicable Me: Minion Mayhem
From Wikipedia, the free encyclopedia

This article may be written from a fan's point of view, rather than a neutral point of view. Please clean it up to conform to a higher standard of quality, and to make it neutral in tone. (June 2013)
Despicable Me: Minion Mayhem
DespicableMeMinionMayhem.jpg
Despicable Me Minion Mayhem building.jpg
The Despicable Me: Minion Mayhem show building
[hide]Universal Studios Florida
Area	Production Central
Status	Operating
Soft opening date	June 9, 2012
Opening date	July 2, 2012-present[1]
Replaced	Jimmy Neutron's Nicktoon Blast (2003–2011)
[hide]Universal Studios Hollywood
Area	Upper Lot
Status	Under construction
Opening date	April 10, 2014
Replaced	T2 3-D: Battle Across Time
General statistics
Attraction type	4-D Simulator ride[2]
Manufacturer	Intamin
Designer	Universal Creative
Illumination Entertainment
Reel FX
Theme	Despicable Me
Riders per vehicle	8
Rows	2
Riders per row	4
Duration	8
Height restriction	40 in (102 cm)
Pre-show host	Gru (Steve Carell)[3]
Ride hosts	Margo (Miranda Cosgrove), Edith (Dana Gaier) , Agnes (Elsie Fisher)[4]
Despicable Me: Minion Mayhem is a simulator ride attraction at Universal Studios Florida and coming on April 10, 2014 to Universal Studios Hollywood. The attraction is based on Universal Studios and Illumination Entertainment's 2010 animated film Despicable Me and employs the use of 3-D HD digital animation. The attraction replaced Jimmy Neutron's Nicktoon Blast in Florida and will be replacing Terminator 2 3D in Hollywood.
Contents  [hide] 
1 History
2 Overview
2.1 Experience
2.1.1 Queue
2.1.2 First pre-show room (Gru's living room)
2.1.3 Second pre-show room (Gru's laboratory)
2.1.4 Ride
2.1.5 Post-show
2.2 Gift shop
3 Accolades
4 See also
5 References
6 External links
History[edit source | editbeta]



Some theming surrounding the ride at Universal Studios Florida
In March 2011, Universal Studios Florida announced that Jimmy Neutron's Nicktoon Blast would be closing to make way for a new attraction due to Nick no longer airing the show mentioned on the ride. The ride began seasonal operations on April 1, 2011, before officially closing on August 18, 2011.[5][6] On April 14, 2011, Universal Orlando Resort began a teaser campaign on their Facebook page where weekly hints were released leading up to the announcement of their upcoming attraction.[7][8] On May 19, 2011, the attraction was officially announced at a live webcast at Universal Orlando Resort. Universal Parks & Resorts also announced a major refurbishment of The Amazing Adventures of Spider-Man at Islands of Adventure on the same day.[2][9]
Construction for the Despicable Me attraction at Universal Studios Florida began in mid-August 2011, with the removal the former Jimmy Neutron ride.[10] After a period of construction spanning several months, the attraction soft opened to the public on June 9, 2012.[11] On July 2, 2012, Despicable Me: Minion Mayhem officially opened to the public.[4] The ride's gift shop, Super Silly Stuff, had opened prior to the ride in May 2012.[12]
On March 11, 2013, Universal Studios Hollywood announced that they would open Despicable Me: Minion Mayhem in 2014.[13] The announcement followed a series of rumours stating the park would replace the recently-closed T2 3-D: Battle Across Time attraction with a Despicable Me attraction.[14][15] A later announcement revealed the surrounding area would be themed as Super Silly Fun Land.[16]
On August 3, 2013, it was announced that Despicable Me: Minion Mayhem's Hollywood attraction would open on April 10, 2014.
Overview[edit source | editbeta]

Universal Orlando Resort announced that the attraction is being designed by their Universal Creative company in association with Illumination Entertainment and Despicable Me film producer Chris Meledandri. The ride is a motion simulator and employs the use of high-definition 3-D Infitec projection systems, and features multiple characters from the film, including Gru, Margo, Edith, Agnes and the Minions.
The attraction at Universal Studios Florida is located in Soundstage 42 in the Production Central area. The soundstage previously housed The Funtastic World of Hanna-Barbera 1990 until 2002 and Jimmy Neutron's Nicktoon Blast from 2003 until 2011.[3] The attraction at Universal Studios Hollywood will be located on the former site of T2 3-D: Battle Across Time on the Upper Lot.[14]
Experience[edit source | editbeta]
Queue[edit source | editbeta]
When people are waiting in line for the ride, they get to learn what a Minion really needs, the profiles of Gru, Dr. Nefario, Margo, Edith, Agnes and the Minions; they also get to see a revision of the original Despicable Me film. The guests are also given a Minion-quiz, to let them test themselves to see if they are fully prepared to be a Minion. The Hollywood version will have details to look more like Gru's house than the one in Florida. The answers in the quiz are always the last options.
First pre-show room (Gru's living room)[edit source | editbeta]
First, the guests enter the room and get Minion Goggles (3-D glasses). Then the pre-show starts when Gru, the world's #1 supervillain, welcomes guests to his house and explains them that they will be trained as minions, but he also warns us that "danger lurks, at every turn". Just as he was about to begin, however, Agnes, Gru's youngest daughter, appears on-screen, chasing Kyle, Gru's pet dog, despite Gru saying that he's "trying to be evil". Then, Margo and Edith, Gru's other daughters, appear on-screen: the brown-eyed oldest, Margo, appears right next to Gru, asking what he is doing, but Gru explains he's fine. The grey-eyed tomboy, Edith, makes weird faces in front of the camera. Then Agnes appears in front of the camera along with Kyle: the former asks to the audience: "Who's the cutest doggie in the world?", while kissing the latter on the camera at the same time, leaving a smudge, then continues chasing him. Gru, however, attempts to maintain his concentration, but loses it when he sees Margo cleaning Kyle's smudge. All of a sudden, Edith appears with some sock puppet in front of the camera, mimicking the voice of an evil clown. During Edith's imitation, Agnes chases Kyle. Gru and Margo, on the other hand start to grow suspicious of Edith's behaviour. Once Gru realizes that Edith and Agnes are going way too far, he orders them to listen up and just let him explain. Once Edith and Agnes start to heed Gru's orders, Edith explains that she, along with her siblings, are "just trying to keep things interesting". Gru forces the girls to keep themselves quiet and stand still. He introduces his daughters to the audience who, in response, greet the audience. After the introduction for Gru's daughters, Gru forces the public to take a three-hour written exam, but Margo explains him not to do that, since they haven't planned it. Gru, who did not think it's a good idea, unwillingly accepts and begins by explaining about Minion Goggles, the latest invention created by his sidekick, Dr. Nefario. He tested them on Gru's very own Minions to see how they work, and what the guests should be doing during the demonstration. Gru explains to the audience that they have Nefario's guarantee. This means that the Minion Goggles will last five times longer than the person wearing them. He also explains the safety violations for the goggles, like not putting them on until you've got the permission to do that, also that it is prohibited to use the Minion Goggles to hold in anything that looks like food to us. Afterwards, Gru orders the guests to proceed to his lab and also forces them to heed his warns. Margo, Gru's oldest daughter, on the other hand, orders the guests to have fun, but Gru doesn't even smile, so the girls try to spruce him up: Edith by playing with the sock puppet, imitating the voice of an evil clown at the same time, Agnes by saying: "Come on! Smile, Gru!". However, Gru responds in a bored tone with: "I hate smiling". Then a voice tells the guests safety introductions. Next, the doors open to Gru's laboratory with Gru saying what to do while walking in the room; the guests should stay in their row and not put on their Minion Goggles yet until they're told to do so.
Second pre-show room (Gru's laboratory)[edit source | editbeta]
In this pre-show room, just before the ride, Gru, along with some Minions, enter the room and explains the public are there for a reason: henching for the world's #1 supervillain. Gru wants to take time to interview the new recruits one at a time, but explains he's working on something really big today, so he does the interviewing very fast. As Gru is about to begin, however, a Minion, holding a blueprint, interrupts him. Gru excuses the audience to wait a moment so he can read the blueprint the Minion is holding. Gru finds the blueprint good and orders the Minion to tell Doctor Nefario, his assistant, for more dynamite. When the Minion leaves, only to envolve an argument with another throwing a piece of wadded paper at him, Gru explains his plan of turning everyday ordinary human beings into Minions using a kind of device, called the Minion Gun, created by Doctor Nefario. He tested out on some human beings to see how good it functions, transforming them into Minions of all different shapes and sizes. Next, the whole audience is given a routine body scan to make sure there aren't any "human germs" in the lab by using high-density lasers. However, the scan ends up with a warning: Gru gets disappointed when that some of the guests "have not showered in like a week". This causes the Minions to make fun of the public, but they stop laughing and are forced to get back to work when Gru glares at them. Lucky for the audience, Gru is in a bit of a time crunch and warns for the rest of the audience that he will hit them with his "Pistola de pedo" if any are thinking on backing out. Next, Gru asks: "So what will it be? Minions... or farts?". However, at the same moment, Edith interrupts and imitates her father. Gru, realizing his daughters have showed up, explains to the audience to ignore them. All of a sudden, some of the Minions appear holding mega-phones, but are forced to retreat when Gru explains: "Not now!", and shoos them away. Agnes and Margo start to explain to the audience that they shouldn't be scared of Gru by calling him "just a big, bald teddy bear". The confident Gru, however, wants to prove it to his daughters by pressing a button on his computer, which causes the fart gun to go off. Because of the stench, Edith and Agnes are forced to cover their mouths, Margo and the Minions to hold their breaths. They stop doing it when Edith sniffs the room, then picks up the scent, explaining it "smells like bananas". This causes the Minions to start going mad and some lick on window. When this happens, the girls act natural. Gru, on the other hand, gets annoyed with the unexpected antics of his henchmen. Afterwards, Agnes wants to give a present to Gru. He loves to accept it, but tells her to wait, explaining that he's going to be really behind schedule; also, he has to train the public who are on the verge of becoming Minions. Margo eagerly asks Gru if the trio can assist him by training the crowd: Gru thinks for a moment, but responds with: "I do not think so." However, as Edith starts begging, Gru says that the training is very technical. It all becomes clear when Edith explains that her foster father has been reluctant for a while, not wanting to accept his daughters' willings. When Margo and Edith finally explain Gru, who's busy shooing the Minions holding fire-works away, that the Minion training is "not like it's rocket science, or even fourth grade science" and that "a training monkey can do it", he agrees irate, calmly explaining to the audience that he will leave his daughters in charge of the training. Once Edith hears this, she explains to the guests that they "are so doomed". Gru, however, orders the public to not listen to her, despite him saying that Edith might be right for once. He leaves the room and wishes the guests good luck, at exactly the same time Agnes attempts to catch up with him to give him her anniversary gift of the girls adoption. Edith, however, explains to her younger sibling that Gru already left, which made Agnes filled with sorrow, realizing that Gru may have forgotten the anniversary of their adoption, but Margo says her that he won't, also that they got an important job to do: training the audience into Minions for Gru's bidding. Margo's determination to initiate the training causes Edith to be pumped up and say: "Let's do this!". After that, the doors to the ride are opened, the public is let through and Margo instructs to the audience to not put on their minion goggles until they're told to do so by a lab assistant.
Ride[edit source | editbeta]
Once the ride begins, riders see Gru's daughters riding on some kind of hovering UFO-like vehicle. Once Edith orders Kevin the Minion to zap the riders, he pulls a lever which activates the Minion Gun, transforming the riders into Minions. Next, the riders get pushed down a long tube to training by the girls. Margo welcomes the guests to the Minion Training Grounds. As the riders slide down and avoid the water sprayers, Margo instructs the guests: "This where we test your "strength, speed and ability to not die". The audience is also forced to dodge deadly security lasers, a giant cactus, and fly swatters along the way. Once some Minions, holding "Stop" signs, force us to stop running, two Minions are being punched away by a giant boxing glove, then the riders are being punched down by another, along with two Minions, and unexpectedly stop at a giant gap. This is where Gru's daughters want us to test our problem solving and teamwork skills; the guests are forced to create a giant, human hand-like Minion-chain to get across the other side. However, once Edith uses a giant banana as bait, the Minions suddenly get distracted by it, causing the Minion-chain to break apart and the riders to accidentally fall down a long hole to the bomb transportation sector, which is a restricted area; Gru also warns us that it might be dangerous. When the girls are helping us to get out of the sector, the worst happens: bombs start to explode in the bomb transportation room; when the girls get startled by the explosions, Agnes loses her gift and the guests attempt to retrieve it by dodging the bombs, also the giant machinery on the verge of crushing the riders and the girls into pieces, like giant razor sharp blades, with Agnes barely catching it. However, when the two Minions that the guests used to follow start to fall down, Gru arrives, attempting to catch them, but he falls down along with them, only to be nearly saved by grabbing hold to the hovering vehicle that Margo, Edith and Agnes are riding. However, as Agnes is about to give her present to Gru, her adoptive father, he gets unexpectedly knocked off the vehicle by a giant mallet unseen. The girls continue, but Gru gets hit straight at the riders. The riders then suddenly end up, along with Gru's daughters, who, because of an accidental push given by us, get pushed off their vehicle, in another sector. Once in another area, Margo, Edith and Agnes are starting to float and Margo realises that she, along with the others, are in the anti-gravity recycling room. To make matters worse, a giant robot arm rises from under the girls, ending themselves up being surrounded by claws and other hazards, but they hold on to it. When this happens, Margo warns her younger siblings to just remain hold to the giant grooves of the wire to avoid being crushed. However, one of the crushers nearby startles Gru's daughters, causing Agnes to lose her present. Seeing her present for Gru floating away, Agnes is forced to risk her life and lets her go of Margo's foot and attempts to float off to recover Gru's one-year anniversary gift, narrowly avoiding a bomb, despite Margo warning her to not to. However, once Agnes recovers her one-year present by barely avoiding a giant spiked crusher, she starts floating into a giant oscillating fan, when, all of a sudden, Gru arrives, blocking the crushers with an steel beam, then saves Agnes. Seeing each other, Gru and Agnes give themselves a hug when suddenly the smashers start moving again, leaving Gru no choice but to summon all of his strength to stop the giant crusher just in time, saving all of them, including himself, from being smashed. Because of Gru's strength and pressure that he used to both save Agnes and stop the giant crusher, the anti-gravity recycling room's power goes down, and the riders, along with Gru and his daughters, land safely on a crowd of Minions. Once both the Gru residence and the guests land safely on the Minions, Gru opens Agnes' present, revealing a doll replica of himself. Despite that Agnes says "it's a little squashed", Gru finds it "absolutely perfect", and gives his daughters a hug, also giving the trio "a little something": an amusement park-like anniversary party. Once the giant doors open to the party, the riders follow the Gru residence, now riding on a hovering vehicle, avoiding the party decorations all the way to the stage. Once there, Gru congratulates us of being successful in their training. However, a rocket is fired at the Minion Gun, right next to Gru. He protects his daughters, however, the gun breaks and goes off on the riders, causing the effects to be reversed, transforming the guests into humans again. Once this happens, Gru gets disappointed, realizing the riders are "human again", orders someone off-screen for the next troop.
Post-show[edit source | editbeta]
After the ride, the door to some sort of dance party are opened. with the public dancing on Boogie Fever, along with a costumed Minion.[3]
Gift shop[edit source | editbeta]
In May 2012, the ride's gift shop Super Silly Stuff opened,[12] replacing the Nickstuff store. The store sells Despicable Me-related merchandise. The store is themed to the carnival Gru, Margo, Edith, and Agnes visit in the original film.Despicable Me: Minion Mayhem
From Wikipedia, the free encyclopedia

This article may be written from a fan's point of view, rather than a neutral point of view. Please clean it up to conform to a higher standard of quality, and to make it neutral in tone. (June 2013)
Despicable Me: Minion Mayhem
DespicableMeMinionMayhem.jpg
Despicable Me Minion Mayhem building.jpg
The Despicable Me: Minion Mayhem show building
[hide]Universal Studios Florida
Area	Production Central
Status	Operating
Soft opening date	June 9, 2012
Opening date	July 2, 2012-present[1]
Replaced	Jimmy Neutron's Nicktoon Blast (2003–2011)
[hide]Universal Studios Hollywood
Area	Upper Lot
Status	Under construction
Opening date	April 10, 2014
Replaced	T2 3-D: Battle Across Time
General statistics
Attraction type	4-D Simulator ride[2]
Manufacturer	Intamin
Designer	Universal Creative
Illumination Entertainment
Reel FX
Theme	Despicable Me
Riders per vehicle	8
Rows	2
Riders per row	4
Duration	8
Height restriction	40 in (102 cm)
Pre-show host	Gru (Steve Carell)[3]
Ride hosts	Margo (Miranda Cosgrove), Edith (Dana Gaier) , Agnes (Elsie Fisher)[4]
Despicable Me: Minion Mayhem is a simulator ride attraction at Universal Studios Florida and coming on April 10, 2014 to Universal Studios Hollywood. The attraction is based on Universal Studios and Illumination Entertainment's 2010 animated film Despicable Me and employs the use of 3-D HD digital animation. The attraction replaced Jimmy Neutron's Nicktoon Blast in Florida and will be replacing Terminator 2 3D in Hollywood.
Contents  [hide] 
1 History
2 Overview
2.1 Experience
2.1.1 Queue
2.1.2 First pre-show room (Gru's living room)
2.1.3 Second pre-show room (Gru's laboratory)
2.1.4 Ride
2.1.5 Post-show
2.2 Gift shop
3 Accolades
4 See also
5 References
6 External links
History[edit source | editbeta]



Some theming surrounding the ride at Universal Studios Florida
In March 2011, Universal Studios Florida announced that Jimmy Neutron's Nicktoon Blast would be closing to make way for a new attraction due to Nick no longer airing the show mentioned on the ride. The ride began seasonal operations on April 1, 2011, before officially closing on August 18, 2011.[5][6] On April 14, 2011, Universal Orlando Resort began a teaser campaign on their Facebook page where weekly hints were released leading up to the announcement of their upcoming attraction.[7][8] On May 19, 2011, the attraction was officially announced at a live webcast at Universal Orlando Resort. Universal Parks & Resorts also announced a major refurbishment of The Amazing Adventures of Spider-Man at Islands of Adventure on the same day.[2][9]
Construction for the Despicable Me attraction at Universal Studios Florida began in mid-August 2011, with the removal the former Jimmy Neutron ride.[10] After a period of construction spanning several months, the attraction soft opened to the public on June 9, 2012.[11] On July 2, 2012, Despicable Me: Minion Mayhem officially opened to the public.[4] The ride's gift shop, Super Silly Stuff, had opened prior to the ride in May 2012.[12]
On March 11, 2013, Universal Studios Hollywood announced that they would open Despicable Me: Minion Mayhem in 2014.[13] The announcement followed a series of rumours stating the park would replace the recently-closed T2 3-D: Battle Across Time attraction with a Despicable Me attraction.[14][15] A later announcement revealed the surrounding area would be themed as Super Silly Fun Land.[16]
On August 3, 2013, it was announced that Despicable Me: Minion Mayhem's Hollywood attraction would open on April 10, 2014.
Overview[edit source | editbeta]

Universal Orlando Resort announced that the attraction is being designed by their Universal Creative company in association with Illumination Entertainment and Despicable Me film producer Chris Meledandri. The ride is a motion simulator and employs the use of high-definition 3-D Infitec projection systems, and features multiple characters from the film, including Gru, Margo, Edith, Agnes and the Minions.
The attraction at Universal Studios Florida is located in Soundstage 42 in the Production Central area. The soundstage previously housed The Funtastic World of Hanna-Barbera 1990 until 2002 and Jimmy Neutron's Nicktoon Blast from 2003 until 2011.[3] The attraction at Universal Studios Hollywood will be located on the former site of T2 3-D: Battle Across Time on the Upper Lot.[14]
Experience[edit source | editbeta]
Queue[edit source | editbeta]
When people are waiting in line for the ride, they get to learn what a Minion really needs, the profiles of Gru, Dr. Nefario, Margo, Edith, Agnes and the Minions; they also get to see a revision of the original Despicable Me film. The guests are also given a Minion-quiz, to let them test themselves to see if they are fully prepared to be a Minion. The Hollywood version will have details to look more like Gru's house than the one in Florida. The answers in the quiz are always the last options.
First pre-show room (Gru's living room)[edit source | editbeta]
First, the guests enter the room and get Minion Goggles (3-D glasses). Then the pre-show starts when Gru, the world's #1 supervillain, welcomes guests to his house and explains them that they will be trained as minions, but he also warns us that "danger lurks, at every turn". Just as he was about to begin, however, Agnes, Gru's youngest daughter, appears on-screen, chasing Kyle, Gru's pet dog, despite Gru saying that he's "trying to be evil". Then, Margo and Edith, Gru's other daughters, appear on-screen: the brown-eyed oldest, Margo, appears right next to Gru, asking what he is doing, but Gru explains he's fine. The grey-eyed tomboy, Edith, makes weird faces in front of the camera. Then Agnes appears in front of the camera along with Kyle: the former asks to the audience: "Who's the cutest doggie in the world?", while kissing the latter on the camera at the same time, leaving a smudge, then continues chasing him. Gru, however, attempts to maintain his concentration, but loses it when he sees Margo cleaning Kyle's smudge. All of a sudden, Edith appears with some sock puppet in front of the camera, mimicking the voice of an evil clown. During Edith's imitation, Agnes chases Kyle. Gru and Margo, on the other hand start to grow suspicious of Edith's behaviour. Once Gru realizes that Edith and Agnes are going way too far, he orders them to listen up and just let him explain. Once Edith and Agnes start to heed Gru's orders, Edith explains that she, along with her siblings, are "just trying to keep things interesting". Gru forces the girls to keep themselves quiet and stand still. He introduces his daughters to the audience who, in response, greet the audience. After the introduction for Gru's daughters, Gru forces the public to take a three-hour written exam, but Margo explains him not to do that, since they haven't planned it. Gru, who did not think it's a good idea, unwillingly accepts and begins by explaining about Minion Goggles, the latest invention created by his sidekick, Dr. Nefario. He tested them on Gru's very own Minions to see how they work, and what the guests should be doing during the demonstration. Gru explains to the audience that they have Nefario's guarantee. This means that the Minion Goggles will last five times longer than the person wearing them. He also explains the safety violations for the goggles, like not putting them on until you've got the permission to do that, also that it is prohibited to use the Minion Goggles to hold in anything that looks like food to us. Afterwards, Gru orders the guests to proceed to his lab and also forces them to heed his warns. Margo, Gru's oldest daughter, on the other hand, orders the guests to have fun, but Gru doesn't even smile, so the girls try to spruce him up: Edith by playing with the sock puppet, imitating the voice of an evil clown at the same time, Agnes by saying: "Come on! Smile, Gru!". However, Gru responds in a bored tone with: "I hate smiling". Then a voice tells the guests safety introductions. Next, the doors open to Gru's laboratory with Gru saying what to do while walking in the room; the guests should stay in their row and not put on their Minion Goggles yet until they're told to do so.
Second pre-show room (Gru's laboratory)[edit source | editbeta]
In this pre-show room, just before the ride, Gru, along with some Minions, enter the room and explains the public are there for a reason: henching for the world's #1 supervillain. Gru wants to take time to interview the new recruits one at a time, but explains he's working on something really big today, so he does the interviewing very fast. As Gru is about to begin, however, a Minion, holding a blueprint, interrupts him. Gru excuses the audience to wait a moment so he can read the blueprint the Minion is holding. Gru finds the blueprint good and orders the Minion to tell Doctor Nefario, his assistant, for more dynamite. When the Minion leaves, only to envolve an argument with another throwing a piece of wadded paper at him, Gru explains his plan of turning everyday ordinary human beings into Minions using a kind of device, called the Minion Gun, created by Doctor Nefario. He tested out on some human beings to see how good it functions, transforming them into Minions of all different shapes and sizes. Next, the whole audience is given a routine body scan to make sure there aren't any "human germs" in the lab by using high-density lasers. However, the scan ends up with a warning: Gru gets disappointed when that some of the guests "have not showered in like a week". This causes the Minions to make fun of the public, but they stop laughing and are forced to get back to work when Gru glares at them. Lucky for the audience, Gru is in a bit of a time crunch and warns for the rest of the audience that he will hit them with his "Pistola de pedo" if any are thinking on backing out. Next, Gru asks: "So what will it be? Minions... or farts?". However, at the same moment, Edith interrupts and imitates her father. Gru, realizing his daughters have showed up, explains to the audience to ignore them. All of a sudden, some of the Minions appear holding mega-phones, but are forced to retreat when Gru explains: "Not now!", and shoos them away. Agnes and Margo start to explain to the audience that they shouldn't be scared of Gru by calling him "just a big, bald teddy bear". The confident Gru, however, wants to prove it to his daughters by pressing a button on his computer, which causes the fart gun to go off. Because of the stench, Edith and Agnes are forced to cover their mouths, Margo and the Minions to hold their breaths. They stop doing it when Edith sniffs the room, then picks up the scent, explaining it "smells like bananas". This causes the Minions to start going mad and some lick on window. When this happens, the girls act natural. Gru, on the other hand, gets annoyed with the unexpected antics of his henchmen. Afterwards, Agnes wants to give a present to Gru. He loves to accept it, but tells her to wait, explaining that he's going to be really behind schedule; also, he has to train the public who are on the verge of becoming Minions. Margo eagerly asks Gru if the trio can assist him by training the crowd: Gru thinks for a moment, but responds with: "I do not think so." However, as Edith starts begging, Gru says that the training is very technical. It all becomes clear when Edith explains that her foster father has been reluctant for a while, not wanting to accept his daughters' willings. When Margo and Edith finally explain Gru, who's busy shooing the Minions holding fire-works away, that the Minion training is "not like it's rocket science, or even fourth grade science" and that "a training monkey can do it", he agrees irate, calmly explaining to the audience that he will leave his daughters in charge of the training. Once Edith hears this, she explains to the guests that they "are so doomed". Gru, however, orders the public to not listen to her, despite him saying that Edith might be right for once. He leaves the room and wishes the guests good luck, at exactly the same time Agnes attempts to catch up with him to give him her anniversary gift of the girls adoption. Edith, however, explains to her younger sibling that Gru already left, which made Agnes filled with sorrow, realizing that Gru may have forgotten the anniversary of their adoption, but Margo says her that he won't, also that they got an important job to do: training the audience into Minions for Gru's bidding. Margo's determination to initiate the training causes Edith to be pumped up and say: "Let's do this!". After that, the doors to the ride are opened, the public is let through and Margo instructs to the audience to not put on their minion goggles until they're told to do so by a lab assistant.
Ride[edit source | editbeta]
Once the ride begins, riders see Gru's daughters riding on some kind of hovering UFO-like vehicle. Once Edith orders Kevin the Minion to zap the riders, he pulls a lever which activates the Minion Gun, transforming the riders into Minions. Next, the riders get pushed down a long tube to training by the girls. Margo welcomes the guests to the Minion Training Grounds. As the riders slide down and avoid the water sprayers, Margo instructs the guests: "This where we test your "strength, speed and ability to not die". The audience is also forced to dodge deadly security lasers, a giant cactus, and fly swatters along the way. Once some Minions, holding "Stop" signs, force us to stop running, two Minions are being punched away by a giant boxing glove, then the riders are being punched down by another, along with two Minions, and unexpectedly stop at a giant gap. This is where Gru's daughters want us to test our problem solving and teamwork skills; the guests are forced to create a giant, human hand-like Minion-chain to get across the other side. However, once Edith uses a giant banana as bait, the Minions suddenly get distracted by it, causing the Minion-chain to break apart and the riders to accidentally fall down a long hole to the bomb transportation sector, which is a restricted area; Gru also warns us that it might be dangerous. When the girls are helping us to get out of the sector, the worst happens: bombs start to explode in the bomb transportation room; when the girls get startled by the explosions, Agnes loses her gift and the guests attempt to retrieve it by dodging the bombs, also the giant machinery on the verge of crushing the riders and the girls into pieces, like giant razor sharp blades, with Agnes barely catching it. However, when the two Minions that the guests used to follow start to fall down, Gru arrives, attempting to catch them, but he falls down along with them, only to be nearly saved by grabbing hold to the hovering vehicle that Margo, Edith and Agnes are riding. However, as Agnes is about to give her present to Gru, her adoptive father, he gets unexpectedly knocked off the vehicle by a giant mallet unseen. The girls continue, but Gru gets hit straight at the riders. The riders then suddenly end up, along with Gru's daughters, who, because of an accidental push given by us, get pushed off their vehicle, in another sector. Once in another area, Margo, Edith and Agnes are starting to float and Margo realises that she, along with the others, are in the anti-gravity recycling room. To make matters worse, a giant robot arm rises from under the girls, ending themselves up being surrounded by claws and other hazards, but they hold on to it. When this happens, Margo warns her younger siblings to just remain hold to the giant grooves of the wire to avoid being crushed. However, one of the crushers nearby startles Gru's daughters, causing Agnes to lose her present. Seeing her present for Gru floating away, Agnes is forced to risk her life and lets her go of Margo's foot and attempts to float off to recover Gru's one-year anniversary gift, narrowly avoiding a bomb, despite Margo warning her to not to. However, once Agnes recovers her one-year present by barely avoiding a giant spiked crusher, she starts floating into a giant oscillating fan, when, all of a sudden, Gru arrives, blocking the crushers with an steel beam, then saves Agnes. Seeing each other, Gru and Agnes give themselves a hug when suddenly the smashers start moving again, leaving Gru no choice but to summon all of his strength to stop the giant crusher just in time, saving all of them, including himself, from being smashed. Because of Gru's strength and pressure that he used to both save Agnes and stop the giant crusher, the anti-gravity recycling room's power goes down, and the riders, along with Gru and his daughters, land safely on a crowd of Minions. Once both the Gru residence and the guests land safely on the Minions, Gru opens Agnes' present, revealing a doll replica of himself. Despite that Agnes says "it's a little squashed", Gru finds it "absolutely perfect", and gives his daughters a hug, also giving the trio "a little something": an amusement park-like anniversary party. Once the giant doors open to the party, the riders follow the Gru residence, now riding on a hovering vehicle, avoiding the party decorations all the way to the stage. Once there, Gru congratulates us of being successful in their training. However, a rocket is fired at the Minion Gun, right next to Gru. He protects his daughters, however, the gun breaks and goes off on the riders, causing the effects to be reversed, transforming the guests into humans again. Once this happens, Gru gets disappointed, realizing the riders are "human again", orders someone off-screen for the next troop.
Post-show[edit source | editbeta]
After the ride, the door to some sort of dance party are opened. with the public dancing on Boogie Fever, along with a costumed Minion.[3]
Gift shop[edit source | editbeta]
In May 2012, the ride's gift shop Super Silly Stuff opened,[12] replacing the Nickstuff store. The store sells Despicable Me-related merchandise. The store is themed to the carnival Gru, Margo, Edith, and Agnes visit in the original film.Despicable Me: Minion Mayhem
From Wikipedia, the free encyclopedia

This article may be written from a fan's point of view, rather than a neutral point of view. Please clean it up to conform to a higher standard of quality, and to make it neutral in tone. (June 2013)
Despicable Me: Minion Mayhem
DespicableMeMinionMayhem.jpg
Despicable Me Minion Mayhem building.jpg
The Despicable Me: Minion Mayhem show building
[hide]Universal Studios Florida
Area	Production Central
Status	Operating
Soft opening date	June 9, 2012
Opening date	July 2, 2012-present[1]
Replaced	Jimmy Neutron's Nicktoon Blast (2003–2011)
[hide]Universal Studios Hollywood
Area	Upper Lot
Status	Under construction
Opening date	April 10, 2014
Replaced	T2 3-D: Battle Across Time
General statistics
Attraction type	4-D Simulator ride[2]
Manufacturer	Intamin
Designer	Universal Creative
Illumination Entertainment
Reel FX
Theme	Despicable Me
Riders per vehicle	8
Rows	2
Riders per row	4
Duration	8
Height restriction	40 in (102 cm)
Pre-show host	Gru (Steve Carell)[3]
Ride hosts	Margo (Miranda Cosgrove), Edith (Dana Gaier) , Agnes (Elsie Fisher)[4]
Despicable Me: Minion Mayhem is a simulator ride attraction at Universal Studios Florida and coming on April 10, 2014 to Universal Studios Hollywood. The attraction is based on Universal Studios and Illumination Entertainment's 2010 animated film Despicable Me and employs the use of 3-D HD digital animation. The attraction replaced Jimmy Neutron's Nicktoon Blast in Florida and will be replacing Terminator 2 3D in Hollywood.
Contents  [hide] 
1 History
2 Overview
2.1 Experience
2.1.1 Queue
2.1.2 First pre-show room (Gru's living room)
2.1.3 Second pre-show room (Gru's laboratory)
2.1.4 Ride
2.1.5 Post-show
2.2 Gift shop
3 Accolades
4 See also
5 References
6 External links
History[edit source | editbeta]



Some theming surrounding the ride at Universal Studios Florida
In March 2011, Universal Studios Florida announced that Jimmy Neutron's Nicktoon Blast would be closing to make way for a new attraction due to Nick no longer airing the show mentioned on the ride. The ride began seasonal operations on April 1, 2011, before officially closing on August 18, 2011.[5][6] On April 14, 2011, Universal Orlando Resort began a teaser campaign on their Facebook page where weekly hints were released leading up to the announcement of their upcoming attraction.[7][8] On May 19, 2011, the attraction was officially announced at a live webcast at Universal Orlando Resort. Universal Parks & Resorts also announced a major refurbishment of The Amazing Adventures of Spider-Man at Islands of Adventure on the same day.[2][9]
Construction for the Despicable Me attraction at Universal Studios Florida began in mid-August 2011, with the removal the former Jimmy Neutron ride.[10] After a period of construction spanning several months, the attraction soft opened to the public on June 9, 2012.[11] On July 2, 2012, Despicable Me: Minion Mayhem officially opened to the public.[4] The ride's gift shop, Super Silly Stuff, had opened prior to the ride in May 2012.[12]
On March 11, 2013, Universal Studios Hollywood announced that they would open Despicable Me: Minion Mayhem in 2014.[13] The announcement followed a series of rumours stating the park would replace the recently-closed T2 3-D: Battle Across Time attraction with a Despicable Me attraction.[14][15] A later announcement revealed the surrounding area would be themed as Super Silly Fun Land.[16]
On August 3, 2013, it was announced that Despicable Me: Minion Mayhem's Hollywood attraction would open on April 10, 2014.
Overview[edit source | editbeta]

Universal Orlando Resort announced that the attraction is being designed by their Universal Creative company in association with Illumination Entertainment and Despicable Me film producer Chris Meledandri. The ride is a motion simulator and employs the use of high-definition 3-D Infitec projection systems, and features multiple characters from the film, including Gru, Margo, Edith, Agnes and the Minions.
The attraction at Universal Studios Florida is located in Soundstage 42 in the Production Central area. The soundstage previously housed The Funtastic World of Hanna-Barbera 1990 until 2002 and Jimmy Neutron's Nicktoon Blast from 2003 until 2011.[3] The attraction at Universal Studios Hollywood will be located on the former site of T2 3-D: Battle Across Time on the Upper Lot.[14]
Experience[edit source | editbeta]
Queue[edit source | editbeta]
When people are waiting in line for the ride, they get to learn what a Minion really needs, the profiles of Gru, Dr. Nefario, Margo, Edith, Agnes and the Minions; they also get to see a revision of the original Despicable Me film. The guests are also given a Minion-quiz, to let them test themselves to see if they are fully prepared to be a Minion. The Hollywood version will have details to look more like Gru's house than the one in Florida. The answers in the quiz are always the last options.
First pre-show room (Gru's living room)[edit source | editbeta]
First, the guests enter the room and get Minion Goggles (3-D glasses). Then the pre-show starts when Gru, the world's #1 supervillain, welcomes guests to his house and explains them that they will be trained as minions, but he also warns us that "danger lurks, at every turn". Just as he was about to begin, however, Agnes, Gru's youngest daughter, appears on-screen, chasing Kyle, Gru's pet dog, despite Gru saying that he's "trying to be evil". Then, Margo and Edith, Gru's other daughters, appear on-screen: the brown-eyed oldest, Margo, appears right next to Gru, asking what he is doing, but Gru explains he's fine. The grey-eyed tomboy, Edith, makes weird faces in front of the camera. Then Agnes appears in front of the camera along with Kyle: the former asks to the audience: "Who's the cutest doggie in the world?", while kissing the latter on the camera at the same time, leaving a smudge, then continues chasing him. Gru, however, attempts to maintain his concentration, but loses it when he sees Margo cleaning Kyle's smudge. All of a sudden, Edith appears with some sock puppet in front of the camera, mimicking the voice of an evil clown. During Edith's imitation, Agnes chases Kyle. Gru and Margo, on the other hand start to grow suspicious of Edith's behaviour. Once Gru realizes that Edith and Agnes are going way too far, he orders them to listen up and just let him explain. Once Edith and Agnes start to heed Gru's orders, Edith explains that she, along with her siblings, are "just trying to keep things interesting". Gru forces the girls to keep themselves quiet and stand still. He introduces his daughters to the audience who, in response, greet the audience. After the introduction for Gru's daughters, Gru forces the public to take a three-hour written exam, but Margo explains him not to do that, since they haven't planned it. Gru, who did not think it's a good idea, unwillingly accepts and begins by explaining about Minion Goggles, the latest invention created by his sidekick, Dr. Nefario. He tested them on Gru's very own Minions to see how they work, and what the guests should be doing during the demonstration. Gru explains to the audience that they have Nefario's guarantee. This means that the Minion Goggles will last five times longer than the person wearing them. He also explains the safety violations for the goggles, like not putting them on until you've got the permission to do that, also that it is prohibited to use the Minion Goggles to hold in anything that looks like food to us. Afterwards, Gru orders the guests to proceed to his lab and also forces them to heed his warns. Margo, Gru's oldest daughter, on the other hand, orders the guests to have fun, but Gru doesn't even smile, so the girls try to spruce him up: Edith by playing with the sock puppet, imitating the voice of an evil clown at the same time, Agnes by saying: "Come on! Smile, Gru!". However, Gru responds in a bored tone with: "I hate smiling". Then a voice tells the guests safety introductions. Next, the doors open to Gru's laboratory with Gru saying what to do while walking in the room; the guests should stay in their row and not put on their Minion Goggles yet until they're told to do so.
Second pre-show room (Gru's laboratory)[edit source | editbeta]
In this pre-show room, just before the ride, Gru, along with some Minions, enter the room and explains the public are there for a reason: henching for the world's #1 supervillain. Gru wants to take time to interview the new recruits one at a time, but explains he's working on something really big today, so he does the interviewing very fast. As Gru is about to begin, however, a Minion, holding a blueprint, interrupts him. Gru excuses the audience to wait a moment so he can read the blueprint the Minion is holding. Gru finds the blueprint good and orders the Minion to tell Doctor Nefario, his assistant, for more dynamite. When the Minion leaves, only to envolve an argument with another throwing a piece of wadded paper at him, Gru explains his plan of turning everyday ordinary human beings into Minions using a kind of device, called the Minion Gun, created by Doctor Nefario. He tested out on some human beings to see how good it functions, transforming them into Minions of all different shapes and sizes. Next, the whole audience is given a routine body scan to make sure there aren't any "human germs" in the lab by using high-density lasers. However, the scan ends up with a warning: Gru gets disappointed when that some of the guests "have not showered in like a week". This causes the Minions to make fun of the public, but they stop laughing and are forced to get back to work when Gru glares at them. Lucky for the audience, Gru is in a bit of a time crunch and warns for the rest of the audience that he will hit them with his "Pistola de pedo" if any are thinking on backing out. Next, Gru asks: "So what will it be? Minions... or farts?". However, at the same moment, Edith interrupts and imitates her father. Gru, realizing his daughters have showed up, explains to the audience to ignore them. All of a sudden, some of the Minions appear holding mega-phones, but are forced to retreat when Gru explains: "Not now!", and shoos them away. Agnes and Margo start to explain to the audience that they shouldn't be scared of Gru by calling him "just a big, bald teddy bear". The confident Gru, however, wants to prove it to his daughters by pressing a button on his computer, which causes the fart gun to go off. Because of the stench, Edith and Agnes are forced to cover their mouths, Margo and the Minions to hold their breaths. They stop doing it when Edith sniffs the room, then picks up the scent, explaining it "smells like bananas". This causes the Minions to start going mad and some lick on window. When this happens, the girls act natural. Gru, on the other hand, gets annoyed with the unexpected antics of his henchmen. Afterwards, Agnes wants to give a present to Gru. He loves to accept it, but tells her to wait, explaining that he's going to be really behind schedule; also, he has to train the public who are on the verge of becoming Minions. Margo eagerly asks Gru if the trio can assist him by training the crowd: Gru thinks for a moment, but responds with: "I do not think so." However, as Edith starts begging, Gru says that the training is very technical. It all becomes clear when Edith explains that her foster father has been reluctant for a while, not wanting to accept his daughters' willings. When Margo and Edith finally explain Gru, who's busy shooing the Minions holding fire-works away, that the Minion training is "not like it's rocket science, or even fourth grade science" and that "a training monkey can do it", he agrees irate, calmly explaining to the audience that he will leave his daughters in charge of the training. Once Edith hears this, she explains to the guests that they "are so doomed". Gru, however, orders the public to not listen to her, despite him saying that Edith might be right for once. He leaves the room and wishes the guests good luck, at exactly the same time Agnes attempts to catch up with him to give him her anniversary gift of the girls adoption. Edith, however, explains to her younger sibling that Gru already left, which made Agnes filled with sorrow, realizing that Gru may have forgotten the anniversary of their adoption, but Margo says her that he won't, also that they got an important job to do: training the audience into Minions for Gru's bidding. Margo's determination to initiate the training causes Edith to be pumped up and say: "Let's do this!". After that, the doors to the ride are opened, the public is let through and Margo instructs to the audience to not put on their minion goggles until they're told to do so by a lab assistant.
Ride[edit source | editbeta]
Once the ride begins, riders see Gru's daughters riding on some kind of hovering UFO-like vehicle. Once Edith orders Kevin the Minion to zap the riders, he pulls a lever which activates the Minion Gun, transforming the riders into Minions. Next, the riders get pushed down a long tube to training by the girls. Margo welcomes the guests to the Minion Training Grounds. As the riders slide down and avoid the water sprayers, Margo instructs the guests: "This where we test your "strength, speed and ability to not die". The audience is also forced to dodge deadly security lasers, a giant cactus, and fly swatters along the way. Once some Minions, holding "Stop" signs, force us to stop running, two Minions are being punched away by a giant boxing glove, then the riders are being punched down by another, along with two Minions, and unexpectedly stop at a giant gap. This is where Gru's daughters want us to test our problem solving and teamwork skills; the guests are forced to create a giant, human hand-like Minion-chain to get across the other side. However, once Edith uses a giant banana as bait, the Minions suddenly get distracted by it, causing the Minion-chain to break apart and the riders to accidentally fall down a long hole to the bomb transportation sector, which is a restricted area; Gru also warns us that it might be dangerous. When the girls are helping us to get out of the sector, the worst happens: bombs start to explode in the bomb transportation room; when the girls get startled by the explosions, Agnes loses her gift and the guests attempt to retrieve it by dodging the bombs, also the giant machinery on the verge of crushing the riders and the girls into pieces, like giant razor sharp blades, with Agnes barely catching it. However, when the two Minions that the guests used to follow start to fall down, Gru arrives, attempting to catch them, but he falls down along with them, only to be nearly saved by grabbing hold to the hovering vehicle that Margo, Edith and Agnes are riding. However, as Agnes is about to give her present to Gru, her adoptive father, he gets unexpectedly knocked off the vehicle by a giant mallet unseen. The girls continue, but Gru gets hit straight at the riders. The riders then suddenly end up, along with Gru's daughters, who, because of an accidental push given by us, get pushed off their vehicle, in another sector. Once in another area, Margo, Edith and Agnes are starting to float and Margo realises that she, along with the others, are in the anti-gravity recycling room. To make matters worse, a giant robot arm rises from under the girls, ending themselves up being surrounded by claws and other hazards, but they hold on to it. When this happens, Margo warns her younger siblings to just remain hold to the giant grooves of the wire to avoid being crushed. However, one of the crushers nearby startles Gru's daughters, causing Agnes to lose her present. Seeing her present for Gru floating away, Agnes is forced to risk her life and lets her go of Margo's foot and attempts to float off to recover Gru's one-year anniversary gift, narrowly avoiding a bomb, despite Margo warning her to not to. However, once Agnes recovers her one-year present by barely avoiding a giant spiked crusher, she starts floating into a giant oscillating fan, when, all of a sudden, Gru arrives, blocking the crushers with an steel beam, then saves Agnes. Seeing each other, Gru and Agnes give themselves a hug when suddenly the smashers start moving again, leaving Gru no choice but to summon all of his strength to stop the giant crusher just in time, saving all of them, including himself, from being smashed. Because of Gru's strength and pressure that he used to both save Agnes and stop the giant crusher, the anti-gravity recycling room's power goes down, and the riders, along with Gru and his daughters, land safely on a crowd of Minions. Once both the Gru residence and the guests land safely on the Minions, Gru opens Agnes' present, revealing a doll replica of himself. Despite that Agnes says "it's a little squashed", Gru finds it "absolutely perfect", and gives his daughters a hug, also giving the trio "a little something": an amusement park-like anniversary party. Once the giant doors open to the party, the riders follow the Gru residence, now riding on a hovering vehicle, avoiding the party decorations all the way to the stage. Once there, Gru congratulates us of being successful in their training. However, a rocket is fired at the Minion Gun, right next to Gru. He protects his daughters, however, the gun breaks and goes off on the riders, causing the effects to be reversed, transforming the guests into humans again. Once this happens, Gru gets disappointed, realizing the riders are "human again", orders someone off-screen for the next troop.
Post-show[edit source | editbeta]
After the ride, the door to some sort of dance party are opened. with the public dancing on Boogie Fever, along with a costumed Minion.[3]
Gift shop[edit source | editbeta]
In May 2012, the ride's gift shop Super Silly Stuff opened,[12] replacing the Nickstuff store. The store sells Despicable Me-related merchandise. The store is themed to the carnival Gru, Margo, Edith, and Agnes visit in the original film.Despicable Me: Minion Mayhem
From Wikipedia, the free encyclopedia

This article may be written from a fan's point of view, rather than a neutral point of view. Please clean it up to conform to a higher standard of quality, and to make it neutral in tone. (June 2013)
Despicable Me: Minion Mayhem
DespicableMeMinionMayhem.jpg
Despicable Me Minion Mayhem building.jpg
The Despicable Me: Minion Mayhem show building
[hide]Universal Studios Florida
Area	Production Central
Status	Operating
Soft opening date	June 9, 2012
Opening date	July 2, 2012-present[1]
Replaced	Jimmy Neutron's Nicktoon Blast (2003–2011)
[hide]Universal Studios Hollywood
Area	Upper Lot
Status	Under construction
Opening date	April 10, 2014
Replaced	T2 3-D: Battle Across Time
General statistics
Attraction type	4-D Simulator ride[2]
Manufacturer	Intamin
Designer	Universal Creative
Illumination Entertainment
Reel FX
Theme	Despicable Me
Riders per vehicle	8
Rows	2
Riders per row	4
Duration	8
Height restriction	40 in (102 cm)
Pre-show host	Gru (Steve Carell)[3]
Ride hosts	Margo (Miranda Cosgrove), Edith (Dana Gaier) , Agnes (Elsie Fisher)[4]
Despicable Me: Minion Mayhem is a simulator ride attraction at Universal Studios Florida and coming on April 10, 2014 to Universal Studios Hollywood. The attraction is based on Universal Studios and Illumination Entertainment's 2010 animated film Despicable Me and employs the use of 3-D HD digital animation. The attraction replaced Jimmy Neutron's Nicktoon Blast in Florida and will be replacing Terminator 2 3D in Hollywood.
Contents  [hide] 
1 History
2 Overview
2.1 Experience
2.1.1 Queue
2.1.2 First pre-show room (Gru's living room)
2.1.3 Second pre-show room (Gru's laboratory)
2.1.4 Ride
2.1.5 Post-show
2.2 Gift shop
3 Accolades
4 See also
5 References
6 External links
History[edit source | editbeta]



Some theming surrounding the ride at Universal Studios Florida
In March 2011, Universal Studios Florida announced that Jimmy Neutron's Nicktoon Blast would be closing to make way for a new attraction due to Nick no longer airing the show mentioned on the ride. The ride began seasonal operations on April 1, 2011, before officially closing on August 18, 2011.[5][6] On April 14, 2011, Universal Orlando Resort began a teaser campaign on their Facebook page where weekly hints were released leading up to the announcement of their upcoming attraction.[7][8] On May 19, 2011, the attraction was officially announced at a live webcast at Universal Orlando Resort. Universal Parks & Resorts also announced a major refurbishment of The Amazing Adventures of Spider-Man at Islands of Adventure on the same day.[2][9]
Construction for the Despicable Me attraction at Universal Studios Florida began in mid-August 2011, with the removal the former Jimmy Neutron ride.[10] After a period of construction spanning several months, the attraction soft opened to the public on June 9, 2012.[11] On July 2, 2012, Despicable Me: Minion Mayhem officially opened to the public.[4] The ride's gift shop, Super Silly Stuff, had opened prior to the ride in May 2012.[12]
On March 11, 2013, Universal Studios Hollywood announced that they would open Despicable Me: Minion Mayhem in 2014.[13] The announcement followed a series of rumours stating the park would replace the recently-closed T2 3-D: Battle Across Time attraction with a Despicable Me attraction.[14][15] A later announcement revealed the surrounding area would be themed as Super Silly Fun Land.[16]
On August 3, 2013, it was announced that Despicable Me: Minion Mayhem's Hollywood attraction would open on April 10, 2014.
Overview[edit source | editbeta]

Universal Orlando Resort announced that the attraction is being designed by their Universal Creative company in association with Illumination Entertainment and Despicable Me film producer Chris Meledandri. The ride is a motion simulator and employs the use of high-definition 3-D Infitec projection systems, and features multiple characters from the film, including Gru, Margo, Edith, Agnes and the Minions.
The attraction at Universal Studios Florida is located in Soundstage 42 in the Production Central area. The soundstage previously housed The Funtastic World of Hanna-Barbera 1990 until 2002 and Jimmy Neutron's Nicktoon Blast from 2003 until 2011.[3] The attraction at Universal Studios Hollywood will be located on the former site of T2 3-D: Battle Across Time on the Upper Lot.[14]
Experience[edit source | editbeta]
Queue[edit source | editbeta]
When people are waiting in line for the ride, they get to learn what a Minion really needs, the profiles of Gru, Dr. Nefario, Margo, Edith, Agnes and the Minions; they also get to see a revision of the original Despicable Me film. The guests are also given a Minion-quiz, to let them test themselves to see if they are fully prepared to be a Minion. The Hollywood version will have details to look more like Gru's house than the one in Florida. The answers in the quiz are always the last options.
First pre-show room (Gru's living room)[edit source | editbeta]
First, the guests enter the room and get Minion Goggles (3-D glasses). Then the pre-show starts when Gru, the world's #1 supervillain, welcomes guests to his house and explains them that they will be trained as minions, but he also warns us that "danger lurks, at every turn". Just as he was about to begin, however, Agnes, Gru's youngest daughter, appears on-screen, chasing Kyle, Gru's pet dog, despite Gru saying that he's "trying to be evil". Then, Margo and Edith, Gru's other daughters, appear on-screen: the brown-eyed oldest, Margo, appears right next to Gru, asking what he is doing, but Gru explains he's fine. The grey-eyed tomboy, Edith, makes weird faces in front of the camera. Then Agnes appears in front of the camera along with Kyle: the former asks to the audience: "Who's the cutest doggie in the world?", while kissing the latter on the camera at the same time, leaving a smudge, then continues chasing him. Gru, however, attempts to maintain his concentration, but loses it when he sees Margo cleaning Kyle's smudge. All of a sudden, Edith appears with some sock puppet in front of the camera, mimicking the voice of an evil clown. During Edith's imitation, Agnes chases Kyle. Gru and Margo, on the other hand start to grow suspicious of Edith's behaviour. Once Gru realizes that Edith and Agnes are going way too far, he orders them to listen up and just let him explain. Once Edith and Agnes start to heed Gru's orders, Edith explains that she, along with her siblings, are "just trying to keep things interesting". Gru forces the girls to keep themselves quiet and stand still. He introduces his daughters to the audience who, in response, greet the audience. After the introduction for Gru's daughters, Gru forces the public to take a three-hour written exam, but Margo explains him not to do that, since they haven't planned it. Gru, who did not think it's a good idea, unwillingly accepts and begins by explaining about Minion Goggles, the latest invention created by his sidekick, Dr. Nefario. He tested them on Gru's very own Minions to see how they work, and what the guests should be doing during the demonstration. Gru explains to the audience that they have Nefario's guarantee. This means that the Minion Goggles will last five times longer than the person wearing them. He also explains the safety violations for the goggles, like not putting them on until you've got the permission to do that, also that it is prohibited to use the Minion Goggles to hold in anything that looks like food to us. Afterwards, Gru orders the guests to proceed to his lab and also forces them to heed his warns. Margo, Gru's oldest daughter, on the other hand, orders the guests to have fun, but Gru doesn't even smile, so the girls try to spruce him up: Edith by playing with the sock puppet, imitating the voice of an evil clown at the same time, Agnes by saying: "Come on! Smile, Gru!". However, Gru responds in a bored tone with: "I hate smiling". Then a voice tells the guests safety introductions. Next, the doors open to Gru's laboratory with Gru saying what to do while walking in the room; the guests should stay in their row and not put on their Minion Goggles yet until they're told to do so.
Second pre-show room (Gru's laboratory)[edit source | editbeta]
In this pre-show room, just before the ride, Gru, along with some Minions, enter the room and explains the public are there for a reason: henching for the world's #1 supervillain. Gru wants to take time to interview the new recruits one at a time, but explains he's working on something really big today, so he does the interviewing very fast. As Gru is about to begin, however, a Minion, holding a blueprint, interrupts him. Gru excuses the audience to wait a moment so he can read the blueprint the Minion is holding. Gru finds the blueprint good and orders the Minion to tell Doctor Nefario, his assistant, for more dynamite. When the Minion leaves, only to envolve an argument with another throwing a piece of wadded paper at him, Gru explains his plan of turning everyday ordinary human beings into Minions using a kind of device, called the Minion Gun, created by Doctor Nefario. He tested out on some human beings to see how good it functions, transforming them into Minions of all different shapes and siz
es. Next, the whole audience is given a routine body scan to make sure there aren't any "human germs" in the lab by using high-density lasers. However, the scan ends up with a warning: Gru gets disappointed when that some of the guests "have not showered in like a week". This causes the Minions to make fun of the public, but they stop laughing and are forced to get back to work when Gru glares at them. Lucky for the audience, Gru is in a bit of a time crunch and warns for the rest of the audience that he will hit them with his "Pistola de pedo" if any are thinking on backing out. Next, Gru asks: "So what will it be? Minions... or farts?". However, at the same moment, Edith interrupts and imitates her father. Gru, realizing his daughters have showed up, explains to the audience to ignore them. All of a sudden, some of the Minions appear holding mega-phones, but are forced to retreat when Gru explains: "Not now!", and shoos them away. Agnes and Margo start to explain to the audience that they shouldn't be scared of Gru by calling him "just a big, bald teddy bear". The confident Gru, however, wants to prove it to his daughters by pressing a button on his computer, which causes the fart gun to go off. Because of the stench
, Edith and Agnes are forced to cover their mouths, Margo and the Minions to hold their breaths. They stop doing it when Edith sniffs the room, then picks up the scent, explaining it "smells like bananas". This causes the Minions to start going mad and some lick on window. When this happens, the girls act natural. Gru, on the other hand, gets annoyed with the unexpected antics of his henchmen. Afterwards, Agnes wants to give a present to Gru. He loves to accept it, but tells her to wait, explaining that he's going to be really behind schedule; also, he has to train the public who are on the verge of becoming Minions. Margo eagerly asks Gru if the trio can assist him by training the crowd: Gru thinks for a moment, but responds with: "I do not think so." However, as Edith starts begging, Gru says that the training is very technical. It all becomes clear when Edith explains that her foster father has been reluctant for a while, not wanting to accept his daughters' willings. When Margo and Edith fina
lly explain Gru, who's busy shooing the Minions holding fire-works away, that the Minion training is "not like it's rocket science, or even fourth grade science" and that "a training monkey can do it", he agrees irate, calmly explaining to the audience that he will leave his daughters in charge of the training. Once Edith hears this, she explains to the guests that they "are so doomed". Gru, however, orders the public to not listen to her, despite him saying that Edith might be right for once. He leaves the room and wishes the guests good luck, at exactly the same time Agnes attempts to catch up with him to give him her anniversary gift of the girls adoption. Edith, however, explains to her younger sibling that Gru already left, which made Agnes filled with sorrow, realizing that Gru may have forgotten the anniversary of their adoption, but Margo says her that he won't, also that they got an important job to do: training the audience into Minions for Gru's bidding. Margo's determination to initiate the training causes Edith to be pumped up and say: "Let's do this!". After that, the doors to the ride are opened, the public is let through and Margo instructs to the audience to not put on their minion goggles until they're told to do so by a lab assistant.
Ride[edit source | editbeta]
Once the ride begins, riders see Gru's daughters riding on some kind of hovering UFO-like vehicle. Once Edith orders Kevin the Minion to zap the riders, he pulls a lever which activates the Minion Gun, transforming the riders into Minions. Next, the riders get pushed down a long tube to training by the girls. Margo welcomes the guests to the Minion Training Grounds. As the riders slide down and avoid the water sprayers, Margo instructs the guests: "This where we test your "strength, speed and ability to not die". The audience is also forced to dodge deadly security lasers, a giant cactus, and fly swatters along the way. Once some Minions, holding "Stop" signs, force us to stop running, 
two Minions are being punched away by a giant boxing glove, then the riders are being punched down by another, along with two Minions, and unexpectedly stop at a giant gap. This is where Gru's daughters want us to test our problem solving and teamwork skills; the guests are forced to create a giant, human hand-like Minion-chain to get across the other side. However, once Edith uses a giant banana as bait, the Minions suddenly get distracted by it, causing the Minion-chain to break apart and the riders to accidentally fall down a long hole to the bomb transportation sector, which is a restricted area; Gru also warns us that it might be dangerous. When the girls are helping us to get out of the sector, the worst happens: bombs start to explode in the bomb transportation room; when the girls get startled by the explosions, Agnes loses her gift and the guests attempt to retrieve it by dodging the bombs, also the giant machinery on the verge of crushing the riders and the girls into pieces, like giant razor sharp blades, with Agnes barely catching it. However, when the two Minions that the guests used to follow start to fall down, Gru arrives, attempting to catch them, but he falls down along with them, only to be nearly saved by grabbing hold to the hovering vehicle that Margo, Edith and Agnes are riding. However, as Agnes is about to give her present to Gru, her adoptive father, he gets unexpectedly knocked off the vehicle by a giant mallet unseen. The girls continue, but Gru gets hit straight at the riders. The riders then suddenly end up, along with Gru's daughters, who, because of an accidental push given by us, get pushed off their vehicle, in another sector. Once in another area, Margo, Edith and Agnes are starting to float and Margo realises that she, along with the others, are in the anti-gravity recycling room. To make matters worse, a giant robot arm rises from under the girls, ending themselves up being surrounded by claws and other hazards, but they hold on to it. When this happens, Margo warns her younger siblings to just remain hold to the giant grooves of the wire to avoid being crushed. However, one of the crushers nearby startles Gru's daughters, causing Agnes to lose her present. Seeing her present for Gru floating away, Agnes is forced to risk her life and lets her go of Margo's foot and attempts to float off to recover Gru's one-year anniversary gift, narrowly avoiding a bomb, despite Margo warning her to not to. However, once Agnes recovers her one-year present by barely avoiding a giant spiked crusher, she starts floating into a giant oscillating fan, when, all of a sudden, Gru arrives, blocking the crushers with an steel beam, then saves Agnes. Seeing each other, Gru and Agnes give themselves a hug when suddenly the smashers start moving again, leaving Gru no choice but to summon all of his strength to stop the giant crusher just in time, saving all of them, including himself, from being smashed. Because of Gru's strength and pressure that he used to both save Agnes and stop the giant crusher, the anti-gravity recycling room's power goes down, and the riders, along with Gru and his daughters, land safely on a crowd of Minions. Once both the Gru residence and the guests land safely on the Minions, Gru opens Agnes' present, revealing a doll replica of himself. Despite that Agnes says "it's a little squashed", Gru finds it "absolutely perfect", and gives his daughters a hug, also giving the trio "a little something": an amusement park-like anniversary party. Once the giant doors open to the party, the riders follow the Gru residence, now riding on a hovering vehicle, avoiding the party decorations all the way to the stage. Once there, Gru congratulates us of being successful in their training. However, a rocket is fired at the Minion Gun, right next to Gru. He protects his daughters, however, the gun breaks and goes off on the riders, causing the effects to be reversed, transforming the guests into humans again. Once this happens, Gru gets disappointed, realizing the riders are "human again", orders someone off-screen for the next troop.
Post-show[edit source | editbeta]
After the ride, the door to some sort of dance party are opened. with the public dancing on Boogie Fever, along with a costumed Minion.[3]
Gift shop[edit source | editbeta]
In May 2012, the ride's gift shop Super Silly Stuff opened,[12] replacing the Nickstuff store. The store sells Despicable Me-related merchandise. The store is themed to the carnival Gru, Margo, Edith, and Agnes visit in the original film.internationalization, diagnostics, the C library subset, etc.).
Most C++ compilers, and all major ones, provide a standards conforming implementation of the C++ standard library.
Parsing and processing C++ source code

It is relatively difficult to write a good C++ parser with classic parsing algorithms such as LALR(1).[34] This is partly the result of the C++ grammar not being LALR. Because of this, there are very few tools for analyzing or performing non-trivial transformations (e.g., refactoring) of existing code. One way to handle this difficulty is to choose a different syntax. More powerful parsers, such as GLR parsers, can be substantially simpler (though slower).
Parsing (in the literal sense of producing a syntax tree) is not the most difficult problem in building a C++ processing tool. Such tools must also have the same understanding of the meaning of the identifiers in the program as a compiler might have. Practical systems for processing C++ must then not only parse the source text, but be able to resolve for each identifier precisely which definition applies (e.g., they must correctly handle C++'s complex scoping rules) and what its type is, as well as the types of larger expressions.
Finally, a practical C++ processing tool must be able to handle the variety of C++ dialects used in practice (such as that supported by the GNU Compiler Collection and that of Microsoft's Visual C++) and implement appropriate analyzers, source code transformers, and regenerate source text. Combining advanced parsing algorithms such as GLR with symbol table construction and program transformation machinery can enable the construction of arbitrary C++ tools.
Parsers do exist in all major compilers. Despite that only one compiler provides the parser in a format suitable for tool integration, Clang,[35] the parser is usable as a C++ (or C) library which is ready for integration into, i.e. an IDE.
Compatibility

Producing a reasonably standards-compliant C++ compiler has proven to be a difficult task for compiler vendors in general. For many years, different C++ compilers implemented the C++ language to different levels of compliance to the standard, and their implementations varied widely in some areas such as partial template specialization. Recent releases of most popular C++ compilers support almost all of the C++ 1998 standard.[36]
To give compiler vendors greater freedom, the C++ standards committee decided not to dictate the implementation of name mangling, exception handling, and other implementation-specific features. The downside of this decision is that object code produced by different compilers is expected to be incompatible. There were, however, attempts to standardize compilers for particular machines or operating systems (for example C++ ABI),[37] though they seem to be largely abandoned now.
Exported templates
One particular point of contention is the export keyword, intended to allow template definitions to be separated from their declarations. The first widely available compiler to implement export was Comeau C/C++, in early 2003 (five years after the release of the standard); in 2004, the beta compiler of Borland C++ Builder X was also released with export. Both of these compilers are based on the EDG C++ front end. Other compilers such as GCC do not support it at all. Beginning ANSI C++ by Ivor Horton provides example code with the keyword that will not compile in most compilers, without reference to this problem. Herb Sutter, former convener of the C++ standards committee, recommended that export be removed from future versions of the C++ standard.[38] During the March 2010 ISO C++ standards meeting, the C++ standards committee voted to remove exported templates entirely from C++11, but reserve the keyword for future use.[39]
With C
For more details on this topic, see Compatibility of C and C++.
Gnome globe current event.svg
This section's factual accuracy may be compromised due to out-of-date information. Please update this article to reflect recent events or newly available information. (September 2011)
C++ is often considered to be a superset of C, but this is not strictly true.[40] Most C code can easily be made to compile correctly in C++, but there are a few differences that cause some valid C code to be invalid or behave differently in C++.
One commonly encountered difference is that C allows implicit conversion from void* to other pointer types, but C++ does not (for type safety reasons). Another common portability issue is that C++ defines many new keywords, such as new and class, which may be used as identifiers (e.g. variable names) in a C program.
Some incompatibilities have been removed by the 1999 revision of the C standard (C99), which now supports C++ features such as line comments (//), and declarations mixed with code. On the other hand, C99 introduced a number of new features that C++ did not support, were incompatible or redundant in C++ (e.g. complex, use the complex class in the standard library instead), such as variable-length arrays, native complex-number types, designated initializers, compound literals, the boolean typedef (in C++ it is a fundamental type) and the restrict keyword.[41] Some of the C99-introduced features were included in the subsequent version of the C++ standard, C++11:[42][43][44]
C99 preprocessor (including variadic macros, wide/narrow literal concatenation, wider integer arithmetic)
_Pragma()
long long
__func__
Headers:
cstdbool (stdbool.h)
cstdint (stdint.h)
cinttypes (inttypes.h).
To intermix C and C++ code, any function declaration or definition that is to be called from/used both in C and C++ must be declared with C linkage by placing it within an extern "C" {/*...*/} block. Such a function may not rely on features depending on name mangling (i.e., function overloading).
Criticism

C++ is sometimes compared unfavorably with more strictly object-oriented languages on the basis that it enables programmers to "mix and match" declarative, functional, generic, modular, and procedural programming styles with object-oriented programming, rather than strictly enforcing a single style, although C++ is intentionally a multi-paradigm language.
